<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.2.4" created="2015-08-21 18:41" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Optinalysis</title>
	<link>http://www.nikhilgopal.com</link>
	<description>Woohoo! Experiments!</description>
	<pubDate>Fri, 21 Aug 2015 18:41:57 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.nikhilgopal.com</wp:base_site_url>
	<wp:base_blog_url>http://www.nikhilgopal.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>nikhilgopal@gmail.com</wp:author_login><wp:author_email>nikhilgopal@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Nikhil Gopal]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>20</wp:term_id><wp:category_nicename>23andme</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[23andMe]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>analysis</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[analysis]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>applescript</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[applescript]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>bioinformatics</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[bioinformatics]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>code-optimization</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[code optimization]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>goals</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[goals]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>22</wp:term_id><wp:category_nicename>graph</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[graph]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>ios</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[iOS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>micropost</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[micropost]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>philosophy</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[philosophy]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>14</wp:term_id><wp:category_nicename>productivity</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[productivity]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[python]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>quantitative-finance</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[quantitative finance]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>r</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[R]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>ror</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[RoR]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>ruby</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Ruby]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>shell</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[shell]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>statistics</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[statistics]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>2</wp:term_id><wp:category_nicename>travel</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[travel]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>19</wp:term_id><wp:category_nicename>utility</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[utility]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>24</wp:term_id><wp:category_nicename>visualization</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[visualization]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>r</wp:tag_slug><wp:tag_name><![CDATA[R]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>visualization</wp:tag_slug><wp:tag_name><![CDATA[visualization]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>21</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>navigation</wp:term_slug><wp:term_name><![CDATA[Navigation]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=4.2.4</generator>

	<item>
		<title>Research</title>
		<link>http://www.nikhilgopal.com/106/</link>
		<pubDate>Thu, 02 Jan 2014 06:33:19 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2014-01-01 22:33:19</wp:post_date>
		<wp:post_date_gmt>2014-01-02 06:33:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>106</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation"><![CDATA[Navigation]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[105]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Blog</title>
		<link>http://www.nikhilgopal.com/blog/</link>
		<pubDate>Thu, 02 Jan 2014 21:55:28 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2014-01-02 13:55:28</wp:post_date>
		<wp:post_date_gmt>2014-01-02 21:55:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation"><![CDATA[Navigation]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[112]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nikhil_beach</title>
		<link>http://www.nikhilgopal.com/lab/nikhil_beach/</link>
		<pubDate>Fri, 10 Jan 2014 22:09:03 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/01/nikhil_beach.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2014-01-10 14:09:03</wp:post_date>
		<wp:post_date_gmt>2014-01-10 22:09:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nikhil_beach</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>105</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/01/nikhil_beach.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/01/nikhil_beach.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:375;s:6:"height";i:500;s:4:"file";s:25:"2014/01/nikhil_beach.jpeg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"nikhil_beach-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:25:"nikhil_beach-225x300.jpeg";s:5:"width";i:225;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:14:"portfolio-wall";a:4:{s:4:"file";s:25:"nikhil_beach-375x470.jpeg";s:5:"width";i:375;s:6:"height";i:470;s:9:"mime-type";s:10:"image/jpeg";}s:17:"portfolio-related";a:4:{s:4:"file";s:25:"nikhil_beach-360x360.jpeg";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}s:12:"mobile-thumb";a:4:{s:4:"file";s:25:"nikhil_beach-320x426.jpeg";s:5:"width";i:320;s:6:"height";i:426;s:9:"mime-type";s:10:"image/jpeg";}s:12:"intro-avatar";a:4:{s:4:"file";s:25:"nikhil_beach-276x276.jpeg";s:5:"width";i:276;s:6:"height";i:276;s:9:"mime-type";s:10:"image/jpeg";}s:9:"rss-thumb";a:4:{s:4:"file";s:25:"nikhil_beach-300x400.jpeg";s:5:"width";i:300;s:6:"height";i:400;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nikhil_ghana_mountain</title>
		<link>http://www.nikhilgopal.com/lab/nikhil_ghana_mountain/</link>
		<pubDate>Fri, 10 Jan 2014 22:09:21 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/01/nikhil_ghana_mountain.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2014-01-10 14:09:21</wp:post_date>
		<wp:post_date_gmt>2014-01-10 22:09:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nikhil_ghana_mountain</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>105</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/01/nikhil_ghana_mountain.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/01/nikhil_ghana_mountain.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:33:"2014/01/nikhil_ghana_mountain.jpg";s:5:"sizes";a:13:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:34:"nikhil_ghana_mountain-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:6:"single";a:4:{s:4:"file";s:35:"nikhil_ghana_mountain-1440x1080.jpg";s:5:"width";i:1440;s:6:"height";i:1080;s:9:"mime-type";s:10:"image/jpeg";}s:13:"portfolio-big";a:4:{s:4:"file";s:35:"nikhil_ghana_mountain-1440x1080.jpg";s:5:"width";i:1440;s:6:"height";i:1080;s:9:"mime-type";s:10:"image/jpeg";}s:15:"portfolio-small";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-820x615.jpg";s:5:"width";i:820;s:6:"height";i:615;s:9:"mime-type";s:10:"image/jpeg";}s:14:"portfolio-wall";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-470x470.jpg";s:5:"width";i:470;s:6:"height";i:470;s:9:"mime-type";s:10:"image/jpeg";}s:18:"portfolio-lightbox";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-670x502.jpg";s:5:"width";i:670;s:6:"height";i:502;s:9:"mime-type";s:10:"image/jpeg";}s:17:"portfolio-related";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-360x360.jpg";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}s:14:"single-sidebar";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-760x570.jpg";s:5:"width";i:760;s:6:"height";i:570;s:9:"mime-type";s:10:"image/jpeg";}s:12:"mobile-thumb";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-320x240.jpg";s:5:"width";i:320;s:6:"height";i:240;s:9:"mime-type";s:10:"image/jpeg";}s:12:"intro-avatar";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-276x276.jpg";s:5:"width";i:276;s:6:"height";i:276;s:9:"mime-type";s:10:"image/jpeg";}s:9:"rss-thumb";a:4:{s:4:"file";s:33:"nikhil_ghana_mountain-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";d:3;s:6:"credit";s:0:"";s:6:"camera";s:27:"Canon PowerShot ELPH 330 HS";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1347003555;s:9:"copyright";s:0:"";s:12:"focal_length";s:3:"4.3";s:3:"iso";s:3:"160";s:13:"shutter_speed";s:7:"0.00125";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nikhil_headshot</title>
		<link>http://www.nikhilgopal.com/lab/nikhil_headshot/</link>
		<pubDate>Fri, 10 Jan 2014 22:09:37 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/01/nikhil_headshot.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date>2014-01-10 14:09:37</wp:post_date>
		<wp:post_date_gmt>2014-01-10 22:09:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nikhil_headshot</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>105</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/01/nikhil_headshot.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/01/nikhil_headshot.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4752;s:6:"height";i:3168;s:4:"file";s:28:"2014/01/nikhil_headshot.jpeg";s:5:"sizes";a:13:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"nikhil_headshot-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:28:"nikhil_headshot-300x200.jpeg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:29:"nikhil_headshot-1024x682.jpeg";s:5:"width";i:1024;s:6:"height";i:682;s:9:"mime-type";s:10:"image/jpeg";}s:6:"single";a:4:{s:4:"file";s:29:"nikhil_headshot-1440x960.jpeg";s:5:"width";i:1440;s:6:"height";i:960;s:9:"mime-type";s:10:"image/jpeg";}s:13:"portfolio-big";a:4:{s:4:"file";s:29:"nikhil_headshot-1440x960.jpeg";s:5:"width";i:1440;s:6:"height";i:960;s:9:"mime-type";s:10:"image/jpeg";}s:15:"portfolio-small";a:4:{s:4:"file";s:28:"nikhil_headshot-820x546.jpeg";s:5:"width";i:820;s:6:"height";i:546;s:9:"mime-type";s:10:"image/jpeg";}s:14:"portfolio-wall";a:4:{s:4:"file";s:28:"nikhil_headshot-470x470.jpeg";s:5:"width";i:470;s:6:"height";i:470;s:9:"mime-type";s:10:"image/jpeg";}s:18:"portfolio-lightbox";a:4:{s:4:"file";s:28:"nikhil_headshot-670x446.jpeg";s:5:"width";i:670;s:6:"height";i:446;s:9:"mime-type";s:10:"image/jpeg";}s:17:"portfolio-related";a:4:{s:4:"file";s:28:"nikhil_headshot-360x360.jpeg";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}s:14:"single-sidebar";a:4:{s:4:"file";s:28:"nikhil_headshot-760x506.jpeg";s:5:"width";i:760;s:6:"height";i:506;s:9:"mime-type";s:10:"image/jpeg";}s:12:"mobile-thumb";a:4:{s:4:"file";s:28:"nikhil_headshot-320x213.jpeg";s:5:"width";i:320;s:6:"height";i:213;s:9:"mime-type";s:10:"image/jpeg";}s:12:"intro-avatar";a:4:{s:4:"file";s:28:"nikhil_headshot-276x276.jpeg";s:5:"width";i:276;s:6:"height";i:276;s:9:"mime-type";s:10:"image/jpeg";}s:9:"rss-thumb";a:4:{s:4:"file";s:28:"nikhil_headshot-300x200.jpeg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";d:7.0999999999999996;s:6:"credit";s:0:"";s:6:"camera";s:19:"Canon EOS REBEL T1i";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1289898588;s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"45";s:3:"iso";s:3:"100";s:13:"shutter_speed";s:17:"0.016666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Research Venn Diagram</title>
		<link>http://www.nikhilgopal.com/lab/blank-venn-diagram-plain-1/</link>
		<pubDate>Sun, 19 Jan 2014 00:15:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/01/Blank-Venn-Diagram-Plain-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2014-01-18 16:15:00</wp:post_date>
		<wp:post_date_gmt>2014-01-19 00:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blank-venn-diagram-plain-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>105</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/01/Blank-Venn-Diagram-Plain-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/01/Blank-Venn-Diagram-Plain-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1760;s:6:"height";i:1360;s:4:"file";s:38:"2014/01/Blank-Venn-Diagram-Plain-1.png";s:5:"sizes";a:13:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-300x231.png";s:5:"width";i:300;s:6:"height";i:231;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:39:"Blank-Venn-Diagram-Plain-1-1024x791.png";s:5:"width";i:1024;s:6:"height";i:791;s:9:"mime-type";s:9:"image/png";}s:6:"single";a:4:{s:4:"file";s:40:"Blank-Venn-Diagram-Plain-1-1440x1112.png";s:5:"width";i:1440;s:6:"height";i:1112;s:9:"mime-type";s:9:"image/png";}s:13:"portfolio-big";a:4:{s:4:"file";s:40:"Blank-Venn-Diagram-Plain-1-1440x1112.png";s:5:"width";i:1440;s:6:"height";i:1112;s:9:"mime-type";s:9:"image/png";}s:15:"portfolio-small";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-820x633.png";s:5:"width";i:820;s:6:"height";i:633;s:9:"mime-type";s:9:"image/png";}s:14:"portfolio-wall";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-470x470.png";s:5:"width";i:470;s:6:"height";i:470;s:9:"mime-type";s:9:"image/png";}s:18:"portfolio-lightbox";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-670x517.png";s:5:"width";i:670;s:6:"height";i:517;s:9:"mime-type";s:9:"image/png";}s:17:"portfolio-related";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-360x360.png";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:9:"image/png";}s:14:"single-sidebar";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-760x587.png";s:5:"width";i:760;s:6:"height";i:587;s:9:"mime-type";s:9:"image/png";}s:12:"mobile-thumb";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-320x247.png";s:5:"width";i:320;s:6:"height";i:247;s:9:"mime-type";s:9:"image/png";}s:12:"intro-avatar";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-276x276.png";s:5:"width";i:276;s:6:"height";i:276;s:9:"mime-type";s:9:"image/png";}s:9:"rss-thumb";a:4:{s:4:"file";s:38:"Blank-Venn-Diagram-Plain-1-300x231.png";s:5:"width";i:300;s:6:"height";i:231;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Coffeescript+Visualization</title>
		<link>http://www.nikhilgopal.com/?page_id=207</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=207</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2014-02-03 21:48:17</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Regression: One Tool To Rule Them All (Kinda)</title>
		<link>http://www.nikhilgopal.com/?page_id=209</link>
		<pubDate>Wed, 12 Feb 2014 16:56:23 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=209</guid>
		<description></description>
		<content:encoded><![CDATA[Types of Regression and when they are typically used.

Linear Regression

Multivariate Regression

Proportional Hazard Regression

Logistic Regression

Poisson Regression

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2014-02-12 08:56:23</wp:post_date>
		<wp:post_date_gmt>2014-02-12 16:56:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot 2014-02-22 15.47.04</title>
		<link>http://www.nikhilgopal.com/getting-protein-protein-interaction-data-into-neo4j-with-python/screenshot-2014-02-22-15-47-04/</link>
		<pubDate>Sat, 22 Feb 2014 23:48:16 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.47.04.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2014-02-22 15:48:16</wp:post_date>
		<wp:post_date_gmt>2014-02-22 23:48:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-2014-02-22-15-47-04</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.47.04.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/Screenshot-2014-02-22-15.47.04.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:682;s:6:"height";i:216;s:4:"file";s:42:"2014/02/Screenshot-2014-02-22-15.47.04.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.47.04-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:41:"Screenshot-2014-02-22-15.47.04-300x95.png";s:5:"width";i:300;s:6:"height";i:95;s:9:"mime-type";s:9:"image/png";}s:14:"portfolio-wall";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.47.04-470x216.png";s:5:"width";i:470;s:6:"height";i:216;s:9:"mime-type";s:9:"image/png";}s:18:"portfolio-lightbox";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.47.04-670x212.png";s:5:"width";i:670;s:6:"height";i:212;s:9:"mime-type";s:9:"image/png";}s:17:"portfolio-related";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.47.04-360x216.png";s:5:"width";i:360;s:6:"height";i:216;s:9:"mime-type";s:9:"image/png";}s:12:"mobile-thumb";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.47.04-320x101.png";s:5:"width";i:320;s:6:"height";i:101;s:9:"mime-type";s:9:"image/png";}s:12:"intro-avatar";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.47.04-276x216.png";s:5:"width";i:276;s:6:"height";i:216;s:9:"mime-type";s:9:"image/png";}s:9:"rss-thumb";a:4:{s:4:"file";s:41:"Screenshot-2014-02-22-15.47.04-300x95.png";s:5:"width";i:300;s:6:"height";i:95;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot 2014-02-22 15.46.28</title>
		<link>http://www.nikhilgopal.com/getting-protein-protein-interaction-data-into-neo4j-with-python/screenshot-2014-02-22-15-46-28/</link>
		<pubDate>Sat, 22 Feb 2014 23:48:19 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.46.28.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date>2014-02-22 15:48:19</wp:post_date>
		<wp:post_date_gmt>2014-02-22 23:48:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-2014-02-22-15-46-28</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.46.28.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/Screenshot-2014-02-22-15.46.28.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1215;s:6:"height";i:768;s:4:"file";s:42:"2014/02/Screenshot-2014-02-22-15.46.28.png";s:5:"sizes";a:11:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:43:"Screenshot-2014-02-22-15.46.28-1024x647.png";s:5:"width";i:1024;s:6:"height";i:647;s:9:"mime-type";s:9:"image/png";}s:15:"portfolio-small";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-820x518.png";s:5:"width";i:820;s:6:"height";i:518;s:9:"mime-type";s:9:"image/png";}s:14:"portfolio-wall";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-470x470.png";s:5:"width";i:470;s:6:"height";i:470;s:9:"mime-type";s:9:"image/png";}s:18:"portfolio-lightbox";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-670x423.png";s:5:"width";i:670;s:6:"height";i:423;s:9:"mime-type";s:9:"image/png";}s:17:"portfolio-related";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-360x360.png";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:9:"image/png";}s:14:"single-sidebar";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-760x480.png";s:5:"width";i:760;s:6:"height";i:480;s:9:"mime-type";s:9:"image/png";}s:12:"mobile-thumb";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-320x202.png";s:5:"width";i:320;s:6:"height";i:202;s:9:"mime-type";s:9:"image/png";}s:12:"intro-avatar";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-276x276.png";s:5:"width";i:276;s:6:"height";i:276;s:9:"mime-type";s:9:"image/png";}s:9:"rss-thumb";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.46.28-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot 2014-02-22 15.45.18</title>
		<link>http://www.nikhilgopal.com/getting-protein-protein-interaction-data-into-neo4j-with-python/screenshot-2014-02-22-15-45-18/</link>
		<pubDate>Sat, 22 Feb 2014 23:48:22 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.45.18.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2014-02-22 15:48:22</wp:post_date>
		<wp:post_date_gmt>2014-02-22 23:48:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-2014-02-22-15-45-18</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.45.18.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/Screenshot-2014-02-22-15.45.18.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1215;s:6:"height";i:768;s:4:"file";s:42:"2014/02/Screenshot-2014-02-22-15.45.18.png";s:5:"sizes";a:11:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:43:"Screenshot-2014-02-22-15.45.18-1024x647.png";s:5:"width";i:1024;s:6:"height";i:647;s:9:"mime-type";s:9:"image/png";}s:15:"portfolio-small";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-820x518.png";s:5:"width";i:820;s:6:"height";i:518;s:9:"mime-type";s:9:"image/png";}s:14:"portfolio-wall";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-470x470.png";s:5:"width";i:470;s:6:"height";i:470;s:9:"mime-type";s:9:"image/png";}s:18:"portfolio-lightbox";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-670x423.png";s:5:"width";i:670;s:6:"height";i:423;s:9:"mime-type";s:9:"image/png";}s:17:"portfolio-related";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-360x360.png";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:9:"image/png";}s:14:"single-sidebar";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-760x480.png";s:5:"width";i:760;s:6:"height";i:480;s:9:"mime-type";s:9:"image/png";}s:12:"mobile-thumb";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-320x202.png";s:5:"width";i:320;s:6:"height";i:202;s:9:"mime-type";s:9:"image/png";}s:12:"intro-avatar";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-276x276.png";s:5:"width";i:276;s:6:"height";i:276;s:9:"mime-type";s:9:"image/png";}s:9:"rss-thumb";a:4:{s:4:"file";s:42:"Screenshot-2014-02-22-15.45.18-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot 2014-03-25 21.58.57</title>
		<link>http://www.nikhilgopal.com/visualizing-look-and-say-sequences-with-d3/screenshot-2014-03-25-21-58-57/</link>
		<pubDate>Wed, 26 Mar 2014 04:59:35 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/03/Screenshot-2014-03-25-21.58.57.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2014-03-25 21:59:35</wp:post_date>
		<wp:post_date_gmt>2014-03-26 04:59:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-2014-03-25-21-58-57</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>256</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/03/Screenshot-2014-03-25-21.58.57.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/03/Screenshot-2014-03-25-21.58.57.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:950;s:6:"height";i:488;s:4:"file";s:42:"2014/03/Screenshot-2014-03-25-21.58.57.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-300x154.png";s:5:"width";i:300;s:6:"height";i:154;s:9:"mime-type";s:9:"image/png";}s:15:"portfolio-small";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-820x421.png";s:5:"width";i:820;s:6:"height";i:421;s:9:"mime-type";s:9:"image/png";}s:14:"portfolio-wall";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-470x470.png";s:5:"width";i:470;s:6:"height";i:470;s:9:"mime-type";s:9:"image/png";}s:18:"portfolio-lightbox";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-670x344.png";s:5:"width";i:670;s:6:"height";i:344;s:9:"mime-type";s:9:"image/png";}s:17:"portfolio-related";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-360x360.png";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:9:"image/png";}s:14:"single-sidebar";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-760x390.png";s:5:"width";i:760;s:6:"height";i:390;s:9:"mime-type";s:9:"image/png";}s:12:"mobile-thumb";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-320x164.png";s:5:"width";i:320;s:6:"height";i:164;s:9:"mime-type";s:9:"image/png";}s:9:"rss-thumb";a:4:{s:4:"file";s:42:"Screenshot-2014-03-25-21.58.57-300x154.png";s:5:"width";i:300;s:6:"height";i:154;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sankey</title>
		<link>http://www.nikhilgopal.com/?attachment_id=308</link>
		<pubDate>Sat, 28 Jun 2014 01:10:44 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/06/sankey.js</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date>2014-06-27 18:10:44</wp:post_date>
		<wp:post_date_gmt>2014-06-28 01:10:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sankey</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/06/sankey.js</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/sankey.js]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jquery-ui</title>
		<link>http://www.nikhilgopal.com/?attachment_id=309</link>
		<pubDate>Sat, 28 Jun 2014 01:11:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/06/jquery-ui.js</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date>2014-06-27 18:11:00</wp:post_date>
		<wp:post_date_gmt>2014-06-28 01:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-ui</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/06/jquery-ui.js</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/jquery-ui.js]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>raphael</title>
		<link>http://www.nikhilgopal.com/?attachment_id=310</link>
		<pubDate>Sat, 28 Jun 2014 01:11:05 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/06/raphael.js</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>310</wp:post_id>
		<wp:post_date>2014-06-27 18:11:05</wp:post_date>
		<wp:post_date_gmt>2014-06-28 01:11:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>raphael</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/06/raphael.js</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/raphael.js]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jquery</title>
		<link>http://www.nikhilgopal.com/?attachment_id=311</link>
		<pubDate>Sat, 28 Jun 2014 01:11:13 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/06/jquery.js</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date>2014-06-27 18:11:13</wp:post_date>
		<wp:post_date_gmt>2014-06-28 01:11:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/06/jquery.js</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/jquery.js]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>D3 and Coffeescript</title>
		<link>http://www.nikhilgopal.com/d3-and-coffeescript/</link>
		<pubDate>Wed, 29 Oct 2014 04:27:29 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=364</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>364</wp:post_id>
		<wp:post_date>2014-10-28 21:27:29</wp:post_date>
		<wp:post_date_gmt>2014-10-29 04:27:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>d3-and-coffeescript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation"><![CDATA[Navigation]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[364]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://bit.ly/d3coffeescript]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>old10scale</title>
		<link>http://www.nikhilgopal.com/applying-a-divergent-color-scale-to-a-gene-expression-heat-map/old10scale/</link>
		<pubDate>Fri, 14 Nov 2014 05:56:38 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/11/old10scale.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date>2014-11-13 21:56:38</wp:post_date>
		<wp:post_date_gmt>2014-11-14 05:56:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>old10scale</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>368</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/11/old10scale.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/11/old10scale.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:559;s:6:"height";i:351;s:4:"file";s:23:"2014/11/old10scale.jpeg";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"old10scale-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"old10scale-300x188.jpeg";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}s:14:"portfolio-wall";a:4:{s:4:"file";s:23:"old10scale-470x351.jpeg";s:5:"width";i:470;s:6:"height";i:351;s:9:"mime-type";s:10:"image/jpeg";}s:17:"portfolio-related";a:4:{s:4:"file";s:23:"old10scale-360x351.jpeg";s:5:"width";i:360;s:6:"height";i:351;s:9:"mime-type";s:10:"image/jpeg";}s:12:"mobile-thumb";a:4:{s:4:"file";s:23:"old10scale-320x200.jpeg";s:5:"width";i:320;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:9:"rss-thumb";a:4:{s:4:"file";s:23:"old10scale-300x188.jpeg";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>new</title>
		<link>http://www.nikhilgopal.com/applying-a-divergent-color-scale-to-a-gene-expression-heat-map/new/</link>
		<pubDate>Fri, 14 Nov 2014 05:56:50 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/wp-content/uploads/2014/11/new.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>372</wp:post_id>
		<wp:post_date>2014-11-13 21:56:50</wp:post_date>
		<wp:post_date_gmt>2014-11-14 05:56:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>368</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.nikhilgopal.com/wp-content/uploads/2014/11/new.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/11/new.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:559;s:6:"height";i:351;s:4:"file";s:16:"2014/11/new.jpeg";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:16:"new-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:16:"new-300x188.jpeg";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}s:14:"portfolio-wall";a:4:{s:4:"file";s:16:"new-470x351.jpeg";s:5:"width";i:470;s:6:"height";i:351;s:9:"mime-type";s:10:"image/jpeg";}s:17:"portfolio-related";a:4:{s:4:"file";s:16:"new-360x351.jpeg";s:5:"width";i:360;s:6:"height";i:351;s:9:"mime-type";s:10:"image/jpeg";}s:12:"mobile-thumb";a:4:{s:4:"file";s:16:"new-320x200.jpeg";s:5:"width";i:320;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:9:"rss-thumb";a:4:{s:4:"file";s:16:"new-300x188.jpeg";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.nikhilgopal.com/?customjs=447</link>
		<pubDate>Tue, 06 Jan 2015 05:09:27 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?customjs=447</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2015-01-05 21:09:27</wp:post_date>
		<wp:post_date_gmt>2015-01-06 05:09:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>447</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>customjs</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Experiments</title>
		<link>http://www.nikhilgopal.com/experiments/</link>
		<pubDate>Thu, 02 Jan 2014 06:32:40 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=102</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://informatonauts.wordpress.com" target="_blank">Informatonauts Podast</a>

<a href="http://wp.me/p4dfQq-3i">Hiring Designers for Professionally Made Posters</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2014-01-01 22:32:40</wp:post_date>
		<wp:post_date_gmt>2014-01-02 06:32:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>experiments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lab</title>
		<link>http://www.nikhilgopal.com/lab/</link>
		<pubDate>Thu, 02 Jan 2014 06:33:19 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=105</guid>
		<description></description>
		<content:encoded><![CDATA[Current research at the <a href="http://www.bhi.washington.edu/">University of Washington</a>:
<p style="text-align: left;"><strong>Data Visualization of statistical models in gene expression</strong></p>
<p style="text-align: left;"><a href="http://www.nikhilgopal.com/wp-content/uploads/2014/01/Blank-Venn-Diagram-Plain-1.png"><img class="alignnone size-full wp-image-174" src="http://www.nikhilgopal.com/wp-content/uploads/2014/01/Blank-Venn-Diagram-Plain-1.png" alt="Research Venn Diagram" width="1760" height="1360" /></a></p>
Advisors: <a href="http://faculty.washington.edu/gennari/">John Gennari</a> and <a href="http://faculty.washington.edu/neila/">Neil Abernethy</a>

Tools:
<ul>
	<li><a href="http://staff.washington.edu/ngopal/confusion/" target="_blank">Interactive Confusion Matrix</a></li>
<li><a href="http://staff.washington.edu/ngopal/pathwaydesigner/" target="_blank">Interactive Network Designer</a></li>
</ul>
Past Research:
<ul>
	<li>Synthetic Biology</li>
	<li>Using stock market technical analysis indicators to predict Influenza outbreaks</li>
	<li><a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;ved=0CCsQFjAA&amp;url=http%3A%2F%2Fbiochem218.stanford.edu%2FProjects%25202011%2FGopal%25202011.pdf&amp;ei=e-LFUqvENYm6oQTOjIFI&amp;usg=AFQjCNEJJPrADDMCENi5eyFjyfW5N-WFZg&amp;sig2=nFzZmMNX9BiNlc748IEXJQ&amp;bvm=bv.58187178,d.cGU" target="_blank">De novo sequence alignment of short reads genomes</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2014-01-01 22:33:19</wp:post_date>
		<wp:post_date_gmt>2014-01-02 06:33:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bayes</title>
		<link>http://www.nikhilgopal.com/?page_id=214</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=214</guid>
		<description></description>
		<content:encoded><![CDATA[What is bayes

Why is it useful

Who uses it?
-Recently used to help find crashed plane
-Used in WWII to find German submarines
-Used by Spam Filters
-

<strong>Simplified Version: Hipster or Punk?</strong>

Has mohawk
Based on the information you have, is this person a hipster or a punk?

Let's update your prior information. We now know that this person wears glasses. Based on the information you have, is this person a hipster or a punk?

Let's update your prior information again. We've learned that this person wears skinny jeans. Based on the information you have, is this person a hipster or a punk?

News flash! New information for your prior! This person seems to drink PBR like water. Based on the information you have, is this person a hipster or a punk?

One more update for your prior. This person owns a fixie. Based on the information you have, is this person a hipster or a punk?

We tend to do all of these "calculations" subconsciously in our mind. As you know, it's hard to say with 100% certainty if this person is a hipster or a punk. However, based on the information we received, we can make a decent prediction.

Now imagine how this could be applied to a crime scene or medical research. Pretty cool stuff.

<strong>The Equation</strong>

The above process can be illustrated as a mathematical equation. This equation is referred to as Bayes Theorem.

We live in systems. Or at least we assume we do for modeling purposes. 1 = P(rain in Seattle) + P(NOT rain in Seattle)

Probability is written in the notation P(rain in Seattle) = 0.7. We have "a" 7/10 times, 70/100 times, 700/1000 times, etc.

P(NOT rain in Seattle) = 1 - P(rain in Seattle) = 1 - 0.7 = 0.3

We can also have situations that depend on other factors.

P(rain in Seattle | Cloudy) = 0.8

P(NOT rain in Seattle | Cloudy) = 0.2

What is the probability it is Cloudy given that it is not raining? Oh damn.

Here comes the Bayes:

P(A|B) = P(B|A)*P(B) / P(A)

P(Cloudy | NOT raining in Seattle) = P(NOT raining in Seattle | Cloudy) * P(NOT raining in Seattle) / P(raining in Seattle) = .085 = 8.5%

8-9 days out of 100 it is cloudy in Seattle, it is not raining.

With Bayes Theorem, we can quantify and infer likelihood. And that is useful.

Let's walk through another example.

<strong>Spam or Not Spam
</strong>

P(WordSet | Spam), P(NOT WordSet | Spam), P(Spam), P(WordSet)

P(Spam | Words) = ?

OMG. We just build a naive bayes spam filter.

<strong>Used with Networks</strong>

-Markov Models

<strong>The Downsides of Bayes</strong>

I could leave you readers with a sense of unbounded optimism, but there is are a few reasons Bayes is not used everywhere and for everything.

Computational Complexity
-Bayes doesn't scale very well. In computer speak, it scales at O(n^2) time. More often than not, we can use a more specialized (and typically more efficient) statistical method to serve our purpose.

Next: Sensitivity, Specificity, and Positive Predictive Value (aka how bayes applies to screening tests)

Notes:

* Mention that P(A and B) = P(A) * P(B) if they are independent. If they are not independent, what happens? P(A and B) = P(A) * P(B | A)?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2014-04-26 17:42:21</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Specificity/Sensitivity</title>
		<link>http://www.nikhilgopal.com/?page_id=216</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=216</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2014-02-12 13:16:23</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Most Useful VIM Commands</title>
		<link>http://www.nikhilgopal.com/?page_id=218</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=218</guid>
		<description></description>
		<content:encoded><![CDATA[asda Maybe rename, Vim in 15 minutes?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2014-02-17 00:52:29</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Art</title>
		<link>http://www.nikhilgopal.com/?page_id=259</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=259</guid>
		<description></description>
		<content:encoded><![CDATA[Mathematically Inspired

Look and Say 25:

<a href="http://www.nikhilgopal.com/wp-content/uploads/2014/03/Screenshot-2014-03-25-21.58.57.png"><img class="alignnone size-full wp-image-257" alt="Screenshot 2014-03-25 21.58.57" src="http://www.nikhilgopal.com/wp-content/uploads/2014/03/Screenshot-2014-03-25-21.58.57.png" width="950" height="488" /></a>

Look and Say 20:

asd

Biologically Inspired]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2014-03-29 09:16:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Overview of Machine Learning Methods</title>
		<link>http://www.nikhilgopal.com/?page_id=276</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=276</guid>
		<description></description>
		<content:encoded><![CDATA[I've implemented versions of all of these (or pointed to other libraries that already exist that are great)

Supervised Learning: Classification
-Decision Trees
-KNN
-SVM
-Regression (this should really be its own section. Regression is an EXTREMELY powerful tool)
-Neural Networks?
-Bayes Theorem?

Unsupervised Learning: Clustering
-KMeans
-Hierarchical Clustering

Graph-Based Methods:
-Depth-first search
-Breadth-first search
-A*
-Djikstra

Ensemble Methods:
-Boosting = when you take a number of weakly associated attributes and combine them to collectively make a strongly associated attribute
-Bagging

Dimensionality Reduction:
-PCA
-MFA

Dimensionaltiy Extrapolation:
-Topological Data Analysis

Datastores:
-Document Stores:
--MongoDB
--Redis
-Persistent Databases:
--SQL

Semantic Web:
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2014-05-02 17:19:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Networks</title>
		<link>http://www.nikhilgopal.com/?page_id=280</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=280</guid>
		<description></description>
		<content:encoded><![CDATA[Basic Definitions:
-Nodes, Edges
+JSBIN example
-Betweenness
-Centrality
+JSBin example2
-Degrees
-Dyads, triads, etc.
-Hubs
+JSBin example3

<strong>Next Set of Posts:</strong>
Basic Principles:
-The rich get richer

Algorithms:
-Shortest Path]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2014-08-21 13:50:16</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Community Finding Algorithms</title>
		<link>http://www.nikhilgopal.com/?page_id=282</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=282</guid>
		<description></description>
		<content:encoded><![CDATA[Knowledge from: A fast agglomerative community detection method for protein complex discovery in protein interaction networks by M Rahman et al.

Modules = dense sub-graphs 

Three classes of module detection:
1. finding cliques (clique = fully connected sub-network)
2. finding subnetworks (not necessarily cliques)
3. uncovering hierarchical organizations within a network.

The state of community finding currently mis-classifies proteins or are ignored due to low topological connectivity.

Community finding is best when the data matrix is sparse. Otherwise, we are clustering.

Girvan and Newman computes edge-betweenness centrality value (= how many shortest paths travel through this edge) of each edge. They are sorted and edges with large betweenness values are removed in an iterative manner to detect communities.

So, a community is basically a subnetwork with more connections between in-network nodes than out-network.


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2014-06-10 13:50:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Biases and Logical Fallacies</title>
		<link>http://www.nikhilgopal.com/?page_id=291</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=291</guid>
		<description></description>
		<content:encoded><![CDATA[Selection Bias
Nature of Bias:
How to Control:

Exposure Bias
Nature of Bias:
How to Control:

Measurement Bias
Nature of Bias:
How to Control:

Analysis Bias

Interpretation Bias

Publication Bias

There are a number of specific cases we can itemize these biases into, but these broad categories are useful since they tend to occur in modularized steps in the scientific workflow.

Confirmation Bias]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2014-06-10 13:44:13</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Types of Scientific Studies and Biases</title>
		<link>http://www.nikhilgopal.com/?page_id=293</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=293</guid>
		<description></description>
		<content:encoded><![CDATA[Hi,

It's difficult to completely articulate the mental process I step through when trying to understand an experiment. Sometimes one factor outweighs another, and through years of experience I pay more attention to whichever one I instinctively decide is more dire to point out or address. However, I believe I can provide a lightweight mental framework for you to start stepping through the same mental process I go through myself when trying to understand the possible biases in a scientific study. It's not possible to eliminate bias completely, but it is possible to understand that there are biases, and it's important to acknowledge them.

I know when I read a paper that there is a lot of science that has happened behind the scenes that I will never know about. Research is not a linear process, although a paper must be presented linearly. I also know that a lot of my mental model for what to call hypocrisy or call attention to is derived anecdotally from my interactions with other scientists in the community. Thus, in the back of my mind, I qualify my reckoning with this disclaimer.

I've linked the topics to wikipedia so you can read further if you are inclined.

Framework to evaluate studies:

Selection Bias
This refers to a bias in the way an experiment selects data or research subjects to study. Systematic biases are typically better than non-systematic ones. At least systematic biases are consistently applied.

Measurement Bias
This refers to a bias in the way an experiment measures data. Sometimes an instrument may not be calibrated. Sometimes an instrument may be inappropriate for the research question at hand. Sometimes the units may not be apt.

Analysis Bias
This refers to analyzing the data in an inappropriate manner. 

Interpretation Bias
This refers to interpreting an analysis in a manner that is biased towards a certain conclusion. One would imagine that industry science is rife with this type of bias.

Thinking about biases are a great way to start putting things into perspective, but there are a number of cookie-cutter scientific experiment designs that we see in the wild. These are worth knowing, or at least recognizing, as they each have their own strengths, weaknesses, and appropriate uses.

Types of Scientific Study Designs:
In general, we start with a null hypothesis (assuming the thing we want to prove is NOT TRUE), and then go through the scientific process if the null hypothesis is false.

Case Report
These are often seen in medical journals. These are merely reports about a special case a clinician has come across in practice and details the case.

Case-Control
This is the simplest of scientific designs. There is a case, and a control. The two are put through identical processes and the results are analyzed to see if the null hypothesis has been disproved.

Cohort

RCT

Meta-Analysis

Exploratory Science:
Exploratory science is a newer type of science. It is ever popular in the age of "big data". However, it also lends itself to erroneous conclusions if one is not mindful.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2014-12-22 23:31:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Javascript for Data Scientists</title>
		<link>http://www.nikhilgopal.com/?page_id=314</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=314</guid>
		<description></description>
		<content:encoded><![CDATA[Javascript for Data Scientists

Science
-Biases, Logical Fallacies

Javascript
-Pros, Cons, etc.
-Basics
-Medium Chops
-Tricks and Tips

Functions and Libraries:
++Descriptive Statistics = stats.js
+++Correlation = spearmans, normal, etc.
+++Distribution types = poisson, survival, gaussian, etc
++Regression = numeric.js
++Bayes = bayes.js in node
++PCA and K-means = numeric.js
++Support Vector Machines = svm.js
++Hierarchical Clustering = clstrfck.js
++Neural Networks = neural.js
++Decision Trees = cart.js
+The Glue = Angular.js
+The Databases = MongoDB, Neo4j, Redis, etc.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date>2014-06-27 18:24:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adventures in Javascript: For Python Programmers</title>
		<link>http://www.nikhilgopal.com/?page_id=316</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=316</guid>
		<description></description>
		<content:encoded><![CDATA[A guide for python programmers to transition into javascript:

About the author: PhD student @ UW. Great at Python, but need JS for dissertation. Wrote this up to help others in same boat. pic of me.

This is meant to be concise, but useful.

Benefits of learning JS as a Python programmer: better programmer, web is a new realm, new libs. Viz networks, cytoscape js, nothing in Python... Downsides though...
Fundamental Differences: asynchronous, community demographics (I'm a scientist)
Objects, Declarations, and Syntax
Differences in Logic and Flow Control
Coffeescript: Easy...and hard
Classes, Functions, and Design Patterns: typical design patterns used in python still work, but...a few for you to learn like currying, memoization.
Map-Reduce-Filter
Web Frameworks: Python-Django/flask, etc. JS--don't even ask...
Packaging Code, Bower, Grunt

If you found this helpful, please tweet me a note! If you have any suggestions for changes, please pull from github and submit your edits (if your edits are accepted you will be acknowledged on this page!). You can buy an ebook to help support future projects if you are inclined.

-------

Typical program takes a while to write anyway. May as well do it right and make it useful. for everything else we have bash, awk, and sed! In bioinformatics, I use a combination of those three for pretty much everything. Python is great for my own terminal implementations, R is great for using other scientific libraries and stats, but JS is great for everything else. with Python changing to Python 3, you may as well refactor your code into another language and learn it.


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date>2014-06-30 23:53:51</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>D3 Test</title>
		<link>http://www.nikhilgopal.com/?page_id=332</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=332</guid>
		<description></description>
		<content:encoded><![CDATA[[d3-link]
<a href="http://jsbin.com/woxuv/14.js">data</a>
[/d3-link]

[d3-source canvas="header"]
var color, force, height, svg, width, customcolorscale;

width = window.outerWidth || document.body.clientWidth;

height = 400;

//color = d3.scale.category10();

color = d3.scale.ordinal()
  .domain([1,2,3,4])
  .range(["#1193CC", "#3D7D99", "#00FFC2", "#FF5340", "#CC1431"]);
// Compound colors generated via Adobe Kuler

force = d3.layout.force()
  .charge(-200)
  .linkDistance(50)
  .size([width, height]);

svg = d3.select("header")
  .append("svg")
  .attr("width", width)
  .attr("height", height);

d3.json("http://jsbin.com/woxuv/14.js", function(error, graph) {
  var link, node;
  console.log(graph);
  force.nodes(graph.nodes).links(graph.links).start();
  link = svg.selectAll(".link").data(graph.links).enter().append("line").attr("class", "link").style("stroke-width", function(d) {
    return Math.sqrt(d.value);
  });
  node = svg.selectAll(".node").data(graph.nodes).enter().append("circle").attr("class", "node").attr("r", function(d) {
    return d.size;
  }).style("fill", function(d) {
    return color(d.group);
  }).call(force.drag);
  node.append("title").text(function(d) {
    return d.name;
  });
  return force.on("tick", function() {
    link.attr("x1", function(d) {
      return d.source.x;
    }).attr("y1", function(d) {
      return d.source.y;
    }).attr("x2", function(d) {
      return d.target.x;
    }).attr("y2", function(d) {
      return d.target.y;
    });
    return node.attr("cx", function(d) {
      return d.x;
    }).attr("cy", function(d) {
      return d.y;
    });
  });
});

[/d3-source]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>332</wp:post_id>
		<wp:post_date>2014-08-19 23:44:57</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>scientific presentations</title>
		<link>http://www.nikhilgopal.com/?page_id=360</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=360</guid>
		<description></description>
		<content:encoded><![CDATA[Targeting content for your audience
-Think about what is important for your audience

How to setup your slidedeck
-The rule of 3's
-The result in title (<40 words), with rest of slide being supporting image.

Images
-Plots should be large and results meaningful. Annotate if necessary.

The actual presentation
-Body language
-Voice tone and projecting
-Engaging the audience]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2014-10-22 11:19:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to Read a Network</title>
		<link>http://www.nikhilgopal.com/?page_id=390</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=390</guid>
		<description></description>
		<content:encoded><![CDATA[Basics
-Nodes
-Edges (directed, undirected)
-Groups

Metrics
-Degree Dist
-Centrality

Arbitrariness of networks...

Hubs and Bottlenecks.

Other resources:
-Coursera course
-Quora question
-Cytoscape, Gephi
-D3 examples



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2014-11-21 00:27:29</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Method Chaining and Constraint Satisfaction</title>
		<link>http://www.nikhilgopal.com/?page_id=441</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=441</guid>
		<description></description>
		<content:encoded><![CDATA[Two programming concepts that have helped me write code in a better way.

In the same way that people design UIs for users, I like to design code for those who will be using the code library. This is different from *.

<strong>Method Chaining:</strong>

Code should read like a sentence. Network libraries look ugly in R and Python.

<strong>Constraints:</strong>

I like to explicitly set some constraints. Constraints, in the AI sense of the word, are requirements and preferences. Constraint propagation methods have been used to solve interesting programming problems like Sudoku.

<strong>Other General Tips:</strong>

Use matrices and write code to expect and employ matrix operations. Obviously, this doesn't universally apply to every problem and situation, but I've found this to be a good rule of thumb in the world of research. R's apply is like Javascript's map.

Avoid if-statements whenever possible. This annoys some people. Again, use your best judgement.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2014-12-23 23:04:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizing Alzheimer&#039;s Disease Using Reactome Data in D3</title>
		<link>http://www.nikhilgopal.com/?p=451</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=451</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2015-01-05 21:15:16</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpd3-451-0</wp:meta_key>
			<wp:meta_value><![CDATA[{"includes":[],"code":"var width = 960,\n      height = 500;\n\n  var color = d3.scale.category20();\n\n  var force = d3.layout.force()\n      .charge(-120)\n      .linkDistance(30)\n      .size([width, height]);\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  var reactants = [];\n  var products = [];\n  var reactions = [];\n  var nodes = [];\n  var links = [];\n  var Rgraph = {};\n\n  // on drop down pathway name change, load new file\n  d3.json(\"js/alzheimerR.json\", function(error, result) {\n\n    // Create the nodes and edges connections for reactions and species\n    var edges = [];\n    for (i = 0; i < result.sbml.model.listOfReactions.reaction.length; i++) {\n      // Reactions to Products\n      edges.push('{\"source\":'+'\"'+result.sbml.model.listOfReactions.reaction[i]['-id']+'\",\"target\":'+'\"'+result.sbml.model.listOfReactions.reaction[i].listOfProducts.speciesReference['-species']+'\"}');\n      reactions.push(result.sbml.model.listOfReactions.reaction[i]['-id']);\n      products.push(result.sbml.model.listOfReactions.reaction[i].listOfProducts.speciesReference['-species']);\n      for (k = 0; k < result.sbml.model.listOfReactions.reaction[i].listOfReactants.speciesReference.length; k++) {\n        // Reactants to Reactions\n        edges.push('{\"source\":'+'\"'+result.sbml.model.listOfReactions.reaction[i].listOfReactants.speciesReference[k]['-species']+'\",\"target\":'+'\"'+result.sbml.model.listOfReactions.reaction[i]['-id']+'\"}');\n        reactants.push(result.sbml.model.listOfReactions.reaction[i].listOfReactants.speciesReference[k]['-species']);\n      }\n    }\n\n    for (i = 0; i < result.sbml.model.listOfSpecies.species.length; i++) {\n      //console.log(result.sbml.model.listOfSpecies.species[i]);\n      if (typeof(result.sbml.model.listOfSpecies.species[i].annotation['rdf:RDF']['rdf:Description']['bqbiol:is']['rdf:Bag']['rdf:li']) === \"object\") {\n        for (k = 0; k < result.sbml.model.listOfSpecies.species[i].annotation['rdf:RDF']['rdf:Description']['bqbiol:is']['rdf:Bag']['rdf:li'].length; k++) {\n          console.log(result.sbml.model.listOfSpecies.species[i].annotation['rdf:RDF']['rdf:Description']['bqbiol:is']['rdf:Bag']['rdf:li'][k]['-rdf:resource']);\n        }\n      }\n      else {\n        console.log(result.sbml.model.listOfSpecies.species[i].annotation['rdf:RDF']['rdf:Description']['bqbiol:is']['rdf:Bag']['rdf:li']['-rdf:resource']);\n      }\n    }\n\n    // setup nodes\n    var combined = products.concat(reactants).concat(reactions);\n    for (n = 0; n < combined.length; n++) {\n      nodes.push('{\"name\":\"'+combined[n]+'\"}');\n      // if ((/^species/).test(combined[n])) {\n      //   nodes.push('{\"name\":\"'+combined[n]+'\",\"group\":1}');\n      // }\n      // else {\n      //   nodes.push('{\"name\":\"'+combined[n]+'\",\"group\":\"2\"}'); \n      // }\n    }\n      \n    // change source and target edges names to reflect node order\n    for (x = 0; x < edges.length; x++) {\n      links.push('{\"source\":'+nodes.indexOf('{\"name\":\"'+JSON.parse(edges[x]).source+'\"}')+', \"target\":'+nodes.indexOf('{\"name\":\"'+JSON.parse(edges[x]).target+'\"}')+'}');\n    }\n\n    // add groups to nodes for colors\n    var nodesWithGroup = [];\n    nodes.forEach(function(n) {\n      if ((/^species/).test(JSON.parse(n).name)) {\n        nodesWithGroup.push(n.substring(0, n.length - 1)+',\"group\":1}');\n      }\n      else {\n        nodesWithGroup.push(n.substring(0, n.length - 1)+',\"group\":2}');\n      }\n    })\n\n    Rgraph.nodes = nodesWithGroup;\n    Rgraph.links = links;\n    console.log(Rgraph);\n\n    var graph = {};\n    graph.nodes = JSON.parse('['+String(Rgraph.nodes)+']');\n    graph.links = JSON.parse('['+String(Rgraph.links)+']');\n\n    force\n        .nodes(graph.nodes)\n        .links(graph.links)\n        .start();\n\n    var link = svg.selectAll(\".link\")\n        .data(graph.links)\n      .enter().append(\"line\")\n        .attr(\"class\", \"link\");\n\n    var node = svg.selectAll(\".node\")\n        .data(graph.nodes)\n      .enter().append(\"circle\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function(d) { return color(d.group); })\n        .call(force.drag);\n\n    node.append(\"title\")\n        .text(function(d) { return d.name; });\n\n    force.on(\"tick\", function() {\n      link.attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n\n      node.attr(\"cx\", function(d) { return d.x; })\n          .attr(\"cy\", function(d) { return d.y; });\n    });\n  });"}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Landing Page</title>
		<link>http://www.nikhilgopal.com/?page_id=452</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=452</guid>
		<description></description>
		<content:encoded><![CDATA[Visualizations:

Products:
O'Reilly Video Set
Book

Hire Me:
Tutoring
Freelance Work (how this works: email me with your project requirements. If available, I'll provide a free quote. We'll work on a contract from there)

Lessons:

Blog Posts:

Publications/Talks:]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>452</wp:post_id>
		<wp:post_date>2015-02-26 23:01:58</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sharing_disabled</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>switch_like_status</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introduction to Graph Theory for the Layman</title>
		<link>http://www.nikhilgopal.com/?page_id=461</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?page_id=461</guid>
		<description></description>
		<content:encoded><![CDATA[This is meant to be a very brief introduction to graph theory and how has been used. It is the written version of a presentation I gave for the BIME 591 graduate class (Stochastic Modeling in Cancer). There is actually a lot of literature on graphs. Graphs aren't really a new data structure, they've just gotten popular recently. I guess with the success of Google and Facebook famous for their graph-based approaches, researchers are more curious than ever about what networks can do for them. 

This guide will not be very mathematics heavy. I'm sure you know how to reference a textbook or read Wikipedia. A number of graph libraries and tools already exist, and it is more important to develop an intuitive understanding for the uses and caveats of graphs and their properties than memorizing mathematical equations.

<strong>What is a graph?</strong>
So first, what is a graph? I would argue that it depends on who you ask. A mathematician might say it's a construct. A computer scientist might say it's a data structure. A biologist might tell you it's a visualization. It's really all of that!

What types of graphs exist? (directed, undirected, etc.)

I'm sure you've heard people use the term network and graph interchangeably. Whether or not this is acceptable depends on your audience, but strictly speaking, they are different things. A network is a graph with weighted edges.

Let's go to a lightweight app I whipped up a few months ago: http://staff.washington.edu/ngopal/pathwaydesigner/ . This app uses the DOT language to describe graphs--this is a nifty little language developed at Bell Labs used to describe graphs in computers and is still very useful today. It's great for creating a quick little node-link diagram.

<iframe src="http://staff.washington.edu/ngopal/pathwaydesigner" width="100%" height="400"></iframe>

<strong>Centralities</strong>
What is centrality? My explanation is that it is merely a way of ordering nodes. This is akin to ordering numbers from least to greatest for example.

This little embedded JSBin below shows a little custom graph library I whipped up. It uses a programming technique called method chaining to keep the code readable.
<a class="jsbin-embed" href="http://jsbin.com/tavice/3/embed?js,console">JS Bin</a><script src="http://static.jsbin.com/js/embed.js"></script>

<strong>Types of graphs</strong>
How many types of graphs are there? There are random graphs, small-world graphs, etc]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date>2015-03-04 14:13:51</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>sidebar_on</wp:meta_key>
			<wp:meta_value><![CDATA[sidebar_on-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS Development: iOS Syntax, Object Allocation, and Garbage Collection</title>
		<link>http://www.nikhilgopal.com/ios-development-ios-syntax-object-allocation-and-garbage-collection/</link>
		<pubDate>Sat, 14 Jan 2012 07:52:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[<span><u><b>Syntax and Object Allocation:</b></u></span><br><span><br></span><br><span>Coming from the world of Java and Android programming, I'm used to initializing an object in the following format:</span><br><span><br></span><br><span>Coffee cupOfJoe = new </span><span>Coffee</span><span>;</span><br><span><br></span><br><span>In Objective-C (which is actually a superset of the C language), the same line is written like so:</span><br><span><br></span><br><span>Coffee</span><span> *</span><span>cupOfJoe</span><span> = [</span><span>Coffee</span><span> new];</span><br><span><br></span><br><span>However, the recommended format is this (which is equivalent to the above):</span><br><span><br></span><br><span>Coffee *</span><span>cupOfJoe</span><span> = [[</span><span>Coffee</span><span> alloc] init];</span><br><span><br></span><br><span>The reason for this is that we have more functionality with this latter method.  There are variations of the init function such as initWithString, etc. This format is also followed for historical reasons (just crack open any supporting libraries to prove it to yourself).</span><br><span><br></span><br><span><br></span><br><span><u><b>No garbage collection:</b></u></span><br><span><br></span><br><span>Unlike Android (which comes complete with garbage collection since it is programmed in Java), we need to release our objects after we are done using them. </span><br><span><br></span><br><span>[cupOfJoe release];</span><br><span><br></span><br><span>We can also edit the dealloc method in the implementation file. This typically is not recommended. It is inherited from our super class, but we can add to its functionality. </span><br><span><br></span><br><span>-(void) dealloc {</span><br><span>    NSLog(@"The world is about to explode!");</span><br><span>    [super dealloc]</span><br><span>}</span><br><span><br></span><br><span>The NSLog addition will run just before the object will be deleted.</span><br><span><br></span><br><span>Although I can't confirm yet, I've heard this no garbage collection limitation doesn't exist when creating mac desktop applications-- just iPhone applications.</span><br><span><br></span><br><span><br></span><br><span><u><b>Autorelease Pools:</b></u></span><br><span><br></span><br><span>Typically, if we own an object, we are responsible for releasing it. However, this isn't always doable.</span><br><span><br></span><br><span>Sometimes we need an autorelease pool. </span><br><span><br></span><br><span><span>NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];</span></span><br><span><br></span><br><span>Autorelease loosely translates to, "Release my object, but not immediately." This is useful for cases like below:</span><br><span><br></span><br><span><span>-coolFunction {</span></span><br><span><span>  A *a = [[A alloc] init];</span></span><br><span><span>  [a autorelease];  //imagine using "release" here like normal</span></span><br><span><span>  return a;</span></span><br><span><span>}</span></span><br><span><span><br></span></span><br><span><span>N *n = [[N alloc] init];</span></span><br><span><span>A *coolResult = [n coolFunction];</span></span><br><span><br></span><br><span>We have an object allocated inside the function, but it will be released before it can be returned! So instead of using release, we would use autorelease so that the object can be returned. This functionality shouldn't be abused.</span><br><span><br></span><br><span><br></span><br><span>As an interesting side note, the "NS" in front of NSObject or NSLog functions stand for "Next Step," from NeXT Computers (the Steve Jobs venture). </span><br><span><br></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2012-01-14 07:52:00</wp:post_date>
		<wp:post_date_gmt>2012-01-14 07:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios-development-ios-syntax-object-allocation-and-garbage-collection</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[iOS]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/01/ios-syntax-object-allocation-and.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/7429966432108713567]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exploring Bonferroni Correction (or How Facebook Could Improve Friend Suggestions)</title>
		<link>http://www.nikhilgopal.com/exploring-bonferroni-correction-or-how-facebook-could-improve-friend-suggestions/</link>
		<pubDate>Thu, 12 Jan 2012 23:26:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[<br><div>
<span><b><u><br>What is Bonferroni?</u></b></span></div>
<div>
<span><br></span></div>
<div>
<span>A statistical function used to find out how often a certain condition would be met just by chance alone. This is very helpful for putting things in perspective when analyzing large data sets (which often have a number of false positive significant results).</span></div>
<div>
<span><br></span><br><span><br></span></div>
<div>
<span><b><u>Potential Applications:</u></b></span></div>
<div>
</div>
<ul><li><b><span>I've always wondered if Facebook cross-references the events people attend to suggest whether or not they should be friends. If this was the only metric they used to suggest friendship, how many friend suggestions would be false positives?</span></b></li>
<li><span>How often could potential matches on large dating websites could happen by chance?</span></li>
<li><span>And of course, from my field, how many single-nucleotide polymorphisms (SNPs) could appear significant in a genome-wide association study by chance alone?</span></li>
</ul><span><br></span><br><div>
<span><br></span></div>
<div>
<span>Let’s use the Facebook example and make the following assumptions:</span></div>
<div>
</div>
<ul><li><span><span>T</span><span>here are 1 billion active users</span></span></li>
<li><span>Everyone attends an event 1 day in 60</span></li>
<li><span>There are 500,000 registered events within our scope, which is enough to account for 1 million people who attend an event on a given day.</span></li>
<li><span>We wade through 1000 days worth of event attendance records</span></li>
</ul><span><br></span><br><div>
<span><br></span></div>
<div>
<p><span>What is the probability that two people were at the same event on two different days?</span></p></div>
<div>
<p><span><br></span></p></div>
<div>
<p><span>Assuming everyone randomly attends an event, the probability that someone attends an event on any given day is 0.01 (1/100). And when they do choose an event to attend, they choose one of the 2e+05 registered events at random. Just to be clear on notation, </span></p><span>2e+05 = 2 x 10^5.</span></div>
<div>
<span><br></span></div>
<div>
<br><ul><li><span>The probability of any two people both deciding to attend an event on the same day is 0.0001 (1/100*1/100).</span></li>
<li><span>The probability that they will attend the same event is 0.0001/2e+05 (number of registered events) = 5e-10.</span></li>
<li><span>The chance that they will attend the same event on two different days is ( 5e-10 )*( 5e-10 )=2.5e-19 (note that the events can be on two different days).</span></li>
</ul></div>
<div>
<span><br></span></div>
<div>
<span>How many of these event attendance coincidences will indicate potential friendship? Let's just say a potential friendship is a pair of people and a pair of days, such that two people were at the same event on each of the two days.</span></div>
<div>
<span><br></span></div>
<div>
<ul><li><span>The number of pairs of people is (10^9 choose 2) = 5e+17. </span></li>
<li><span>The number of pairs of days is (1000 choose 2) = 5e+05.</span></li>
</ul></div>
<div>
<span><br></span></div>
<div>
<span>So, the expected number of attendance coincidences that look like potential friendships = (the numbers of pairs of people)*(the number of pairs of days)*(the probability that any one pair of people and pair of days is an indication of potential friendship).</span></div>
<div>
<span><br></span></div>
<div>
<span>(5e+17)*(5e+05)*(2.5e-19) = 62,500</span></div>
<div>
<span><br></span></div>
<div>
<span>This means there will be 62,500 people who look like they will be friends even though they aren't. However, considering that this is on the scale of a billion folks, a 0.00625% false positive rate doesn't seem terrible. </span><br><span><br></span><br><span>In my own experience, I know I've seen a number of suggested friends who I have nothing in common with except similar mutual friends. Maybe friend suggestions can be improved by incorporating this information. </span><br><span><br></span><br><span>Of course, I deactivated my facebook in 2009 and haven't been back since. Perhaps they already leverage this information...</span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2012-01-12 23:26:00</wp:post_date>
		<wp:post_date_gmt>2012-01-12 23:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-bonferroni-correction-or-how-facebook-could-improve-friend-suggestions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="statistics"><![CDATA[statistics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/01/using-bonferroni-on-big-data-and_12.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/9047825676379530103]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[alpha male characteristics]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.datingflux.com/blog</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-17 12:41:21</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 12:41:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["How often could potential matches on large dating websites could happen by chance?" That is why many persons will not have a date from this large social sites. The main intention is to get connected with friend and be able to know what is going on with them almost real time. Most small dating sites will get more dating partner easily. The statistics are interesting.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Code Optimization Technique: You Need Memoization!</title>
		<link>http://www.nikhilgopal.com/code-optimization-technique-you-need-memoization/</link>
		<pubDate>Mon, 19 Dec 2011 22:14:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[<span>Memoization is a pretty slick trick--a must know for those using interpreted languages and working with large datasets. My definition of <a href="http://en.wikipedia.org/wiki/Memoization">memoization</a> is basically when one uses a data structure to save the output of a function to memory using the inputs as a key. </span><br><span><br></span><br><span>Imagine the case where recursive function must be used. Using memoization, the program won't need recalculate values in each recursion at run-time. Appropriate use can substantially speed up one's code.</span><br><span><br></span><br><span><b>Before Code:</b></span><br><span></span><br><span>$ cat fib.py</span><br><span>def fib(n):</span><br><span>        if n==1 or n==0:</span><br><span>                return 1</span><br><span>        return fib(n-2) + fib(n-1)</span><br><span><br></span><br><span>print fib(35)</span><br><div>
<span><br></span></div>
<br><span><b>Before Code (using 35 as the input value):</b></span><br><span>$ time python fib.py</span><br><span>14930352</span><br><span><br></span><br><span>real    0m5.718s</span><br><span>user    0m5.714s</span><br><span>sys     0m0.002s</span><br><span><br></span><br><span><b><br></b></span><br><span><b>After Code:</b></span><br><span></span><br><span>$ cat fib-memo.py</span><br><span>def memoize(f):</span><br><span>    cache= {}</span><br><span>    def memf(*x):</span><br><span>        if x not in cache:</span><br><span>            cache[x] = f(*x)</span><br><span>        return cache[x]</span><br><span>    return memf</span><br><span><br></span><br><span>@memoize #this is a decorator</span><br><span>def fib(n):</span><br><span>    if n==1 or n==0:</span><br><span>        return 1</span><br><span>    return fib(n-2) + fib(n-1)</span><br><span><br></span><br><span>#fib = memoize(fib) #an alternative to the decorator</span><br><span>print fib(300)</span><br><div>
<span><br></span></div>
<br><span><br></span><br><span><b>After Code (using 300 as the input value):</b></span><br><span>$ time python fib-memo.py</span><br><span>359579325206583560961765665172189099052367214309267232255589801</span><br><span><br></span><br><span>real    0m0.008s</span><br><span>user    0m0.004s</span><br><span>sys     0m0.004s</span><br><div>
<span><br></span></div>
<div>
<span><b><br></b></span></div>
<span><br></span><br><span><b>Python resources:</b></span><br><br><ul><li><a href="http://www.stanford.edu/~pgbovine/incpy.html">IncPy</a><span> - This software is an actual python interpreter written to automatically memoize code. It can be faster or slower than a normal python interpreter depending on what is being run.</span></li>
<li><a href="http://code.activestate.com/recipes/577219-minimalistic-memoization/">code.activestate.com</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2011-12-19 22:14:00</wp:post_date>
		<wp:post_date_gmt>2011-12-19 22:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code-optimization-technique-you-need-memoization</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-optimization"><![CDATA[code optimization]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/12/code-optimization-technique-you-need.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/698629663420196632]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Supercharge Programmer Productivity</title>
		<link>http://www.nikhilgopal.com/supercharge-programmer-productivity/</link>
		<pubDate>Tue, 01 Nov 2011 02:30:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[<div>
<span>As someone who programs for a living, I spent a few months looking for ways to develop rockstar programming skills (<a href="http://www.youtube.com/watch?v=bfgO-LXGpTM">like this guy</a>)--something that would give me an edge over the rest of the amazing programmers out there. </span></div>
<div>
<span><br></span></div>
<div>
<span>Tools such as Vi/Emacs and the nifty shortcuts they offer only carried me so far. Really what I wanted was to be more productive. This translates to more functional code in less time. I wanted to design a program by mid-morning, code the core classes before noon, write wrappers and extensions after lunch, and wrap things up with a bow before the end of the afternoon.</span></div>
<div>
<span><br></span><br><span><span></span></span><br><span><span><u>These four principles below are the secret:</u></span></span><br><ol><li><span><span>Learn to type more accurately</span></span></li>
<li><span><span>Learn to type faster</span></span></li>
<li><span><span>Find ways to type less</span></span></li>
<li><span><span>Use IDEs whenever possible</span></span></li>
</ol><br><span><br></span></div>
<div>
<span>Although I hated to admit it at the time, I realized that I needed to work on two core computing skills--typing speed and typing accuracy.</span></div>
<div>
<span><br></span><br><span><u>Before I Started:</u></span><br><span><br></span></div>
<div>
<span>Before I started, I used this <a href="http://keybr.com/">tool</a> (which I have no affiliation with) to profile my typing speed. I clocked in at an embarrassing 40 words per minute with about 70% accuracy. This meant that I not only typed slowly, but was constantly hitting the backspace button to fix my blunders.</span></div>
<div>
<span><br></span><br><span><u>The Plan:</u></span><br><span><br></span></div>
<div>
<span>I decided to practice my typing for about 15 minutes every day (right before I quit using my computer for the day). My plan was to do this consistently everyday for eight weeks to see if I could feel a difference.</span></div>
<div>
<span><br></span><br><span><u>For Those Who Crave Immediate Gratification:</u></span><br><span><br></span></div>
<div>
<span>After three weeks, I noticed an increase in my productivity levels on the computer. Not just in terms of coding, but also in the speed of my email responses, the time in which I could put together a powerpoint presentation, and write detailed documentation. </span><br><span><br></span><br><span>When I checked the metrics on the website again, I clocked in at 80 words per minute with 80% accuracy. This was 2X my stats two weeks go.</span><br><span><br></span><br><span>To Sum it all up, these four principles below are the secret:</span><br><ol><li><span>Learn to type more accurately</span></li>
<li><span>Learn to type faster</span></li>
<li><span>Find ways to type less</span></li>
<li><span>Use IDEs whenever possible</span></li>
</ol></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2011-11-01 02:30:00</wp:post_date>
		<wp:post_date_gmt>2011-11-01 02:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>supercharge-programmer-productivity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="productivity"><![CDATA[productivity]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/10/supercharge-programmer-productivity.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/8644599170472669017]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MongoDBsnp: Stub Code for Getting DBsnp into a NoSQL Database</title>
		<link>http://www.nikhilgopal.com/mongodbsnp-stub-code-for-getting-dbsnp-into-a-nosql-database/</link>
		<pubDate>Mon, 31 Oct 2011 05:40:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[I've been wanting to experiment with MongoDB and NoSQL for a while now. I decided to load dbsnp data into a mongoDB database. It worked!<br><br>
However, after learning more about the appropriate use cases of NoSQL and how they contrast with the appropriate use cases for SQL, I decided that I don't have any immediate applications I can incorporate MongoDB into just yet.<br><br>
I've uploaded my code here:<br><a href="https://github.com/ngopal/mongoDBsnp/">https://github.com/ngopal/mongoDBsnp/</a><br><br>
You will, of course, need to download mongoDB from the mongoDB website.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2011-10-31 05:40:00</wp:post_date>
		<wp:post_date_gmt>2011-10-31 05:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mongodbsnp-stub-code-for-getting-dbsnp-into-a-nosql-database</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/10/mongodbsnp-stub-code-for-getting-dbsnp.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/5667212239856249430]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Micropost: Output Field Separator in AWK</title>
		<link>http://www.nikhilgopal.com/micropost-output-field-separator-in-awk/</link>
		<pubDate>Mon, 12 Sep 2011 02:22:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=59</guid>
		<description></description>
		<content:encoded><![CDATA[<span>Awk has a nifty built-in variable users can overwrite called OFS. OFS stands for output field separator.</span><br><span><br></span><br><span>Pretend I have a file which has 5 columns separated by single spaces, each of which I would like to print via AWK in tab-separated format.</span><br><span><br></span><br><span><u>Life without OFS:</u></span><br><span><br></span><br><span><i>cat file.txt | awk -F" " '{print $1"\t"$2"\t"$3"\t"$4"\t"$5}'</i></span><br><span><br></span><br><span>Sticking a "\t" between each variable proves to be very annoying when scaled up.</span><br><span><br></span><br><span><u>Life with OFS:</u></span><br><span><br></span><br><span><i>cat file.txt | awk -F" " 'BEGIN{OFS="\t";}{print $1,$2,$3,$4,$5}'</i></span><br><span><br></span><br><span>This seems a tad more reasonable. There is certainly less typing involved. The example I provided may not be the best use case, but it definitely shows the capability of OFS and where it can be useful.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2011-09-12 02:22:00</wp:post_date>
		<wp:post_date_gmt>2011-09-12 02:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>micropost-output-field-separator-in-awk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="micropost"><![CDATA[micropost]]></category>
		<category domain="category" nicename="shell"><![CDATA[shell]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/09/micropost-output-field-separator-in-awk.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/4510036260386706722]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Statistical Analysis Functions in R</title>
		<link>http://www.nikhilgopal.com/statistical-analysis-functions-in-r/</link>
		<pubDate>Sat, 20 Aug 2011 19:47:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[<span>Lately, I've been using statistical tests on a daily basis. I've noticed that I have to format my data the same way in order to get it into R (tab-delimited flat file essentially). Every other change in order to prep that data structure for any sort of statistical analysis function require minimal modification to the data structure.</span><br><span><br></span><br><span>Why not kill several birds with the same stone? I've just written a wrapper function around a few smaller, independent R scripts which perform statistical analysis tests.</span><br><span><br></span><br><span>Get the code here:</span><br><span><br></span><br><a href="https://github.com/ngopal/Statistical-Analysis-Functions"><span>https://github.com/ngopal/Statistical-Analysis-Functions</span></a><br><span><br></span><br><span>The input to the wrapper is a single, tab-delimited file (with the first row being the header). The output is a few PDF files, each complete with plots for different statistical analysis tests.</span><br><span><br></span><br><span>The statistical analysis tests which are currently performed are:</span><br><ul><li><span>Principal Component Analysis (PCA)</span></li>
<li><span>K-means Clustering</span></li>
<li><span>Hierarchical Clustering</span></li>
</ul><div><span>There are a few R scripts in the currently released package which require the user to download external libraries. These R scripts are turned off by default.</span></div><div><span><br></span></div><div><span>I am considering adding more statistical tests to the package--perhaps a t-test with a few box-and-whisker plots.</span></div><div><span><br></span></div><div><span>Now I can run one script and output several plots in one slick shot.</span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2011-08-20 19:47:00</wp:post_date>
		<wp:post_date_gmt>2011-08-20 19:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>statistical-analysis-functions-in-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<category domain="category" nicename="r"><![CDATA[R]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/08/statistical-analysis-functions-in-r.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/2096641369698734683]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioinformatics: Extra Tabs in Sam to Bam conversion</title>
		<link>http://www.nikhilgopal.com/bioinformatics-extra-tabs-in-sam-to-bam-conversion/</link>
		<pubDate>Thu, 11 Aug 2011 02:15:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[<span>Sam files cannot have any trailing tabs at the end of each sam file entry. If you do, the sam-to-bam conversion (<b>samtools view -Sb file.sam > file.bam</b>) will not work.</span><br><span><br></span><br><span>This has actually been documented here: <a href="http://groups.google.com/group/bedtools-discuss/browse_thread/thread/b0535d6769540fe0?pli=1">http://groups.google.com/group/bedtools-discuss/browse_thread/thread/b0535d6769540fe0?pli=1</a></span><br><span><br></span><br><span>I was able to get around this however, with a simple sed command:</span><br><span><br></span><br><span><span></span></span><br><pre><span><b>sed 's/[ \t]*$//' file.sam > file.notrailingtabs.sam</b></span></pre><pre><span>
</span></pre><pre><span>Now, the sam-to-bam conversion will work:</span></pre><pre><span>
</span></pre><pre><span><b>samtools view -Sb <span>file.notrailingtabs.sam > </span><span>file.notrailingtabs.bam</span></b></span></pre><pre><span><span>
</span></span></pre><pre><span><span>
</span></span></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2011-08-11 02:15:00</wp:post_date>
		<wp:post_date_gmt>2011-08-11 02:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioinformatics-extra-tabs-in-sam-to-bam-conversion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/08/bioinformatics-extra-tabs-in-sam-to-bam.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/1261483164977769174]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Scorpion and the Frog</title>
		<link>http://www.nikhilgopal.com/the-scorpion-and-the-frog/</link>
		<pubDate>Wed, 10 Aug 2011 05:21:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[<title></title><br><div><span>An interesting story derived from eastern philosophy:</span></div><div><span><br></span></div><div><span>One day a scorpion was trapped on the shore of a river, and he needed to get to the other side. </span><br><span><br></span><br><span>He asked a frog he saw swimming out in the water to come get him and take him across. The frog refused. </span><br><span><br></span><br><span>“You are a scorpion,” the frog said. “If I take you on my back, you’ll sting me.” </span><br><span><br></span><br><span>The scorpion said that was foolish, of course he wouldn’t sting him because then he would drown in the river and die, too. </span><br><span><br></span><br><span>The frog thought about it, and agreed that it wouldn’t make sense. </span><br><span><br></span><br><span>He let the scorpion on his back, and then started paddling across the river. When the frog was halfway out, the scorpion stung him. </span><br><span><br></span><br><span>As the frog was dying and they both began to slip under the water, he asked the scorpion why he did it. </span><br><span><br></span><br><span>“It’s my nature. I am a scorpion,” he said. “And scorpions <i>sting</i>.”</span><br><span><br></span><br><span><br></span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2011-08-10 05:21:00</wp:post_date>
		<wp:post_date_gmt>2011-08-10 05:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-scorpion-and-the-frog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="philosophy"><![CDATA[philosophy]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/08/scorpion-and-frog.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/4817929639223447358]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Show and Tell: &quot;AppleScript&quot; a Spotify Alarm Clock on Mac</title>
		<link>http://www.nikhilgopal.com/show-and-tell-applescript-a-spotify-alarm-clock-on-mac/</link>
		<pubDate>Wed, 03 Aug 2011 06:34:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[<span>I don't know about you guys, but I've really been enjoying Spotify. Being one of the first American users has been a real treat. Making the switch from iTunes wasn't painful at all. Sorry iTunes, sometimes the best things in life are free...</span><br><span><br></span><br><span>A few weeks ago, I used <a href="http://www.seevishal.com/?p=226">this applescript tutorial</a> to setup iTunes to be my morning alarm clock. I love this. Nothing makes it easier to get out of bed than waking up to a song that energizes you.</span><br><span><br></span><br><span>I've found a way to use Spotify instead of iTunes in the alarm clock script, and this post is going to be a quick show and tell. It's not as easy as just replacing "iTunes" with "Spotify" in the iTunes alarm clock script.</span><br><span><br></span><br><span>I would suggest following the tutorial in the link I provided earlier, substituting the script provided for the one I provide in step 1 below. Otherwise, you can follow my attempt at a walkthrough.</span><br><div>
<span><br></span></div>
<ul><li><span>Open up spotlight and open up "AppleScript Editor." Copy the code below into your editor and save it (with an easy-to-remember name). </span></li>
<ul><li><span>Edit out my username with yours</span></li>
<li><span>Edit out my playlist "muzic" with the name of your playlist</span></li>
<li><span>Press the Run button to make sure it actually works.</span></li>
<li><span><b>Update 8/13/2012:</b> I've added the code in the image below to github as a <a href="https://gist.github.com/3344086">gist</a>.</span></li>
</ul><li><a href="http://4.bp.blogspot.com/-3DkSqt519tg/Tjed1AubCpI/AAAAAAAAACg/vgnJg3HxwOw/s1600/Screen+shot+2011-08-01+at+7.08.27+PM.png" imageanchor="1"><span><img border="0" height="400" src="http://4.bp.blogspot.com/-3DkSqt519tg/Tjed1AubCpI/AAAAAAAAACg/vgnJg3HxwOw/s400/Screen+shot+2011-08-01+at+7.08.27+PM.png" width="371"></span></a></li>
<li><span>Next, pop open your terminal window and type in "crontab -e" without the quotes</span></li>
<li><a href="http://2.bp.blogspot.com/-uVEjTcfhxqE/TjeeXJdxxkI/AAAAAAAAACk/WJSqdZmXirM/s1600/Screen+shot+2011-08-01+at+7.05.56+PM.png" imageanchor="1"><span><img border="0" height="267" src="http://2.bp.blogspot.com/-uVEjTcfhxqE/TjeeXJdxxkI/AAAAAAAAACk/WJSqdZmXirM/s400/Screen+shot+2011-08-01+at+7.05.56+PM.png" width="400"></span></a></li>
<li><span>Now you will be in VI editor, so press "i" on your keyboard to "insert," and type in the following line (the one line at the bottom is all you need). Make sure the path points to the script you just made in step 1. Also note that the pound sign on the first line "comments out" the line, so that line of code is ignored.</span></li>
<li><a href="http://3.bp.blogspot.com/-PHBKSydGvWY/Tjee7nRDJ0I/AAAAAAAAACo/rz08zQWrN4w/s1600/Screen+shot+2011-08-01+at+7.05.44+PM.png" imageanchor="1"><span><img border="0" height="267" src="http://3.bp.blogspot.com/-PHBKSydGvWY/Tjee7nRDJ0I/AAAAAAAAACo/rz08zQWrN4w/s400/Screen+shot+2011-08-01+at+7.05.44+PM.png" width="400"></span></a></li>
<li><span>After you are done typing in the code, press "esc" so that a colon show up in the bottom left corner of the screen. Then type in "wq!" to save and quit the editor.</span></li>
<ul><li><span>As a note, my alarm confguration (shared in the image above) is set to wake me up at 6:01AM. I would <a href="http://adminschoice.com/crontab-quick-reference">look here</a> to find out how to edit the cron job to awaken you at a time of your own choosing.</span></li>
</ul><li><span>Next, you have to make sure your computer is on maybe 5 minutes before your alarm goes off. This can be done in the "System Preferences" application. </span></li>
<li><a href="http://3.bp.blogspot.com/-JbGcP3GNkX4/TjehBn047eI/AAAAAAAAADA/newtIshICog/s1600/Screen+shot+2011-08-01+at+7.14.19+PM.png" imageanchor="1"><span><img border="0" height="340" src="http://3.bp.blogspot.com/-JbGcP3GNkX4/TjehBn047eI/AAAAAAAAADA/newtIshICog/s400/Screen+shot+2011-08-01+at+7.14.19+PM.png" width="400"></span></a></li>
<li><span>Click on the "Energy Saver" option</span></li>
<li><a href="http://1.bp.blogspot.com/-5CqODLJGYPQ/TjehB9cs08I/AAAAAAAAADE/HdMVU8-NAC8/s1600/Screen+shot+2011-08-01+at+7.14.36+PM.png" imageanchor="1"><span><img border="0" height="300" src="http://1.bp.blogspot.com/-5CqODLJGYPQ/TjehB9cs08I/AAAAAAAAADE/HdMVU8-NAC8/s400/Screen+shot+2011-08-01+at+7.14.36+PM.png" width="400"></span></a></li>
<li><span>You don't have to mess with your sleep and display configuration, but you do need to click the "Schedule..." button on the bottom right hand corner</span></li>
<li><a href="http://4.bp.blogspot.com/-Alk3mpmYMPA/TjehCMxkNDI/AAAAAAAAADI/TiXcTXOivnA/s1600/Screen+shot+2011-08-01+at+7.14.40+PM.png" imageanchor="1"><span><img border="0" height="178" src="http://4.bp.blogspot.com/-Alk3mpmYMPA/TjehCMxkNDI/AAAAAAAAADI/TiXcTXOivnA/s400/Screen+shot+2011-08-01+at+7.14.40+PM.png" width="400"></span></a></li>
<li><span>Set your mac to wake up or start up 5 minutes before your cron job kicks off. You're all done!</span></li>
</ul><div>
<span><br></span></div>
<div>
<span><b>Congratulations, you've just setup your own Spotify alarm clock!</b></span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2011-08-03 06:34:00</wp:post_date>
		<wp:post_date_gmt>2011-08-03 06:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>show-and-tell-applescript-a-spotify-alarm-clock-on-mac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="applescript"><![CDATA[applescript]]></category>
		<category domain="category" nicename="utility"><![CDATA[utility]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/08/show-and-tell-applescript-spotify-alarm.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/2368570494367484497]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-09 21:45:39</wp:comment_date>
			<wp:comment_date_gmt>2011-08-09 21:45:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-09-17 03:55:47</wp:comment_date>
			<wp:comment_date_gmt>2012-09-17 03:55:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Team 6]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/17223956655363936555</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-03-31 16:35:21</wp:comment_date>
			<wp:comment_date_gmt>2013-03-31 16:35:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how do i edit my cron file<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Brodie Sellar]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/16434413401134246803</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-04-10 08:34:28</wp:comment_date>
			<wp:comment_date_gmt>2013-04-10 08:34:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great Tutorial !<br /><br />However i have one problem. When spotify is started from a cron job, there is no automatic login. So spotify is stuck on the login page.<br /><br />Do you have a solution for this ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Micropost: How to remove blank spaces from a fasta file</title>
		<link>http://www.nikhilgopal.com/micropost-how-to-remove-blank-spaces-from-a-fasta-file/</link>
		<pubDate>Sat, 09 Jul 2011 20:21:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[<span>Apparently BLAST doesn't like it when there are spaces between fasta entries (at least this is what my experience has been). When working with large fasta files, no one wants to remove the blank lines by hand. Here is a fast way to remove the blank lines in a fasta file in terminal:</span><br><span><br></span><br><br><div><span><b>cat sequences.fasta | sed /^$/d > sequences_no_blanks.fasta</b></span></div><div><span><br></span></div><div><span>This will turn:</span></div><div><span><br></span></div><div><span><i>>sequenceA</i></span></div><div><span><i>ATGCACACGATGATCGATCCGCGGCATCAGCAGCCTACGAGCAGCAGCGACGACGAGCAGCTACGAAGATATAGAGCA</i></span></div><div><span><i><br></i></span></div><div><span><i>>sequenceB</i></span></div><div><span><i>GTGTGTGTACAGCTGACTCGCGCGCGCGCGCAAGATATATAGAAGTAATATAGA</i></span></div><div><span><br></span></div><div><span>Into this:</span></div><div><span><br></span></div><div><span></span></div><div><span><span><i>>sequenceA</i></span></span></div><div><span><span><i>ATGCACACGATGATCGATCCGCGGCATCAGCAGCCTACGAGCAGCAGCGACGACGAGCAGCTACGAAGATATAGAGCA</i></span></span></div><div><span><span><i>>sequenceB</i></span></span></div><div><span><span><i>GTGTGTGTACAGCTGACTCGCGCGCGCGCGCAAGATATATAGAAGTAATATAGA</i></span></span></div><div><span><span><br></span></span></div><div><span><span><br></span></span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2011-07-09 20:21:00</wp:post_date>
		<wp:post_date_gmt>2011-07-09 20:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>micropost-how-to-remove-blank-spaces-from-a-fasta-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<category domain="category" nicename="micropost"><![CDATA[micropost]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/07/micropost-how-to-remove-blank-spaces.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/4696559223757444952]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Micropost: Python Scripts with Unix Pipes</title>
		<link>http://www.nikhilgopal.com/micropost-python-scripts-with-unix-pipes/</link>
		<pubDate>Thu, 09 Jun 2011 18:54:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[<span>It is possible to write a python script that can take standard-in as an input. This is very useful for quick and dirty bioinformatics pipelines. </span><br><span><br></span><br><span>Here's an example: Pretend I have a genotype file with chromsomes in the first column, and genotypes in the second column. I would like to find the complement of the genotypes (perhaps to get the data in the opposite orientation). Furthermore, say I am only interested in data that has to do with chromosome 1.</span><br><span><br></span><br><span><b>cat genotypefile.txt | awk '{if ($1="chr1"){print $0}}' | python complement.py</b></span><br><span><b><br></b></span><br><span><b>This would do it.</b></span><br><span><br></span><br><span>The python script (complement.py) would look something like this:</span><br><span><br></span><br><span><i>import sys</i></span><br><span><i><br></i></span><br><span><i>def reverseBase(base):</i></span><br><span><i>        if base == "A":</i></span><br><span><i>                return "T"</i></span><br><span><i>        elif base == "T":</i></span><br><span><i>                return "A"</i></span><br><span><i>        elif base == "G":</i></span><br><span><i>                return "C"</i></span><br><span><i>        elif base == "C":</i></span><br><span><i>                return "G"</i></span><br><span><i>        else:</i></span><br><span><i>                return "N"</i></span><br><span><i><br></i></span><br><span><i>def complement(genotype):</i></span><br><span><i>        newgeno=''</i></span><br><span><i>        for i in genotype:</i></span><br><span><i>                newgeno=newgeno+reverseBase(i)</i></span><br><span><i>        return newgeno</i></span><br><span><i><br></i></span><br><span><i><br></i></span><br><span><i>for i in sys.stdin.readlines():</i></span><br><span><i>        line = i.strip('\n').split('\t')</i></span><br><span><i><span>        </span>print complement(line[1])</i></span><br><span><br></span><br><span>The function names could be better in the example script, but the key is that we loop through "sys.stdin.readlines()". "sys.stdin" allows us to pipe in standard input.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2011-06-09 18:54:00</wp:post_date>
		<wp:post_date_gmt>2011-06-09 18:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>micropost-python-scripts-with-unix-pipes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<category domain="category" nicename="micropost"><![CDATA[micropost]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/06/python-scripts-with-unix-pipes.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/7147988431963821016]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to Mine 23andMe Data: Part 3</title>
		<link>http://www.nikhilgopal.com/how-to-mine-23andme-data-part-3/</link>
		<pubDate>Fri, 20 May 2011 23:53:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=69</guid>
		<description></description>
		<content:encoded><![CDATA[<span><b><u>A Note on Choice of Language:</u></b></span><br><span><b><u><br></u></b></span><br><span>I'm going to cheat a little bit. Taking my own advice from my post, "<a href="http://www.nikhilgopal.com/2011/05/bioinformatics-programming-like-experts.html">Bioinformatics Programming Like Experts</a>," I've found it much simpler to answer my next few questions using R. R has a number of complicated statistical tests built-in -- performing them on data is trivial.</span><br><span><br></span><br><span><b><u>What I've Done: Principal Component Analysis:</u></b></span><br><span><b><u><br></u></b></span><br><span>I've performed principal component analysis on my family's 23andMe data. In a nutshell, principal component analysis transforms multi-dimensional data into a number of components which reflect the amount of variance in each dimension. Thus, the first principal component corresponds to the dimension which accounts for most of the variation in a dataset and the last principal component </span><span>corresponds to the dimension which</span><span> </span><span>accounts for the least variation in a dataset. The process of obtaining these numbers is very involved. </span><br><span><br></span><br><span><b><u>What Are We Looking At?:</u></b></span><br><span><b><u><br></u></b></span><br><span>To get to the punchline and share what I've posted in simple terms, we can plot "principal component 1" values against "principal component 2" values and the similar data points will "cluster."</span><br><span><br></span><br><div><a href="http://1.bp.blogspot.com/-D7Jxx4rYBzs/TdHjjrgsv8I/AAAAAAAAABw/6sl8bmM5oWA/s1600/PCA.png" imageanchor="1"><span><img border="0" src="http://1.bp.blogspot.com/-D7Jxx4rYBzs/TdHjjrgsv8I/AAAAAAAAABw/6sl8bmM5oWA/s1600/PCA.png"></span></a></div><span><br></span><br><span><br></span><br><span>Since I didn't include a legend in the image above, here is who each data point corresponds to (and rough coordinates for folks who can't see color too well):</span><br><br><ul><li><span>Red = Me (-700, 1000)</span></li>
<li><span>Purple = Sister (-550, 100)</span></li>
<li><span>Pink = Mom (-1750, -1000)</span></li>
<li><span>Green = Dad (1300, 1000)</span></li>
<li><span>Blue = Grandfather (1700, -1500)</span></li>
</ul><div><span><b><u>Brief Explanation of the Image:</u></b></span><br><span><b><u><br></u></b></span></div><div><span>My sister and I are roughly half of my mother and father. So, our data points straddle between the mom and dad data points. Based on the location of the grandpa data point, its obvious whether grandpa is paternal or maternal.</span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2011-05-20 23:53:00</wp:post_date>
		<wp:post_date_gmt>2011-05-20 23:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-mine-23andme-data-part-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="23andme"><![CDATA[23andMe]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/05/how-to-mine-23andme-data-part-3.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/4984030355617572722]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioinformatics Programming Like Experts</title>
		<link>http://www.nikhilgopal.com/bioinformatics-programming-like-experts/</link>
		<pubDate>Tue, 17 May 2011 03:42:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[<span>When I (formally) learned how to program at university, I was taught a number of "rules." One of these rules was to pick one language of implementation for the program I am working on and stick with it! If you start programming in C#, then you'd better stick with C# all the way through!</span><br><span><br></span><br><span>Recently, I've asked myself if this rule is worth breaking (and when it is appropriate to do so). This rule is just something I originally took as a tenet and didn't bother to question.</span><br><span><br></span><br><span>It occurred to me the other day that every language has its strengths and weaknesses. For example, I find R is probably the best language to use when it comes to matrix operations and statistical tests (or Matlab). Python is very quick to program and easy to understand. C/C++ is great to program in if speed is important (or Java if one is so inclined). Bash is great for file manipulations, parsing, and match operations. MySQL is the standard for databases.</span><br><span><br></span><br><span>Picking a language and sticking with it for the implementation of a program will likely make it efficient for one type of function and much less so for the others. With all of the great languages out there, it would be a shame to not leverage them and their strengths. </span><br><span><br></span><br><span>On the other hand, it will also be easier to share the program if it is written in one language and does not have a slew of dependencies. </span><br><span><br></span><br><span>Essentially, we're trading ease-of-use for high efficiency.</span><br><span><br></span><br><u><span>How I use programming languages for modern bioinformatics:</span></u><br><span><b>Python</b> - application development, proof-of-concepts, complicated scripts</span><br><span><b>C/C++/Java</b> - programming (slow) functions to port to my python code, speeding up the code in the big picture</span><br><span><b>Bash</b> - parsing and file manipulation operations, simple scripts, one-offs</span><br><span><b>R</b> - data visualization and statistical tests</span><br><span><b>MySQL</b> - filtering and manipulating data in a database</span><br><span><br></span><br><span>It is important to have a handle on a language in each category. Many of my heavier pipelines contain at least three or more of the languages above (and sometimes more than once).</span><br><span><br></span><br><span>Just for the record, I don't have anything against perl. I've just found myself drifting farther and farther away from it over the years.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2011-05-17 03:42:00</wp:post_date>
		<wp:post_date_gmt>2011-05-17 03:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioinformatics-programming-like-experts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/05/bioinformatics-programming-like-experts.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/577495175573465602]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to Mine 23andMe Raw Data with Python: Part 2</title>
		<link>http://www.nikhilgopal.com/how-to-mine-23andme-raw-data-with-python-part-2/</link>
		<pubDate>Wed, 16 Mar 2011 05:12:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[<span><b><u><br></u></b></span><br><span><b><u>Creating A Family Tree With 23andMe Raw Data:</u></b></span><br><span><br></span><br><span>If you missed part one, here is the </span><span><a href="http://www.nikhilgopal.com/2011/02/how-to-mine-23andme-raw-data-with.html">link</a></span><span>. It's probably a good idea to peruse that post before moving onto this one. In this post I am going to see if I can create a family tree using the same 23andMe raw datasets I used in my last post.</span><br><span><br></span><br><span>Again, the module is freely available for download on <a href="https://github.com/ngopal/23andMe">github</a>.</span><br><span><br></span><br><span><u><b>A Note About The Algorithm:</b></u></span><br><span><br></span><br><span>Computer Scientists call this hierarchical clustering. </span><span>Biologists know this as creating a phylogenetic tree. </span><span>These are essentially the same thing. However, I am going to simplify and refine the algorithm to suit my needs. It may even be apt to call this a "quick and dirty," or "pseudo" implementation. Perhaps I will program a full implementation in the future.</span><br><span><br></span><br><span><b><u>Setting Up Metrics And Controls:</u></b></span><br><span><br></span><br><span>In my last post, I used % identity between individuals to determine how closely related one person is to another. Although it is a rather casual measure of similarity, I am going to continue using this metric because it is easy to implement. I encourage you to create and implement your own metrics as this really helps you get a better understanding of your data.</span><br><span><br></span><br><span>Since this is the second time I've used this metric, I went ahead and created a function for it. Continuing from the coding example in my last post:</span><br><span><br></span><br><span>>> Datasets.identity()</span><br><span>>> len(Datasets.identity(Datasets.intersectionData['Nikhil.txt'],Datasets.intersectionData['Person3.txt']))</span><br><span>>> 267194</span><br><span><br></span><br><span>I've also added a function to find the genotypes that are not both identical, but only share one identical SNP.</span><br><span><br></span><br><span>>> Datasets.halfIdentity()</span><br><span></span><br><div><span><span>>> len(Datasets.halfIdentity(Datasets.intersectionData['Nikhil.txt'],Datasets.intersectionData['Person3.txt']))</span></span></div><div><span><span>>> 394401</span></span></div><div><span><span><br></span></span></div><div><span><span>Just to be clear, Datasets.intersectionData is a dictionary identical to Datasets.Data. The difference is that Datasets.intersectionData only contains data for the SNPs in common between all of the files (the same SNPs contained in the Datasets.Intersection list).</span></span></div><span> </span><br><span><br></span><br><span>Since I am creating a tree, it is probably a good idea to use a few control data -- these controls should be on the outermost branches since they will be the least related to my folks and I. I've decided to use two -- <a href="http://www.snpedia.com/index.php/23andme">Mikolaj Habryn</a> (available on  SNPedia) and <a href="https://github.com/msporny/dna">Manu Sporny</a> (yes, the guy who published his 23andMe data on github). The SNPedia link contains a few more sample datasets (and there are several more scattered across the internet). I chose to use Mikolaj's published data because it has been said that he was the first person to make his 23andMe raw data publicly available. I'd like to ensure handling "old" raw data won't be a problem.</span><br><span><br></span><br><span><b><u>Building The Tree:</u></b></span><br><span><br></span><br><span>I've added the <i>phylogeny</i> function to my <i>ParseToDict</i> class.</span><br><span><br></span><br><span>>> Datasets.phylogeny()</span><br><span><br></span><br><span>The output attempts to simulate a phylogenetic tree. The tree is created by comparing each of the datasets to each other  and counting the number of identical genotypes that are shared between them. These results are organized and printed to a list (as shown below).</span><br><span><br></span><br><span>>> [[[[['Person2.txt', 'Person1.txt'], 'Nikhil.txt'], 'Person3.txt'], 'ManuSporny.txt'], 'MikolajHabryn.txt']</span><br><span><br></span><br><span>The closer the files are coupled together, the higher level of similarity between them. The reason I call this a quick and dirty implementation is that similarity is calculated with respect to the two most similar raw data inputs. Person1 and Person2 are most closely related. I am second most closely related (to Person1 and Person2). Person3 is third most closely related (to Person1, Person2, and I). I'm sure you get the idea. Keeping this in mind, the tree looks exactly as I expect it to.</span><br><span><br></span><br><span><b><u>Cool! What's Next?:</u></b></span><br><span><br></span><br><span>Now we can ask an interesting question. Can we plot the phylogenetic tree with the person's genotype "tupled" with their name -- perhaps revealing a pattern of inheritance?</span><br><span><br></span><br><span>To do this I've added an optional argument for the <i>phylogeny</i> function, <i>rsid</i>. I feel like randomly choosing '</span><span>rs6904200' for analysis today.</span><br><span><br></span><br><span>>> Datasets.phylogeny('rs6904200')</span><br><span>>> [[[[[('Person2.txt', 'AG'), ('Person1.txt', 'AG')], ('Nikhil.txt', 'AG')], ('Person3.txt', 'AG')], ('ManuSporny.txt', 'GG')], ('MikolajHabryn.txt', 'AA')]</span><br><span><br></span><br><span>It seems all of my family members and I have exactly the same genotype for this SNP (heterozygous 'AG'). The controls are homozygous for 'GG' and 'AA'. Thus far, the pattern of inheritance for this SNP merely illustrates the fact that the controls are not part of my family and that everyone in my family share the same genotype for this SNP. </span><br><span><br></span><br><span><u><b>Not So Fast...:</b></u></span><br><span><br></span><br><span>Please remember that a shared genotype between individuals does not guarantee that the individuals are related -- especially when only viewing one SNP!</span><br><span><br></span><br><span>To illustrate why, let's look at one of the SNPs I mentioned in my last post, <i>rs3754777</i>.</span><br><span><br></span><br><span>>> Datasets.phylogeny('</span><span>rs3754777</span><span>')</span><br><span></span><span>>> [[[[[('Person2.txt', 'CT'), ('Person1.txt', 'CT')], ('Nikhil.txt', 'CC')], ('Person3.txt', 'CC')], ('ManuSporny.txt', 'CT')], ('MikolajHabryn.txt', 'CC')]</span><br><div><span><br></span></div><div><span>Notice how although I am closely related to Person1, Person2, and Person3, we have a variety of genotypes shared between us. In fact, the Mikolaj has the same genotype as Person3 and I even though he has no relation to us. This function may help shed some light on which genotype came from where, but the context really needs to be taken into consideration. </span><span>The point here is to be careful not to trick yourself.</span></div><div><span><br></span></div><div><span><u><b>JSON - The Other New Feature:</b></u></span></div><div><span><u><br></u></span></div><div><span>I recently added in functionality to convert 23andMe raw data to JSON format. The input method is exactly the same, but a 23andMe.json file will appear in the current working directory. The implementation isn't fancy. It's really just a convenient wrapper over the built-in JSON module.</span></div><div><span><br></span></div><div><span>>> import 23andMe as Me</span></div><div><span>>> files = ['Nikhil.txt', 'Person1.txt','Person2.txt','Person3.txt','ManuSporny.txt','MikolajHabryn.txt']</span></div><div><span>>> Me.ParseToJSON(files)</span></div><div><span><br></span></div><div><span><u><b>Where Can I Find SNPs to Analyze?:</b></u></span></div><div><span><u><b><br></b></u></span></div><div><span>A few readers asked me this question after my first post. There are many sources available and I'm sure someone in the bioinformatics/genomics community would have made great a post about this subject. However, to get started I would suggest three sources:</span></div><div><span><br></span></div><div><ul><li><span><a href="http://www.genome.gov/gwastudies/">GWAS Catalog</a></span></li>
<li><span><a href="http://www.snpedia.com/index.php/SNPedia">SNPedia</a></span></li>
<li><span><a href="http://www.diygenomics.org/">DIY Genomics</a></span></li>
</ul><div><br></div></div><div><span>Really, even one of these sources will provide more than enough SNPs to start playing with.</span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2011-03-16 05:12:00</wp:post_date>
		<wp:post_date_gmt>2011-03-16 05:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-mine-23andme-raw-data-with-python-part-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="23andme"><![CDATA[23andMe]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/03/how-to-mine-23andme-raw-data-with.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/5618292967961730299]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to Mine 23andMe Raw Data with Python: Part 1</title>
		<link>http://www.nikhilgopal.com/how-to-mine-23andme-raw-data-with-python-part-1/</link>
		<pubDate>Wed, 09 Feb 2011 00:34:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[<span><u><b><br></b></u></span><br><span><u><b>Background:</b></u></span><br><span><u><br></u></span><br><span>Last Christmas, my company offered a substantial discount on 23andMe kits. Since I had already gotten myself sequenced about a year earlier and found the data interesting, I decided to purchase kits for my family. Their data have recently been posted and I collected their raw data files.</span><br><span><br></span><br><span>I enjoy looking at the metrics 23andMe provides, but I am curious as to what I would find if I mined the data myself. I've spent maybe an hour or so everyday for the past week exploring the data of my family members.</span><br><span><br></span><br><span><u><b>Getting Started:</b></u></span><br><span><br></span><br><span>I've uploaded my 23andMe python module to github so that folks can download it and play with their own data -- trust me it's interesting!</span><br><span><br></span><br><span><a href="https://github.com/ngopal/23andMe">https://github.com/ngopal/23andMe</a></span><br><span><br></span><br><span>The classes and functions in the module can easily be used in scripts, but I built it to be used interactively in a python interpreter.</span><br><span><br></span><br><span>If you have data to play with pull the repository down and follow along:</span><br><span><br></span><br><span>>> import 23andMe as Me</span><br><span>>> files = ['Nikhil.txt', 'Person1.txt', 'Person2.txt']</span><br><span>>> Dataset = Me.ParseToDict(files)</span><br><span><br></span><br><span>The code above should be straight-forward. The <i>import</i> statement imports my module into the environment. The <i>files</i> data structure is a list with the name/location of the raw data files. The <i>Dataset</i> data structure is basically an initialized class.</span><br><span><br></span><br><span>If you look at the source code, you may notice another class called <i>ParseToDB</i>. Initially, I loaded each raw data file into a sqlite database as a table. However, python seems to have some sort of bottleneck issue with the sqlite3 module -- the query time for a simple join command is absolutely unbearable. Thus, I reverted back to using python dictionaries. However, I left the functionality in the script with the hope that someone will find it handy.</span><br><span><br></span><br><span>I was genotyped on 23andMe's V2 chip where as my family was genotyped with the new V3 chip. Consequently, each member of my family ends up with 73% more data than me (quickly estimated via raw data file sizes). To compare myself to each member, I need to make sure I am comparing a SNP that everyone in the comparison set has in common. Enter the intersection function.</span><br><span><br></span><br><span>>> Dataset.Intersection</span><br><span><br></span><br><span>This returns a list of SNPs that we all have in common. In my case, this is on the order 540,000 SNPs. My raw data file is the limiting factor as everyone else has close to a million genotyped SNPs in their raw data files.</span><br><span><br></span><br><span><u><b>Let's Start Playing:</b></u></span><br><span><br></span><br><span>To start scratching the surface, I performed a  quick search for identical genotypes. I came up with these results:</span><br><span><br></span><br><span>Person1 and I have 67.5% identical genotypes.</span><br><span>Person1 and Person2 have 67.8% identical genotypes.</span><br><span>Person2 and I have 60.8% identical genotypes.</span><br><span><br></span><br><span>Keep in mind that these numbers are derived from whatever SNP data I've extracted.</span><br><span><br></span><br><span>23andMe reports 84% for person1 and 78% for person2 in terms of "percent similarity" (each being compared to me).</span><br><span><br></span><br><span>Since I am playing with a relatively small number of files here (three with myself included), my options are limited. A good, large dataset can go a long way.</span><br><span><br></span><br><span><u><b>Moving Along:</b></u></span><br><span><br></span><br><span>There are a number of published SNP association studies available via NCBI and NHGRI. Let's pick a SNP and see what my analysis says and compare that to my 23andMe report.</span><br><span><br></span><br><span>How about hypertension? There is a study published <a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2965757/?tool=pubmed">here</a> by Padmanabhan et al. It was published October 28, 2010 in the journal <u>PLoS Genetics</u>.</span><br><span><br></span><br><span>I've sifted through the papers and extracted the RSids, the associated nucleotide base, and the p-values for the trait above.</span><br><span><br></span><br><span>Hypertension</span><br><span>RSid: rs13333226</span><br><span>Base: A</span><br><span>P-value: 4x10^-11</span><br><span><br></span><br><span>Before I go any further, a p-value is basically a confidence value. The lower this number, the better. It essentially reflects the probability we would reach this same conclusion by chance. 4x10^-11 is a very small number -- so we can be confident about this association.</span><br><span><br></span><br><span>I used the searchSNP function in my module to go through all of the loaded files and print data to screen if it is available:</span><br><span><br></span><br><span>>> Datasets.searchSNP('rs13333226')</span><br><span><br></span><br><span>This is the output (a list of tuples):</span><br><span><br></span><br><span>[('Nikhil.txt', 'GG'), ('Person1.txt', 'GG'), ('Person2.txt', 'GG')]</span><br><span><br></span><br><span>We are all homozygous G for this SNP and none of us seem to be predisposed to hypertension. The 'A' base is the base that would predispose us.</span><br><span><br></span><br><span>23andMe does report traits for hypertension (high blood pressure). Thankfully, they also list the studies they used to make their conclusions. </span><br><span><br></span><br><span>23andMe looked at SNPs rs3754777 and rs5370. I'm going to ignore rs5370 at the moment because it has to do with hypertension <i>in physically unfit individuals</i>. The SNP I just pushed through python does not take this into account...</span><br><span><br></span><br><span>However, I am going to consider  rs3754777 because it has to do with a study on hypertension in general. Please note that it is a different SNP from a different study. According to my 23andMe report: </span><br><span><br></span><br><span>I am 'CC' which basically means, "Subjects had no increase in blood pressure." </span><br><span><br></span><br><span>Person1 and Person2 are 'CT' which means, "Subjects have an average increase of about 2mm Hg SBP and 1mm Hg DBP."</span><br><span><br></span><br><span>I'm 2/2 in finding associate evidence that I am not genetically predisposed to hypertension. However, the other two family members seem to be 1/2.</span><br><span><br></span><br><span>Wait a second. What does this mean? Who should I trust?</span><br><span><br></span><br><span><u><b>About Confidence:</b></u></span><br><span><br></span><br><span>23andMe uses a "4-star" scale to report their confidence. These stars correspond to how many independent experiments with large sample sizes have been conducted and resulted in similar findings. 4-stars is the highest score.</span><br><span><br></span><br><span><span>The 23andMe hypertension report is rated at 3-stars ("P</span><span><span>reliminary Research</span>. More than 750 people with the condition were studied, but the findings still need to be confirmed by the scientific community in an independent study of similar size.</span><span>").</span></span><br><span><br></span><br><span>The study I chose had sample size of <span>1,621 Swedish cases and 1,699 Swedish controls. This would put the SNP I evaluated at about their highest confidence level (barring the part of it being confirmed in an independent study).</span></span><br><span><br></span><br><span>By these standards, I think I can trust my analyses and say that neither I, nor the two other family members analyzed, are genetically predisposed to hypertension. However, I would be much more confident in my evaluation if an independent study is conducted of rs13333226 and reports similar findings. </span><br><span><br></span><br><span>Hopefully, I will be able to do some more interesting analytics next week.</span><br><span><br></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2011-02-09 00:34:00</wp:post_date>
		<wp:post_date_gmt>2011-02-09 00:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-mine-23andme-raw-data-with-python-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="23andme"><![CDATA[23andMe]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2011/02/how-to-mine-23andme-raw-data-with.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/128704778573105181]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[shirleywho]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://shirleywho.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-02-15 23:57:06</wp:comment_date>
			<wp:comment_date_gmt>2011-02-15 23:57:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for developing this module! Should be very useful to many.<br /><br />FYI - 23andMe updated their Hypertension report last Thursday and it now includes results for rs13333226 from the PLoS Genetics paper. https://www.23andme.com/you/journal/pre_hypertension/overview/<br /><br />Also note that the study cited for rs3754777 was done in more than 5,000 people.<br /><br />There are definitely lots of other factors involved, however, beyond these two SNPs! <br /><br />(disclosure: I currently work at 23andMe)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Nikhil Gopal]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.nikhilgopal.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-02-16 03:48:13</wp:comment_date>
			<wp:comment_date_gmt>2011-02-16 03:48:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@<a href="http://www.nikhilgopal.com/#c3971359143213216454" rel="nofollow">shirleywho</a><br /><br />Thanks Shirley. I'm happy to see that the SNP is now included. Also, thanks for clearing up how many folks rs3754777 was tested on -- this is important. Although I'm not surprised to hear that 23andMe bases SNP calling on additional factors, I'm very glad you mentioned it since I didn't touch upon this in my post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Tero Keski-Valkama]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/05343194573090691883</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-07-29 20:10:48</wp:comment_date>
			<wp:comment_date_gmt>2013-07-29 20:10:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How large is the raw file from the V3 chip?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Efficiently Reading in and Iterating Through Large Files with Python</title>
		<link>http://www.nikhilgopal.com/efficiently-reading-in-and-iterating-through-large-files-with-python/</link>
		<pubDate>Thu, 23 Dec 2010 21:40:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[<div><span>One of the challenges of being a bioinformatician is efficiently dealing with large files. Imagine parsing through a text file that is a couple of terabytes--not a feat as simple as one would think. Usually, even though we get mass amounts of data in a text file, we can avoid worrying about the size of the file since we have powerful computing clusters. I know, we are all so spoiled. However, every now and then we have to bite the bullet and not rely on ample resources to make up for our blissful ignorance.<br><br>
I wrote a python script that does some plotting for me. However, it takes about a week to run since it has to parse through about 500 gigabytes of data and process them.<br><br>
There are two programming amendments that are easy to implement and very helpful in keeping a low memory footprint (and also speeding up the program):<br><br>
(1) <b>range</b><br>
In python, using the range function actually creates a list which it stores in memory. However, using xrange just iterates through the numbers.<br><br>
range(0,5000) takes up more memory than xrange(0,5000)<br><br>
Here is a quick example of what I mean:<br><br><u>range.py:</u><br><i>import sys<br><br>
for i in range(0,int(sys.argv[1])):<br>
        pass<br><br>
print " "</i><br><br><u>xrange.py:</u><br><i>import sys<br><br>
for i in xrange(0,int(sys.argv[1])):<br>
        pass<br><br>
print " "</i><br><br><br><span>[$] time python range.py 10000000</span><br><br><span>real    0m1.139s</span><br><span>user    0m0.911s</span><br><span>sys     0m0.228s</span><br><br><span>[$] time python xrange.py 10000000</span><br><br><span>real    0m0.506s</span><br><span>user    0m0.502s</span><br><span>sys     0m0.004s</span><br><br><br>
(2) <b>readlines</b><br>
when reading in a file, I usually write something along the lines of:<br><br><i>file = open('somefile.txt', 'r')<br>
for i in file.readlines():<br>
    # operation<br>
file.close()</i><br><br>
This is great. It is clear, concise, and elegant. However, the file being read in is stored into memory. If the text file is gigantic, this may not be a very good idea. Luckily, there are several ways around this:<br><br><u>Method 1:</u><br><i>with open('somefile.txt', 'r') as FILE:<br>
    for i in FILE:<br>
        # operation</i><br><br>
Please note that the "with" construct is only available from Python 2.6 onwards.<br><br><u>Method 2:</u><br><i><span>import fileinput</span><br><span>for i in fileinput.input('somefile.txt'):</span><br><span>    # operation</span></i><br><br>
The fileinput module is great for folks who like to use as many pre-built modules as possible rather than re-inventing the wheel.<br><br><u>Method 3:</u><br><i><span>BUFFER = int(10E6) #10 megabyte buffer</span><br><span>file = open('somefile.txt', 'r')</span><br><span>text = file.readlines(BUFFER)</span><br><span>while text != []:</span><br><span>    for t in text:</span><br><span>        # operation</span><br><span>    text = file.readlines(BUFFER)</span></i><br><br>
Although this method is the messiest of the three, it also provides the most control over how much memory the program can suck up.<br><br>
Even though it might be more memory efficient to not load the entire text file into memory, the program may end up being slower if one is not careful. It is a balancing act and there is no single correct way to go about something like this. One just needs to weigh out the options and do what seems best. From my experience, the three methods have a minimal variance is execution time (no matter how large the file), so it really comes down to a matter of personal preference. </span><span> I've used all three of the suggested methods at one time or another. My personal preferences are either methods one or three. </span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2010-12-23 21:40:00</wp:post_date>
		<wp:post_date_gmt>2010-12-23 21:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>efficiently-reading-in-and-iterating-through-large-files-with-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[bioinformatics]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2010/12/dealing-with-large-files-in-python.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/2627146628413538481]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Being Productive and Remaining Stress Free</title>
		<link>http://www.nikhilgopal.com/being-productive-and-remaining-stress-free/</link>
		<pubDate>Wed, 08 Dec 2010 07:58:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[<div><span>Over the last week, I had to investigate, prepare, and present an important scientific study, as well as write a final paper for a class I was taking. Needless to say, it was not easy to remain stress free. I may have appeared calm and collected on the outside, but on the inside I was a total train wreck. It is a well documented fact that stress can be a killer—so cutting as much out as possible is definitely something worth striving for.</span></div><div><span><br></span></div><div><span>Productivity and stress don't really have much to do with each other. They may be correlated in some ways, but for the most part they are independent.  </span></div><div><br><span>It is possible to be:</span></div><ul><li><div><span>productive and not stressed   </span></div></li>
<li><div><span>stressed and not productive</span></div></li>
<li><div><span>unproductive and unstressed</span></div></li>
<li><div><span>productive and stressed.</span></div></li>
</ul><div><span><br></span></div><div><span>I've found that there are 3 factors that contribute to making a task stressful:</span></div><ul><li><div><span>poor planning</span></div></li>
<li><div><span>unreasonable expectations</span></div></li>
<li><div><span>poor time management</span></div></li>
</ul><div><span><br></span></div><div><span>When there is no plan, there really isn't any course of action to follow. Setting up a plan for action is essential. This will ensure a smooth flow of events when completing task milestones. There shouldn't be any moment when a milestone is complete and one is left to wonder about what to do next.</span></div><div><span><br></span></div><div><span>Being ambitious is one thing, setting high standards is another, but setting unreachable goals is just a waste of time and energy. Not only is this demotivating, but it is something that will never get finished. Nobody likes to fail, so why setup for failure? Ultimately, it does more harm than good.</span></div><div><span><br></span></div><div><span>Taking long breaks is completely understandable. In fact, I encourage it! A fresh mind is a more productive mind. However, there is a point where it is necessary to buckle down and churn out some machine-like work. Human beings are very capable of working on a single task for a few hours straight. Besides taking it easy on the breaks, it is crucial to spend time on the right parts of the task! Remember the 80/20 rule. 20% of the work takes 80% of the time, 80% of the work takes 20% of the time. Get that 80% done. Finish the easy tasks first and then go for the gold.</span></div><div><span><br></span></div><div><span>In retrospect, I'm sure that if I had followed my own advice I wouldn't have been so stressed out. Hopefully, anybody else who reads this takes away something useful.</span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2010-12-08 07:58:00</wp:post_date>
		<wp:post_date_gmt>2010-12-08 07:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>being-productive-and-remaining-stress-free</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="productivity"><![CDATA[productivity]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2010/12/being-productive-and-remaining-stress.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/88984238314618021]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Network Visualization Library Round-Up</title>
		<link>http://www.nikhilgopal.com/?p=439</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=439</guid>
		<description></description>
		<content:encoded><![CDATA[Over the years I've tried quite a few javascript-based visualization libraries. This page is meant to be a small round-up of what I've used or found. All of these libraries are awesome and are in no particular order! Although, there are differences between them.

D3.js - This is probably the obvious choice. However, there is a steep learning curve for this library, even for experienced programmers. Although, the D3 gallery is absolutely amazing and has a plethora of graph visualization examples. If you can get the hang of the basics of D3 (data-binding loaded data to SVG elements), then the force-directed graph function that comes with the library takes care of the hard part (the layout algorithm). It's possible to tweak the layout algorithm as well. Needless to say, the selling point for D3.js is its highly customizable (and expressive) nature. Cola.js is cool.

P5.js - If I'm not mistaken, this is the newest of the libraries on this list. It amounts to being the javascript version of Processing. If you are just trying to get your feet wet with visualization and are not an experienced programmer, this is the library to try. This library is very forgiving. If you've been playing with the intro to coding page at the Kahn Academy and want to move to the next step, this is your best bet.

Arbor.js - This isn't really a network visualization library per se, but it certainly enables you to make one! Arbor is a force-directed layout engine. Those who have programmed one before know how involved layout engines can be. The layout engine is highly customizable. An experienced programmer shouldn't have too many false starts before being able to substitute Arbor.js into their application if desired.

Sigma.js - This is the HTML5/Canvas option. D3 (and most other libraries I've found) typically use SVG to render graphs. However, Sigma.js uses the competing technology. For sparse graphs, it probably won't make much of a difference in terms of user experience. However, there are certainly trade-offs as graphs grow larger in size. If using SVG, the DOM starts to crumble at a certain point. By my own testing on my laptop, D3 can support about 10,000 nodes in a graph before slowing to a halt. Sigma.js can support many more nodes in this scenario. However, SVG is enables a higher level of interactivity and can be refreshed/updated quickly, where as Canvas is much slower in this scenario because the entire network must be refreshed instead of individual components.

Cytoscape.js - The javascript version of the popular Java-based tool.

Vis.js - Last but not least, Vis.js. This is my favorite graph visualization library. It seems designed to be customizable through user set options (in JSON). This interface makes it really easy to keep the code base simple while enabling high customization. As users, we can set visual properties of the graphs as well as tweak the layout engine properties or loading properties.

Table (Javascript Experience, Visualization Experience):

D3 (High, High)

P5 (Low, Low-High)

Arbor (Medium-High, High)

Sigma.js (Low-Medium,Medium)

Cytoscape.js (Medium-High, Low-Medium)

Vis.js (Low-Medium, High)

&nbsp;
<ul>
	<li>D3.js
<ul>
	<li>SVG-based option</li>
	<li>High-level of customization</li>
</ul>
</li>
	<li>P5.js</li>
	<li>Arbor.js
<ul>
	<li>Really just a force-directed engine</li>
</ul>
</li>
	<li>Sigma.js
<ul>
	<li>Canvas-based option for network visualization</li>
</ul>
</li>
	<li>Vis.js
<ul>
	<li>Probably my favorite network visualization library.</li>
	<li>Allows for high customizability without hampering</li>
</ul>
</li>
	<li>Dracula (raphael)</li>
	<li>Plumbjs</li>
</ul>
Of course, there are other options, although not browser-based:
Python + graph-tool - I really wanted to get this to work, but installation is a nightmare! I was never able to get going with this, but I'm sure it would have been an awesome tool if I had.

GUI-Based:
Cytoscape - The mother of all network visualization tools. This tool is more prominently used in my scientific community (biomedical sciences) over Gephi.
Gephi - The general-purpose network tool. The advantage of most Java-based visualization tools is that they can support exploration of large networks.

Database:
-Neo4J
-Abstracting a graph store over another DB

Analysis:

SNAP.py]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2015-05-12 19:09:37</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.nikhilgopal.com/?p=473</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=473</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.troubling.info/vonnegut.html" target="_blank">Kurt Vonnegut's Eight rules for writing fiction</a> translated into 8 rules for data visualization:

1. Use the time of a total stranger in such a way that he or she will not feel the time was wasted.
translation: 
2. Give the reader at least one character he or she can root for.
translation: 
3. Every character should want something, even if it is only a glass of water.
translation: 
4. Every sentence must do one of two things -- reveal character or advance the action.
translation: 
5. Start as close to the end as possible.
translation: 
6. Be a sadist. Now matter how sweet and innocent your leading characters, make awful things happen to them -- in order that the reader may see what they are made of.
translation: 
7. Write to please just one person. If you open a window and make love to the world, so to speak, your story will get pneumonia.
translation: 
8. Give your readers as much information as possible as soon as possible. To heck with suspense. Readers should have such complete understanding of what is going on, where and why, that they could finish the story themselves, should cockroaches eat the last few pages.
translation: ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date>2015-02-10 20:12:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ghana: Day 4-9</title>
		<link>http://www.nikhilgopal.com/ghana-day-4-9/</link>
		<pubDate>Tue, 03 Sep 2013 22:08:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=5</guid>
		<description></description>
		<content:encoded><![CDATA[<span>This is going to be a combined post. I've been pretty busy for the 
past few days and my access to the internet has been intermittent:</span><br><span><br></span>
<span><a href="http://www.flickr.com/photos/44579186@N08/sets/72157635246859994" target="_blank">http://www.<span>flickr</span>.com/<wbr></wbr>photos/44579186@N08/sets/<wbr></wbr>72157635246859994</a></span> <br><span><br></span>
<span>Day 4:</span><br><ul><li><span>We
 went to a restaurant on campus called Tasty Treats. The food was 
awesome, but there were some interesting options none of us had ever 
tried before. We drew straws and someone in our group ended up eating a 
snail (which apparently tastes like chicken and has the consistency of 
octopus)!</span></li>
<li><span>People really are excited to see an "obruni" (Twi word
 for foreigner) speaking the local language. I almost immediately get 
better treatment. When I bargain in Twi, I almost definitely get WAY 
better deals. At the same time, people are so happy to see it that they 
shake my hand and invite me to hang out with them.</span></li>
<li><span>We had a very
 interesting conversation about what actually defines poverty and 
western paternalism. We unanimously agreed that a lack of money does not
 equal poverty. However, we weren't sure that it was completely 
independent either. We ended up deciding that the primary measuring 
stick of poverty is a lack of opportunity.</span></li>
</ul><span>Day 5:</span><br><ul><li><span> The
 judgement on the election results went smoothly. There were no riots 
and no one died (unlike what happened in Kenya). Everyone is counting 
their blessings. There was certainly tension in the air. Every white 
person in our group was getting shooed away when taking photographs for 
fear of being manipulated or misrepresented. This phenomenon seems to be
 more prevalent in much poorer areas--our theory is that people are 
embarrassed to be on camera or that they think we are going to profit 
off of their poverty and want to be compensated).</span></li>
<li><span>The 
community here is surprisingly small. It's starting to get to the point 
where I can go to the mall, walk around on campus, or go downtown and 
see someone I've met before. What's even more amazing is that people 
remember me, when I dropped by, and what I bought or did!</span></li>
<li><span>I now 
have a fruit guy. I buy fruit exclusively from a 20-something year old 
guy from Togo. I tried to speak the local language with him and he said 
he didn't speak it! I tried Spanish but he didn't know that. His English
 wasn't bad, but it wasn't his preferred language. We settled on French 
(which is surprisingly rare around here). The joke is that everyone 
around Ghana speaks French except for Ghanians, even the fish.</span></li>
<li><span>I
 also learned about Ghanaian marriages. There is definitely a sense of 
tradition. Although people seem to go through the motions in a contrived
 sort of way, it is the mode of operation here and people enjoy it. The 
man has to approach the girls parents and the parents have to act 
clueless. The parents have to then tell the girl there is someone 
interested in them and give her the choice of whether or not she wants 
to marry him. The man's family then comes to the girls house with tons 
of gifts to persuade the woman to join his family. Then a wedding is 
arranged. Water is of utmost importance in Ghanaian culture. When someone visits your home and you don't offer them water, it is considered an insult. Refusing the water someone offers you is an insult to the host (and likely means you are there for some sort of altercation).</span></li>
</ul><span>Day 6:</span><br><ul><li><span>We
 got to learn drumming and dancing from a man who is a graduate student 
in the School of Fine Arts here at the University of Ghana. We see women
 carrying babies on their backs and working away. If a women with a baby
 is making food and the baby is crying, she makes the food to the rhythm
 of a song and calms the baby down while still working. Maternity leave 
is almost unheard of here.</span></li>
<li><span>I've been trying Ghanaian alcohol 
(although there aren't that many options). Many people are extremely 
religious and give me dirty looks when they seen foreigners drinking in 
their country. This may also account for why alcohol is so cheap 
here--there is minimal demand for it. We had a pretty good happy hour 
tonight.</span></li>
<li><span>There are a number of educated Ghanians (and other 
Africans from other countries too). Many people leave their country to 
learn English in Ghana. English is much more marketable than French or 
local languages. Since English is the official language of this country,
 everyone can speak at least a little. A man with a small storefront I 
had a conversation with was fluent in Chinese. Another man had several 
family members in America (New Jersey to be exact) and chooses to live 
in Ghana because he likes it better. Other people were very open to 
sharing their stories and were very interested in hearing mine.</span></li>
</ul><span>Day 7</span><br><ul><li><span>It seems that everyone here believes in some sort of a higher power. I've noticed that people become really uneasy when I don't have a solid reply for what religion I follow. Atheism is almost unheard of here.</span></li>
</ul><span>Day 8</span><br><ul><li><span>MOTECH - Mobile Technology for Community Health</span></li>
<ul><li><span>This is a very interesting company I visited and I hope they succeed. Many pregnant women in rural areas do not have access to the internet or medical professionals. Consequently, they tend to have a large number of miscarriages or high infant mortality. This company is setting up a system such that rural women and their family members can register for updates via their mobile phones. Pregnant women get an update every week about what they should be doing and what they should expect. Now, of course, this system comes with a number of challenges in cultural, financial, and technological contexts, but they are close to getting this idea off of the ground. They will go bankrupt if they don't obtain more funding by this next March--they have to show the Grameen and Bill and Melinda Gates foundations that they are making a significant difference here. I'm so proud to be able to help a company like this.</span></li>
</ul><li><span>GIFEC - Ghana Investment Fund for Electronic Communications</span></li>
<ul><li><span>We also visited GIFEC (a governmental agency that funds programs in Ghana that helps the poor). People were nice, but many of the things they shared seemed very rosy.<br> Suspiciously rosy.</span></li>
</ul></ul><span>Day 9</span><br><ul><li><span>We went to a major internet cafe called Busy Internet. A section of the building was for normal citizens who just want to Facebook or check email. Another area was reserved for people who brought their own computers but wanted wifi access. Yet another area is reserved for start-up companies and "soft business" incubation. The more serious business are provided space upstairs.</span></li>
<li><span>Esoko is a company that makes mobile phone apps for rural farmers. Farmers sometimes get ripped off on their produce and sell for too little. Other times they can't find a buyer. This app solves both problems for them.</span></li>
<li><span>I had my first encounter with Ghanaian gypsy children (who happened to speak Portuguese and English in addition to Twi, interestingly) </span></li>
</ul><span><br></span>
<span>We leave for the Volta region tomorrow. And if internet connectivity wasn't hard to come by before, it certainly will be now... </span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2013-09-03 22:08:00</wp:post_date>
		<wp:post_date_gmt>2013-09-03 22:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ghana-day-4-9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="travel"><![CDATA[travel]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2013/09/ghana-day-4-9.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/6969352505643015938]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ghana: Day 3</title>
		<link>http://www.nikhilgopal.com/ghana-day-3/</link>
		<pubDate>Tue, 27 Aug 2013 21:36:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[I started the day with an interesting cabbage and sausage dish. It was simple, greasy, and ohhh so delicious. I couldn't stand the instant coffee at first, but I'm almost embarrassed to say it's been growing on me.<br><br>We had a lecture from a professor named Godfrey. He gave us a breakdown of the mobile market in Ghana and explained how the government is involved with the "invisible hand" in this country. It's a free market economy, but the government seems to favor local providers being the major supplier of mobile phone cards--and the government will pass laws to make it so. Speaking of which, there is a major court case that is going to receive a verdict this Thursday. The US Embassy is warning there might be riots and we might be evacuated. However, all of the program coordinators and political science professors I've interacted with don't think it will come to that and assure me that there is no need to be worried.<br><br><br><br><br><br><br>
The Twi lesson today was very interesting. I was given an African name: Kwabana. Since that name is kind of a mouthful, they gave me the nickname, "nanaki." This roughly translates to "King Tuesday." Tuesday because that was the day I was born. Ghanaians refer to each other by the day they were born! The culture is very much a "drop-in" culture. Our teacher was talking about how she drops-in on her friends all of the time. Everybody here seems to be very religious. I've been invited to church several times and I think I am going to go (there doesn't seem to be any escaping it). People have been finding my philosophical insights on life very interesting--it seems to be a way of thinking most Ghanaian haven't been exposed to.<br><br>I bought plantain chips on the road. These are pretty good. They're dirt cheap too. Literally less than 50 cents USD. I bought a bag of water for 25 cents USD. I've spent less than $2 USD on all three of my meals today. And everything has been delicious.<br><br><br><br><br><br><br><br><div>
<a href="http://2.bp.blogspot.com/-KPOeatnu3BY/Uh0aN6CzqAI/AAAAAAAAEO4/_HtuGLZ-YcY/s1600/2012-08-27+04.20.07-1.jpg" imageanchor="1"><img border="0" height="240" src="http://2.bp.blogspot.com/-KPOeatnu3BY/Uh0aN6CzqAI/AAAAAAAAEO4/_HtuGLZ-YcY/s320/2012-08-27+04.20.07-1.jpg" width="320"></a></div>
<br><div>
<a href="http://4.bp.blogspot.com/-Ct1N2sZQk4s/Uh0a8Q36ShI/AAAAAAAAEPY/f4l4PgR9q5I/s1600/2012-08-26+13.39.46.jpg" imageanchor="1"><img border="0" height="240" src="http://4.bp.blogspot.com/-Ct1N2sZQk4s/Uh0a8Q36ShI/AAAAAAAAEPY/f4l4PgR9q5I/s320/2012-08-26+13.39.46.jpg" width="320"></a></div>
<br><br>I also took a tour of Accra today. I learned about the first president and he was definitely an interesting guy. He married an Egyptian woman although it wouldn't be healthy for him to do so in a local political sense (although it would be very healthy from a foreign relations sense). He did his undergraduate work at Lincoln University, his masters at UPenn, and his PhD at the London School of Economics. He was eventually overthrown because of the revolutionary company of friends he'd keep. I would have flipped through his thesis, but it was protected under glass. He'd hang out with everyone from Muhammad Ali to Nehru to Castro to Mao.<br><br><br><br><div>
<a href="http://4.bp.blogspot.com/-RlKmdv1XnCI/Uh0aXAHQ4TI/AAAAAAAAEPA/9AI9c670REU/s1600/2012-08-27+04.58.40.jpg" imageanchor="1"><img border="0" height="240" src="http://4.bp.blogspot.com/-RlKmdv1XnCI/Uh0aXAHQ4TI/AAAAAAAAEPA/9AI9c670REU/s320/2012-08-27+04.58.40.jpg" width="320"></a></div>
<br><div>
<a href="http://3.bp.blogspot.com/-Vn2Yf5GBl3g/Uh0aeC3NGBI/AAAAAAAAEPI/4HBhR-R1sEE/s1600/2012-08-27+04.55.46.jpg" imageanchor="1"><img border="0" height="240" src="http://3.bp.blogspot.com/-Vn2Yf5GBl3g/Uh0aeC3NGBI/AAAAAAAAEPI/4HBhR-R1sEE/s320/2012-08-27+04.55.46.jpg" width="320"></a></div>
<br><div>
<a href="http://3.bp.blogspot.com/-ODiHEo2YR-I/Uh0alRcuJfI/AAAAAAAAEPQ/v9gi8pcVDFE/s1600/2012-08-27+05.39.50.jpg" imageanchor="1"><img border="0" height="320" src="http://3.bp.blogspot.com/-ODiHEo2YR-I/Uh0alRcuJfI/AAAAAAAAEPQ/v9gi8pcVDFE/s320/2012-08-27+05.39.50.jpg" width="240"></a></div>
<br><br>
I finally tried Waakye for lunch. It was basically a type of spicy meat (chicken or fish) served with rice and black-eyed peas. I have a lot more food to try! I went to a night market close to the university. I ended up getting dinner to-go and they basically just thrown all of the food you order into a plastic bag (which you then eat with your hands). All in all it's been a pretty interesting day.<br><br>
Gerald has gone AWOL. I hope he wasn't kidnapped by any of the hotel attendants. He was really growing on me. Who knows-- he may turn up tomorrow morning.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2013-08-27 21:36:00</wp:post_date>
		<wp:post_date_gmt>2013-08-27 21:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ghana-day-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="travel"><![CDATA[travel]]></category>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2013/08/ghana-day-3.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/4829014014728528401]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ghana: Day 2</title>
		<link>http://www.nikhilgopal.com/ghana-day-2/</link>
		<pubDate>Mon, 26 Aug 2013 20:06:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA[<span><span><span><span>I've started an album here: http://www.flickr.com/photos/44579186@N08/sets/72157635246859994</span></span> </span></span><br><br><span><span>I awoke to roosters and birds. My little lizard friend (who I'm now calling Gerald) was there to greet me.<br><br>My breakfast this morning consisted of 3 pieces of toast, a cup of tea, an omelet, baked beans, and gizzards. Yes, I had gizzards (the digestive tract of a chicken I believe). It was chewy. Very chewy.<br><br>I started learning some Twi (the local language here). I can say a lot of the basic things (where I am from, who I am, how I am, asking, "how are you," etc.) I'll be doing this everyday for a week plus being immersed in the culture. I'm probably going to reach reasonable proficiency with this language! One of the more interesting parts of Ghanian culture is how they address others. A child interacting with his or her mother's friend would refer to her as "mother!" A woman interacting with her friend's child would also refer to the child as "son" or "daughter." The concept of aunt, uncle, or cousin doesn't really exist.</span></span><br><span><span><br></span></span>
<br><div>
<a href="http://1.bp.blogspot.com/-_bxxtP2qrco/Uhu2UxzZErI/AAAAAAAAEN4/1GrzrtUTHMI/s1600/2012-08-26+03.56.17-1.jpg" imageanchor="1"><img border="0" height="240" src="http://1.bp.blogspot.com/-_bxxtP2qrco/Uhu2UxzZErI/AAAAAAAAEN4/1GrzrtUTHMI/s320/2012-08-26+03.56.17-1.jpg" width="320"></a></div>
<span><span><br></span></span>
<span><span></span></span><br><span><span></span></span><br><span><span><br>We took a campus tour after the Twi lesson. Surprisingly large. The student life seems interesting. The book store had some great books. There were some interesting titles available such as, "How to Avoid Intimacy." The stats book were very interesting.</span></span><br><span><span></span></span><br><span><span></span></span><br><span><span></span></span><br><span><span><br></span></span>
<br><div>
<a href="http://3.bp.blogspot.com/-PQx4e3JcxBU/Uhu2KdxwBUI/AAAAAAAAENw/D1u5A9AVZUc/s1600/2012-08-26+04.05.26.jpg" imageanchor="1"><img border="0" height="240" src="http://3.bp.blogspot.com/-PQx4e3JcxBU/Uhu2KdxwBUI/AAAAAAAAENw/D1u5A9AVZUc/s320/2012-08-26+04.05.26.jpg" width="320"></a></div>
<span><span><br></span></span>
<span><span></span></span><br><span><span><br>We then ate lunch at a relatively high-end Ghanaian restaurant. Very tasty and things don't taste the way we would expect them to taste. Fufu was amazing (although what we have pictured here is tilapia). </span></span><br><span><span><br></span></span>
<br><div>
<a href="http://2.bp.blogspot.com/-o1khPfVvAHg/Uhu2jM95ymI/AAAAAAAAEOA/inmpW02eC6w/s1600/2012-08-26+06.19.27.jpg" imageanchor="1"><img border="0" height="240" src="http://2.bp.blogspot.com/-o1khPfVvAHg/Uhu2jM95ymI/AAAAAAAAEOA/inmpW02eC6w/s320/2012-08-26+06.19.27.jpg" width="320"></a></div>
<div>
<a href="http://3.bp.blogspot.com/-GluUMuUfdXU/Uhu2_3z0DrI/AAAAAAAAEOM/SznbaitreFo/s1600/2012-08-26+06.19.40.jpg" imageanchor="1"><img border="0" height="240" src="http://3.bp.blogspot.com/-GluUMuUfdXU/Uhu2_3z0DrI/AAAAAAAAEOM/SznbaitreFo/s320/2012-08-26+06.19.40.jpg" width="320"></a></div>
<span><span><br></span></span>
<span><span></span></span><br><span><span><br>We all needed cellphones so we went shopping at a mall. Went to a street market and was almost roped into buying things I don't need yet. Not pushy, but good sellers. <br><br>In general, people are very friendly. Store owners REALLY enjoy to see me making an effort to learn and speak the local language. It seems like they suddenly stop viewing me as a tourist and view me as one of their own! Many even discount their goods--a nice perk, right?<br><br>However, I've realized that most Ghanians don't like getting their picture taken. Literally every place I've been to today enforces a "no photo" policy. The library (the university of Accra has the largest library in west Africa by the way) doesn't allow pictures. The grocery store doesn't allow pictures. Even the airport doesn't allow pictures.<br><br>Dinner wasn't too different from lunch. I essentially had fish again.<br><br>Gerald has decided to take the other bed. He has the right idea.</span></span><br><br><div>
<a href="http://2.bp.blogspot.com/-enzPZ5CO4nY/Uhu3WKORq2I/AAAAAAAAEOU/F_XIqXkIKdA/s1600/2012-08-26+09.57.54.jpg" imageanchor="1"><img border="0" height="240" src="http://2.bp.blogspot.com/-enzPZ5CO4nY/Uhu3WKORq2I/AAAAAAAAEOU/F_XIqXkIKdA/s320/2012-08-26+09.57.54.jpg" width="320"></a></div>
<br><div>
<a href="http://2.bp.blogspot.com/-UrKjHTLA-70/Uhu3ZI7A4mI/AAAAAAAAEOc/MVCis66yIjo/s1600/2012-08-26+09.56.30.jpg" imageanchor="1"><img border="0" height="240" src="http://2.bp.blogspot.com/-UrKjHTLA-70/Uhu3ZI7A4mI/AAAAAAAAEOc/MVCis66yIjo/s320/2012-08-26+09.56.30.jpg" width="320"></a></div>
<br><span><span><br></span></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2013-08-26 20:06:00</wp:post_date>
		<wp:post_date_gmt>2013-08-26 20:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ghana-day-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="travel"><![CDATA[travel]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2013/08/ghana-day-2.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/2634784913819298723]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ghana: Day 1</title>
		<link>http://www.nikhilgopal.com/ghana-day-1/</link>
		<pubDate>Mon, 26 Aug 2013 20:05:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=8</guid>
		<description></description>
		<content:encoded><![CDATA[<span><span>I've arrived in Ghana. My first impression is that this country is very similar to India, but much less chaotic. Unfortunately my power inverter seems to have died as soon as I plugged it in. The internet is also a little spotty.</span></span><br><span><span><br></span></span>
<span><span>People are very friendly thus far. I definitely stick out like a sore thumb! Little lizards in the bathroom were here to greet me and all of the mosquitoes in the entire country seem to be vying for my attention!</span></span><br><span><span><br></span></span>
<span><span>Early day tomorrow!</span></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2013-08-26 20:05:00</wp:post_date>
		<wp:post_date_gmt>2013-08-26 20:05:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ghana-day-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="travel"><![CDATA[travel]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2013/08/ghana-day-1.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/2426617140326331183]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Guerilla Guide to R</title>
		<link>http://www.nikhilgopal.com/the-guerilla-guide-to-r/</link>
		<pubDate>Mon, 13 May 2013 00:39:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=12</guid>
		<description></description>
		<content:encoded><![CDATA[<b>Update: </b>Okay. I've uploaded a new template and things seem to be fine now.<b> </b>

<b>Update:</b> I am aware the table of contents is not being displayed in bullet form as I intended. The web template I'm using seems to be buggy. It also seems to think this page is in Indonesian...Working on it!<b></b>

<b><span style="text-decoration: underline;">Table of Contents:</span></b>
<ol>
	<li><b>Reading/Writing Files</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/2470248/write-lines-of-text-to-a-file-in-r" target="_blank">How to write lines of text into a file</a></li>
	<li><a href="http://stackoverflow.com/questions/3094866/trimming-a-huge-3-5-gb-csv-file-to-read-into-r" target="_blank">Trimming a huge (3.5GB) csv file to read into R</a></li>
	<li><a href="http://stackoverflow.com/questions/1727772/quickly-reading-very-large-tables-as-dataframes-in-r" target="_blank">Quickly reading large dataframes into R</a></li>
	<li><a href="http://stackoverflow.com/questions/12767432/how-can-i-tell-when-my-dataset-in-r-is-going-to-be-too-large" target="_blank">How can I tell if my R dataset is going to be too large?</a></li>
	<li><a href="http://stackoverflow.com/questions/1928332/is-there-any-standard-logging-package-for-r" target="_blank">Standard logging library for R</a></li>
</ol>
</li>
	<li><b>Dataframes</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/1413697/how-do-you-write-a-csv-in-r-with-the-matrix-names-dimnamesm-intact-in-r?rq=1" target="_blank">How do you write a CSV in R with matrix names dimnames(M) intact?</a></li>
	<li><a href="http://stackoverflow.com/questions/1299871/how-to-join-data-frames-in-r-inner-outer-left-right" target="_blank">How to join dataframes in R (inner, outer, left, right)?</a></li>
	<li><a href="http://stackoverflow.com/questions/4605206/drop-columns-r-data-frame" target="_blank">Dropping Columns in Dataframes</a></li>
	<li><a href="http://stackoverflow.com/questions/1195826/dropping-factor-levels-in-a-subsetted-data-frame-in-r" target="_blank">Dropping factor levels in a subsetted dataframe</a></li>
	<li><a href="http://stackoverflow.com/questions/4862178/remove-rows-with-nas-in-data-frame" target="_blank">Remove rows with NA in your dataframe</a></li>
	<li><a href="http://stackoverflow.com/questions/3642535/creating-an-r-dataframe-row-by-row" target="_blank">Creating an R dataframe row by row</a></li>
	<li><a href="http://stackoverflow.com/questions/4322219/whats-the-fastest-way-to-merge-join-data-frames-in-r" target="_blank">Fastest way to merge/join dataframes</a></li>
</ol>
</li>
	<li><b>Lists and Vectors</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/2050790/how-to-correctly-use-lists-in-r" target="_blank">How to correctly use lists in R?</a></li>
	<li><a href="http://stackoverflow.com/questions/10449366/levels-what-sorcery-is-this/10491881#10491881" target="_blank">Levels - what sorcery is this?</a></li>
	<li><a href="http://stackoverflow.com/questions/1169248/r-function-for-testing-if-a-vector-contains-a-given-element" target="_blank">R function for testing if a vector contains a given element?</a></li>
	<li><a href="http://stackoverflow.com/questions/4227223/r-list-to-data-frame" target="_blank">Converting lists to dataframe</a></li>
	<li><a href="http://stackoverflow.com/questions/1169456/in-r-what-is-the-difference-between-the-and-notations-for-accessing-the" target="_blank">In R, what is the difference between [] and [[]] notations accessing the elements of a list</a></li>
	<li><a href="http://stackoverflow.com/questions/3418128/how-to-convert-a-factor-to-an-integer-numeric-without-a-loss-of-information" target="_blank">How to convert a factor to an integer/numeric without a loss of information</a></li>
	<li><a href="http://stackoverflow.com/questions/77434/how-to-access-the-last-value-in-a-vector" target="_blank">How to access the last value of a vector</a></li>
	<li><a href="http://stackoverflow.com/questions/652136/how-can-i-remove-an-element-from-a-list" target="_blank">Removing an element from a list</a></li>
	<li><a href="http://stackoverflow.com/questions/7963898/extracting-the-last-n-characters-from-a-string-in-r" target="_blank">Extracting the last n characters from a string</a></li>
</ol>
</li>
	<li><b>Exceptions and Gotchas</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/1535021/whats-the-biggest-r-gotcha-youve-run-across" target="_blank">What is the biggest R gotcha you've run across?</a></li>
	<li><a href="http://stackoverflow.com/questions/2622777/exception-handling-in-r" target="_blank">Exception handling in R</a></li>
	<li><a href="http://stackoverflow.com/questions/2151212/how-can-i-read-command-line-parameters-from-an-r-script" target="_blank">Reading commandline parameters from an R script</a></li>
	<li><a href="http://stackoverflow.com/questions/1741820/assignment-operators-in-r-and" target="_blank">Assignment operators in R: '=' vs ' <!-----><!-----><!-----><!-----><!-----><!-----><!----->-&gt;</a></li>
	<li><a href="http://stackoverflow.com/questions/11738823/explicitly-calling-return-in-a-function-or-not" target="_blank">Why is not (explicitly) calling return faster or better, and thus preferable? </a></li>
	<li><a href="http://stackoverflow.com/questions/14932015/why-does-true-true-in-r" target="_blank">Why does TRUE == "TRUE" in R?</a></li>
	<li><a href="http://stackoverflow.com/questions/7014387/whats-the-difference-between-1l-and-1" target="_blank">What is the difference between '1L' and '1'? </a></li>
	<li><a href="http://stackoverflow.com/questions/11700748/why-does-the-number-1e9999-31-9s-cause-problems-in-r" target="_blank">Why does the number 1e99999 (31 9's) cause problems?</a></li>
	<li><a href="http://stackoverflow.com/questions/5526322/examples-of-the-perils-of-globals-in-r-and-stata" target="_blank">Examples of the perils of globals in R and Stata</a></li>
	<li><a href="http://stackoverflow.com/questions/2190756/in-r-how-to-count-true-values-in-a-logical-vector" target="_blank">How to count TRUE values in a logical vector</a></li>
</ol>
</li>
	<li><b>Sorting </b>
<ol>
	<li><a href="http://stackoverflow.com/questions/14458314/letter-y-comes-after-i-when-sorting-alphabetically" target="_blank">Letter "y" comes after "i" when sorting?</a></li>
	<li><a href="http://stackoverflow.com/questions/1296646/how-to-sort-a-dataframe-by-columns-in-r/1296745#1296745" target="_blank">How to sort a dataframe by column(s) in R?</a></li>
	<li><a href="http://stackoverflow.com/questions/2453326/fastest-way-to-find-second-third-highest-lowest-value-in-vector-or-column" target="_blank">Fastest way to find the second (or third) highest/lowest value in a vector or column</a></li>
</ol>
</li>
	<li><b>Plotting</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/2564258/plot-2-graphs-in-same-plot-in-r" target="_blank">Plotting 2 graphs in the same plot</a></li>
	<li><a href="http://stackoverflow.com/questions/3541713/how-to-plot-two-histograms-together-in-r" target="_blank">How to plot 2 histograms together in R</a></li>
	<li><a href="http://stackoverflow.com/questions/1245273/histogram-with-logarithmic-scale" target="_blank">Histogram with a logarithmic scale</a></li>
	<li><a href="http://stackoverflow.com/questions/2076370/most-underused-data-visualization" target="_blank">The most underutilized visualization</a></li>
	<li><a href="http://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2" target="_blank">Rotating and spacing axis labels in ggplot2</a></li>
	<li><a href="http://stackoverflow.com/questions/3494593/shading-a-kernel-density-plot-between-two-points" target="_blank">Shading a kernal density plot between 2 points</a></li>
	<li><a href="http://stackoverflow.com/questions/5322836/choosing-between-qplot-and-ggplot-in-ggplot2" target="_blank">Choosing between qplot() and ggplot() in ggplot2</a></li>
	<li><a href="http://stackoverflow.com/questions/7611169/intelligent-point-label-placement-in-r" target="_blank">Intelligent point label placement in R</a></li>
	<li><a href="http://stackoverflow.com/questions/5453336/plot-correlation-matrix-into-a-graph" target="_blank">Plotting a correlation matrix</a></li>
	<li><a href="http://stackoverflow.com/questions/1896419/plotting-a-3d-surface-plot-with-contour-map-overlay-using-r" target="_blank">Plotting a 3D surface plot with contour map overlay, using R</a></li>
	<li><a href="http://stackoverflow.com/questions/1249548/side-by-side-plots-with-ggplot2-in-r" target="_blank">Side-by-side plots using ggplot2</a></li>
	<li><a href="http://stackoverflow.com/questions/3446495/ggplot2-cheat-sheet" target="_blank">Ggplot2 cheat sheet</a></li>
	<li><a href="http://stackoverflow.com/questions/10670751/r-plot-human-body-in-2d" target="_blank">Plot a human body in 2D</a></li>
	<li><a href="http://stackoverflow.com/questions/3777174/plotting-two-variables-as-lines-using-ggplot2" target="_blank">Plotting 2 variables as lines using ggplot2</a></li>
	<li><a href="http://stackoverflow.com/questions/1154242/getting-rid-of-axis-values-in-r-plot" target="_blank">Getting rid of axis values in an R plot</a></li>
</ol>
</li>
	<li><b>Grouping Functions and Speed</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/3505701/r-grouping-functions-sapply-vs-lapply-vs-apply-vs-tapply-vs-by-vs-aggrega" target="_blank">R grouping functions: sapply vs lapply vs apply vs tapply vs etc.</a></li>
	<li><a href="http://stackoverflow.com/questions/9860090/in-r-why-is-better-than-subset" target="_blank">Why is '[' better than the subset function?</a></li>
	<li><a href="http://stackoverflow.com/questions/12523548/confused-by" target="_blank">Confused by ...()</a></li>
	<li><a href="http://stackoverflow.com/questions/3685492/r-speeding-up-group-by-operations" target="_blank">Speeding up "group by" functions</a></li>
	<li><a href="http://stackoverflow.com/questions/7262485/options-for-caching-memoization-hashing-in-r" target="_blank">Options for caching/memoization/hashing in R</a></li>
</ol>
</li>
	<li><b>Random</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/12675147/how-can-we-make-xkcd-style-graphs-in-r" target="_blank">Making XKCD style plots in R</a></li>
	<li><a href="http://stackoverflow.com/questions/1260965/developing-geographic-thematic-maps-with-r" target="_blank">Developing geographic thematic maps with R</a></li>
	<li><a href="http://stackoverflow.com/questions/1738087/what-can-matlab-do-that-r-cannot-do" target="_blank">What can Matlab do that R cannot do?</a></li>
	<li><a href="http://stackoverflow.com/questions/4106174/where-can-i-learn-to-how-to-write-c-code-to-speed-up-slow-r-functions" target="_blank">Where to learn C code to speed up your R functions</a></li>
	<li><a href="http://stackoverflow.com/questions/1266279/how-to-organize-large-r-programs" target="_blank">How to organize large R programs</a></li>
	<li><a href="http://stackoverflow.com/questions/5595512/what-is-the-difference-between-require-and-library" target="_blank">The difference between library() and require()</a></li>
	<li><a href="http://stackoverflow.com/questions/6979917/how-to-unload-a-package-without-restarting-r" target="_blank">Unloading a package without restarting R</a></li>
	<li><a href="http://stackoverflow.com/questions/3412911/r-exe-rcmd-exe-rscript-exe-and-rterm-exe-whats-the-difference" target="_blank">What is the difference between R.exe, Rterm.exe, Rscript.exe, and Rcmd.exe?</a></li>
	<li><a href="http://stackoverflow.com/questions/1944910/what-is-your-preferred-style-for-naming-variables-in-r" target="_blank">What is your preferred style for naming variables in R?</a></li>
	<li><a href="http://stackoverflow.com/questions/6135868/in-r-what-exactly-is-the-problem-with-having-variables-with-the-same-name-as-ba" target="_blank">In R, what exactly is the problem with having objects with the same base name as functions?</a></li>
	<li><a href="http://stackoverflow.com/questions/7910270/are-there-any-easter-eggs-in-base-r-or-in-major-packages" target="_blank">Easter eggs in R</a></li>
	<li><a href="http://stackoverflow.com/questions/15705301/drawing-an-excellent-cow" target="_blank">Drawing an excellent cow</a></li>
	<li><a href="http://stackoverflow.com/questions/4222476/r-display-a-time-clock-in-the-r-command-line" target="_blank">Display a time clock on the R commandline </a></li>
	<li><a href="http://stackoverflow.com/questions/4713968/r-what-are-slots" target="_blank">What are slots?</a></li>
	<li><a href="http://stackoverflow.com/questions/15289995/get-help-for-r-package" target="_blank">Get help for an R package </a></li>
</ol>
</li>
	<li><b>Case Studies</b>
<ol>
	<li><a href="http://stackoverflow.com/questions/8708048/position-of-the-sun-given-time-of-day-latitude-and-longitude" target="_blank">How to determine the position of the sun at a given time of day, latitude and longitude</a></li>
	<li><a href="http://stackoverflow.com/questions/9674027/implementing-standard-software-design-patterns-focus-on-mvc-in-r" target="_blank">Implementing Model-View-Control (MVC) in R</a></li>
	<li><a href="http://stackoverflow.com/questions/1395528/scraping-html-tables-into-r-data-frames-using-the-xml-package" target="_blank">Scraping html tables into R dataframes</a></li>
	<li><a href="http://stackoverflow.com/questions/8317584/r-ggplot-time-series-with-events" target="_blank">R + ggplot: time series with events</a></li>
	<li><a href="http://stackoverflow.com/questions/2908822/speed-up-the-loop-operation-in-r" target="_blank">Speed up loop operation in R</a></li>
	<li><a href="http://stackoverflow.com/questions/13567453/how-to-scrape-the-web-for-the-list-of-r-release-dates" target="_blank">How to scrape the web for the list of R release dates</a></li>
</ol>
</li>
</ol>
<span style="text-decoration: underline;"><b>About:</b></span>


Stack Overflow is awesome. Some of the worlds most brilliant programmers frequent the website and answertough questions. Wouldn't that make it a great place to learn from? Yeah, I think so too.


This is why I've collated, <b>The Guerilla Cookbook for R</b>. It's basically a number of Stack Overflow links organized and ordered in a way to help R programmers learn their way to the next level. If you are proficient in R, I hope these resources will help you get closer to being amazing. If you are just getting started with R, I'd suggest adding this page to your bookmarks and returning when you are familiar with the basics of R programming.


The cool thing is, this "book" essentially writes itself since most of the experts (and peer-reviewers) are answering the questions. Most of the questions are "real-world" and are asked by novice or intermediate programmers. We can easily add/remove/reorganize the contents as necessary.

<span style="text-decoration: underline;"><b>How Was The Content Selected?:</b></span>

I personally searched through Stack Overflow to find my favorite questions and shared them here.

The table of contents will have to be updated/reorganized over time as links are added and removed. But use whatever you can for now!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2013-05-13 00:39:00</wp:post_date>
		<wp:post_date_gmt>2013-05-13 00:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-guerilla-guide-to-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[R]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2013/05/the-guerilla-guide-to-r.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/9065341080674365162]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Tal Galili]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/10009278769907250225</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-13 15:09:15</wp:comment_date>
			<wp:comment_date_gmt>2013-05-13 15:09:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[GREAT list!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[Paul]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/17716017882840154379</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-13 17:50:59</wp:comment_date>
			<wp:comment_date_gmt>2013-05-13 17:50:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A great list indeed. StackOverflow is awesome. @Nikhil Gopal what is you SO id?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Nikhil Gopal]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/00140992536453512754</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-13 18:01:14</wp:comment_date>
			<wp:comment_date_gmt>2013-05-13 18:01:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://stackoverflow.com/users/2372059/nikhil-gopal]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-13 19:04:10</wp:comment_date>
			<wp:comment_date_gmt>2013-05-13 19:04:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great, thanks for putting that together!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[a Tom]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/07509077480190944037</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-14 01:08:40</wp:comment_date>
			<wp:comment_date_gmt>2013-05-14 01:08:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is great, thanks! <br />I find it odd that at least two of your links are "closed for not being constructive". Clearly they are at least constructive to some!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Sascha W.]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/03781506335894695819</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-14 12:31:36</wp:comment_date>
			<wp:comment_date_gmt>2013-05-14 12:31:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the awesome list!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[ProfessorJones]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/02228170703352021116</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-14 19:23:21</wp:comment_date>
			<wp:comment_date_gmt>2013-05-14 19:23:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just added the link to my syllabus!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Nikhil Gopal]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/00140992536453512754</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-14 22:59:04</wp:comment_date>
			<wp:comment_date_gmt>2013-05-14 22:59:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's awesome! I'm very glad you found it useful.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>32</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-15 07:19:40</wp:comment_date>
			<wp:comment_date_gmt>2013-05-15 07:19:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your list. I suggest adding http://stackoverflow.com/questions/15289995/get-help-for-r-package, because finding help in R made me almost crazy :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Sharon]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-05-21 19:37:18</wp:comment_date>
			<wp:comment_date_gmt>2013-05-21 19:37:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Useful collection of answers, thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>OWLify: A Python Library to Generate RDF/OWL Code</title>
		<link>http://www.nikhilgopal.com/owlify-a-python-library-to-generate-rdfowl-code/</link>
		<pubDate>Thu, 27 Dec 2012 01:04:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[<b><span><br></span></b>
<b><span>Why Another Library?:</span></b><br><span><br></span>
<span>I've been working with RDF/OWL data over the past few months. I've been moving away from high-performance databases and NoSQL and towards the semantic web. The semantic web allows us to represent rich, complex relationships between data--in ways we just aren't able to with current database technology. I've found RDF/OWL better suited for representing knowledge of the data I've been working with most recently.</span><br><span><br></span>
<b><span>Libraries That Already Exist:</span></b><br><span><br></span>
<span>We can query semantic web files with SPARQL. A Python library used to interface with SPARQL already exists. In fact, there is also a library that exists to help process RDF/OWL files in Python. However, I couldn't find anything well-suited to take a python object and transform that into RDF/OWL. So I wrote <a href="https://github.com/ngopal/OWLify">OWLify</a>.</span><br><span><br></span>
<b><span>Explain <a href="https://github.com/ngopal/OWLify">OWLify</a>:</span></b><br><span><br></span>
<span>In order to quickly turn my data into a RDF/OWL file, I wrote a bare minimal library I called <a href="https://github.com/ngopal/OWLify">OWLify</a>. I only included the functions I needed at the time. I'm putting it up on github for folks to fork and extend as needed. The interface is pretty simple. Creating new RDF-compliant functions should be very straightforward.</span><br><span><br></span>
<b><span>Example Code:</span></b><br><span><br></span>
<span>from OWLify import OWL</span><br><span><br></span>
<span>names = ['Janet', 'Marcy', 'Ed']</span><br><span>gender = ['Female', 'Female', 'Male']</span><br><span>colors = ['Red','Blue','Green']</span><br><span><br></span>
<span>out = OWL('http://www.nikhilgopal.com', 'owl_example.owl', 'http://www.nikhilgopal.com/properties')</span><br><span>out.start()</span><br><span>for n in range(len(names)):</span><br><span>    out.addClass(names[n])</span><br><span>    out.assertEquivalentTriple(names[n], 'hasColor', colors[n])</span><br><span>    out.assertSubClassTriple(names[n], 'hasGender', gender[n])</span><br><span>out.end()</span><br><span><br></span>
<b><a href="https://github.com/ngopal/OWLify" target="_blank"><span>Get the Code</span></a></b><br><span><br></span>
<span><br></span>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2012-12-27 01:04:00</wp:post_date>
		<wp:post_date_gmt>2012-12-27 01:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>owlify-a-python-library-to-generate-rdfowl-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/12/owlify-python-library-to-generate.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/3415956782986933503]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-12-27 10:16:43</wp:comment_date>
			<wp:comment_date_gmt>2012-12-27 10:16:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[for n in range(len(names)):<br /><br />==> using 'for name, gender, color in zip(names, genderS, colors):' would be more pythonic.<br /><br />In the code of OWLify, you use a lot string concatenation (principally with constant strings). Maybe using long strings (with ''' delimiter) as format strings would be easier to read AND faster.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Bunch Design Pattern (Python)</title>
		<link>http://www.nikhilgopal.com/the-bunch-design-pattern-python/</link>
		<pubDate>Sat, 11 Aug 2012 05:17:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[<span>This one is out of the Python Cookbook and credit goes to Alex Martelli if I'm not mistaken. This technique is useful when we would like to record data in some type of "forgiving" data structure.</span><br><span><br></span>
<span>We know we can accomplish this with a python dictionary, but what about when we want to nest an inconsistent data structure in another inconsistent data structure? This is when the bunch pattern is useful.</span><br><span><br></span>
<span><b>Example Program:</b></span><br><span><br></span>
<br><span><i>class Bunch:</i></span><br><span><i><span>	</span>def __init__(self, *args, **kwargs):</i></span><br><span><i><span>		</span>self.__dict__.update(kwargs)</i></span><br><span><i><br></i></span>
<span><i>struct = Bunch(type="flat", size="huge", family="chordata", genus=Bunch(level="medium", intensity="hot"), BOOL=True)</i></span><br><span><i><br></i></span>
<span><i>print struct</i></span><br><span><i>print struct.type</i></span><br><span><i>print struct.size</i></span><br><span><i>print struct.genus.level</i></span><br><span><br></span>
<span><b>Output:</b></span><br><span><br></span>
<span><i></i></span><br><span><i><__main__ .bunch=".bunch" at="at" instance="instance"></__main__></i></span><br><span><i>flat</i></span><br><span><i>huge</i></span><br><span><i>medium</i></span><br><br><br><span><br></span>
<span>Pretty slick, huh? The beauty of this vignette is that it is highly extensible. The original thread where I stumbled upon this is located <a href="http://code.activestate.com/recipes/52308-the-simple-but-handy-collector-of-a-bunch-of-named/">here</a>.</span><br><span><br></span>
<span><br></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2012-08-11 05:17:00</wp:post_date>
		<wp:post_date_gmt>2012-08-11 05:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-bunch-design-pattern-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/08/the-bunch-design-pattern-python.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/147618628117598724]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[aartur]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-08-11 12:41:43</wp:comment_date>
			<wp:comment_date_gmt>2012-08-11 12:41:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's awful because it has no meaning for a code-reader. It can be used for EVERYTHING. If it's a class, it should have some meaning.<br /><br />How about defaultdict(dict) for nesting?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Nikhil Gopal]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/00140992536453512754</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-08-11 15:20:15</wp:comment_date>
			<wp:comment_date_gmt>2012-08-11 15:20:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@<a href="http://www.nikhilgopal.com/#c7873158905102701029" rel="nofollow">aartur</a><br /><br />If we were using a statically-type language, I would agree 100%. Everything in Python is an object so there is already some level of confusion in context of structured classes anyway.<br /><br />You are right in that the code-reader must know what is going on, so explicit commenting is vital. Besides a slight increase in speed, I don't see how defaultdict can be advantageous over the bunch pattern since the bunch pattern is basically a wrapper around a dictionary anyway.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Brad Allen]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/02649701916459616864</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-08-13 19:52:11</wp:comment_date>
			<wp:comment_date_gmt>2012-08-13 19:52:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It didn't realize there was a name for this pattern...nice to know, thanks. Btw, pysistence.Expando is worth a look. It let's you apply the Bunch pattern to arbitrary existing classes, which can be useful for writing tests.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A Refresher on &quot;Big O&quot; Notation (Python)</title>
		<link>http://www.nikhilgopal.com/a-refresher-on-big-o-notation-python/</link>
		<pubDate>Tue, 24 Apr 2012 15:22:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[<span>It's well known that asymptotic notation is used to convey the speed and efficiency of code blocks in computer programs. I haven't used them very much while working with Python, so I needed to refresh my memory before trying to use this great tool.</span><br><span><br></span><br><b><span>Cardinal Rule: Focus primarily the largest value in the equation of time complexity. All other factors in the time complexity equation are essentially trumped.</span></b><br><span><br></span><br><span>O(n^4+n^2+n^3+nm+100) ~= O(n^4)</span><br><span><i>Update: assuming m is linear.</i></span><br><span><br></span><br><b><u><span>Trump Rules for Time Complexity:</span></u></b><br><br><ul><li><span>Notes</span></li>
<ul><li><span>Remember that we care most about the upper bound and are not so concerned with the lower (in general)</span></li>
<li><span>The smaller the upper bound number the better (and consequently, faster)</span></li>
</ul><li><span>The Ladder</span></li>
<ul><li><span>Constants are less than logarithms</span></li>
<li><span>Logarithms are less than polynomials</span></li>
<li><span>Polynomials are less than exponentials</span></li>
<li><span>Exponentials are less than factorials</span></li>
</ul></ul><div>
<span><br></span></div>
<div>
<div>
<u><b><span>Notation and Hierarchy (Smaller Is Better):</span></b></u></div>
<div>
<span><span><br></span></span></div>
<div>
<span><span>Constant Θ</span>(1)</span></div>
<div>
<span><span>Logarithmic Θ</span>(lg n) </span></div>
<div>
<span><span>Linear Θ</span>(n) </span></div>
<div>
<span><span>Loglinear Θ</span>(n lg n) </span></div>
<div>
<span><span>QuadraticΘ</span>(n^<span>2</span>) </span></div>
<div>
<span><span>Cubic Θ</span>(n^<span>3</span>) </span></div>
<div>
<span>Polynomial O(n^<span>k</span>) </span></div>
<div>
<span><span>Exponential O</span>(k^<span>n</span>) </span></div>
<div>
<span><span>Factorial Θ</span>(n!)</span></div>
<div>
<span><br></span></div>
<div>
<b><u><span>Quick Examples:</span></u></b></div>
<div>
<span><br></span></div>
<div>
<span>[i for i in list] <b>{linear}</b></span></div>
<div>
<span><i>Functions that generally operate on lists or generators (sum, map, filter, reduce, min, max, etc) tend to be linear in time complexity</i></span></div>
<div>
<span><br></span></div>
<div>
<span>[i+k for i in list for k in list] <b>{quadratic}</b></span></div>
<div>
<span>[i+k for i in list1 for k in list2] <b>O(list1*list2) {quadratic I think, since it's linear*linear}</b></span></div>
<div>
<span><i>Add 1 to the exponent value for each nested loop. For example. [j+i+k+n for j in list1 for i in list1 for k in list1 for n in list1] would have a time complexity of O(n^4)</i></span></div>
<div>
<span><br></span></div>
<div>
<span>Note: Some programmers reduce quadratic time complexity a bit when using nested loops with sorted lists by ensuring that calculations aren't performed more than once. Consequently, that code block runs faster and faster and less and less has to be evaluated through each iteration of the loop. For example:</span></div>
<div>
<span><br></span></div>
<div>
<span>list1 = [i for i in range(10)]</span></div>
<div>
<span>size = len(list1)</span></div>
<div>
<span>number=100</span></div>
<div>
<span>for n in range(size-1):</span></div>
<div>
<span>    for k in range(n+1, size):</span></div>
<div>
<span>        print number*(n+k)</span></div>
<div>
<span><br></span></div>
<div>
<br></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2012-04-24 15:22:00</wp:post_date>
		<wp:post_date_gmt>2012-04-24 15:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-refresher-on-big-o-notation-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code-optimization"><![CDATA[code optimization]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/04/refresher-on-big-o-notation-python.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/1344591789845942671]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[markolopa]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-25 08:14:16</wp:comment_date>
			<wp:comment_date_gmt>2012-04-25 08:14:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,<br /><br />It is a good idea to talk about BigO notation. But IMO there are two mistakes in what you say:<br /><br />- O(n^4+n^2+n^3+nm+100) is equal to O(n^4), not approximately equal.<br />- You don't reduce the quadratic complexity by the trick you present.<br /><br />BigO is a mathematical concept. We may discuss on whether it is useful or not for programmer. But IMO it is clearly not useful if not used correctly: you add confusion instead of clarifying things.<br /><br />Cheers,<br />markolopa]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-25 12:51:39</wp:comment_date>
			<wp:comment_date_gmt>2012-04-25 12:51:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,<br /><br />It's a good idea to talk about bigO notation. IMO there is however two errors in what you say.<br /><br />1. O(n^4+n^2+n^3+nm+100) is not approximately equal to O(n^4). If you make no assumption on m you can't say this. And if assume for instance that m is asymptotically smaller than n or n^2, than the two big O's are equal.<br /><br />2. You don't reduce the quadratic time complexity of the nested loops by doing the trick you describe.<br /><br />BigO notation is a mathematical concept. One can argue on whether it is useful or not for a programmer. But IMO if it is used approximately it adds more confusion than clarification.<br /><br />Regards,<br />markolopa]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Brandon Craig Rhodes]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/04530745611634767785</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-27 16:12:54</wp:comment_date>
			<wp:comment_date_gmt>2012-04-27 16:12:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Following up on markolopa's accurate comment, the equivalent to your big big-O expression is:<br /><br />O(n^4 + nm)<br /><br />if one makes no assumptions about the size of "m" compared to the magnitude of "n". And it would make no sense to even have a variable "m" if you knew it was somehow related to "n". :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-12-03 06:28:08</wp:comment_date>
			<wp:comment_date_gmt>2012-12-03 06:28:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Nikhil, thanks for the nice post within the context of Python.   There's another page that helped, that is in the context of Java, good help as well:<br /><br /><a href="http://www.programmerinterview.com/index.php/data-structures/big-o-notation/" rel="nofollow">Big O Notation Java</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>How to Improve Coding Style (In Python)</title>
		<link>http://www.nikhilgopal.com/how-to-improve-coding-style-in-python/</link>
		<pubDate>Wed, 04 Apr 2012 17:54:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[<span>I'm finally cracking open the <a href="http://www.python.org/dev/peps/pep-0008/">Python Style Guide</a>. I've been programming python for years now so I thought I'd join the club.</span><br><span><br></span><br><span>In addition to all of the nifty tools available to speed up and optimize python code, there are a few utilities out there to help with coding style. <a href="http://www.logilab.org/857">PyLint</a> is a program which analyzes source code and reports lines which do not follow the PEP 8 coding convention. There is another program called <a href="http://clonedigger.sourceforge.net/">CloneDigger</a> which looks through source code and points out duplicate code.</span><br><span><br></span><br><span><b><u>Summary of Guidelines to Improve Python Coding Style:</u></b></span><br><br><ul><li><span>Variables</span></li>
<ul><li><span>Global variables should be ALL_CAPS_WITH_UNDERSCORES</span></li>
<li><span>Non-public variables within classes should be prefixed with an underscore and lowercase (_private_list = [])</span></li>
<li><span>Public variables should be lowercase</span></li>
<li><span>Boolean variables should be have "is" or "has" (is_full = True)</span></li>
<li><span>Avoid generic names</span></li>
</ul><li><span>Classes</span></li>
<ul><li><span>Should be named using the CamelCase convention</span></li>
<li><span>If a class will be a base class, prefix the classname with "Base"</span></li>
</ul><li><span>Functions</span></li>
<ul><li><span>Names of functions and methods should be lowercase and underscore separated (do_something_with_this)</span></li>
<li><span>Watch out for custom functions which share names with built-in functions</span></li>
<ul><li><span>If this does happen and one can't find a better name, then add a trailing underscore to the custom function</span></li>
</ul><li><span>Arguments names and contents should be decided through an iterative design process</span></li>
<ul><li><span>Also, do not use spaces around the "=" sign used to assign the default parameter for keyword arguments</span></li>
</ul><li><span>Be careful with *args and **kw. These can cause problems if abused.</span></li>
<li><span>Don't implement "type" checking using the assert command</span></li>
</ul><li><span>Conditionals</span></li>
<ul><li><span>When check to see if an object is true, use "if object:" rather than "if object == True" or "if object is True"</span></li>
<li><span>When checking to see if an object is of a certain "type" (integer, string, etc), do not use "if type(obj) == type(int):", use "if isinstance(obj, int):"</span></li>
<li><span>What's "False" in Python?:</span></li>
<ul><li><span>None</span></li>
<li><span>False</span></li>
<li><span>Zero (of any numeric type)</span></li>
<li><span>Any empty sequence or mapping ({},'', [], ())</span></li>
<li><span><span>instances of user-defined classes, if the class defines a </span><tt><span>__nonzero__()</span></tt><span> or </span><tt><span>__len__()</span></tt><span> method, when that method returns the integer zero or </span><tt><span>bool</span></tt><span> value </span><code><span>False</span></code></span></li>
</ul></ul><li><span>Modules and Packages</span></li>
<ul><li><span>Usually has a lib suffix (mathlib)</span></li>
<li><span>Be careful to ensure that any process requiring the use of several functions strung together are consolidated into an independent "pipeline" function</span></li>
</ul><li><span>General Coding</span></li>
<ul><li><span>Clarity over cleverness</span></li>
<li><span>Try to keep code as short as possible--short enough to fit on the screen without having to scroll rampantly</span></li>
<li><span>When a class start to have about 10 or more methods, it is time to re-evaluate the contents of the class and possibly split that larger class into a number of smaller classes</span></li>
<li><span>Use lambda functions for functions that will only be run once or twice. Otherwise, create a defined function</span></li>
<li><span>Use spaces around arithmetic operators</span></li>
<li><span>Import statements should always be on separate lines</span></li>
<li><span>Avoid extraneous whitespace immediately inside parentheses, brackets, or braces. Also before colons</span></li>
</ul></ul><div>
<br></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2012-04-04 17:54:00</wp:post_date>
		<wp:post_date_gmt>2012-04-04 17:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-improve-coding-style-in-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/04/how-to-improve-coding-style-in-python.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/528595057729364247]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Tshepang Lekhonkhobe]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>https://tshepang.net/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-04 20:25:29</wp:comment_date>
			<wp:comment_date_gmt>2012-04-04 20:25:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[excellent summary for those of us too lazy to go through the looong document]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-05 02:27:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-05 02:27:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not trying to be a tech nerd, but CamelCase is actually CapsCase.  This is camelCase ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Nikhil Gopal]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/00140992536453512754</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-05 04:04:43</wp:comment_date>
			<wp:comment_date_gmt>2012-04-05 04:04:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@<a href="http://www.nikhilgopal.com/#c6791552551761999462" rel="nofollow">Anonymous</a><br /><br />Interesting. I didn't know that. <a href="http://en.wikipedia.org/wiki/CamelCase" rel="nofollow">Wikipedia</a> actually defines two separate types of camel case, "upper camel case" and "lower camel case."]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Cristi Constantin]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/08406645755937068125</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-05 06:49:27</wp:comment_date>
			<wp:comment_date_gmt>2012-04-05 06:49:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Concise. Very good article.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-06 05:00:43</wp:comment_date>
			<wp:comment_date_gmt>2012-04-06 05:00:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't forget when testing for None, use "if object is None". Assuming that None is False is bad.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Cherny]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/06519754780053702313</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-22 19:34:39</wp:comment_date>
			<wp:comment_date_gmt>2012-04-22 19:34:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I used to add a pep8 execution as a pre-commit hook into local repositories]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[onjin]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/07066266645858082523</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-24 06:52:26</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 06:52:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have attached flake8 to my editor (on buffor save). It's wrapper around pep8 and pylint :) Just need to fix marked lines]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Markus Gattol]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/01936045620942010409</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-24 10:06:51</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 10:06:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some time ago I also put together some naming examples (skip right to Examples for the TLDR version): http://www.markus-gattol.name/ws/python.html#naming_conventions]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email>noreply@blogger.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-22 14:56:15</wp:comment_date>
			<wp:comment_date_gmt>2012-06-22 14:56:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The SublimeLinter plugin for Sublime Text 2 (avaliable through the package control) does a pretty great job of pep8/PyFlakes checking without having to resort to an outside program.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Playing with Ruby on Rails</title>
		<link>http://www.nikhilgopal.com/playing-with-ruby-on-rails/</link>
		<pubDate>Tue, 03 Apr 2012 23:54:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[Here below are some notes I made while playing with Ruby and RoR. Interestingly, I found that RoR is a great way to learn about the foundations of web frameworks. I have a much stronger understanding about not just RoR, but of Django, Pyramid, and Web2Py. Every web framework really has the same few components (or some variation thereof): Models, Views, Controllers, and Routes.<br><br>
I walked through the free tutorial by <a href="http://railsforzombies.org/">CodeSchool</a>:<br><br><b>The Basics:</b><br><br>
CRUD<br>
Create,Read,Update,Destroy<br><br>
Zombie.new<br>
z = Zombie.new(initialize)<br>
z.save<br>
Zombie.create<br>
Zombie.find(3)<br>
Zombie.update_attributes<br><br><b>Models:</b><br><br>
class Tweet < ActiveRecord::Base (just means that class Tweet inherits from ActiveRecord)<br>
end<br><br>
validate data before it is saved in DB<br><br>
class Tweet < ActiveRecord::Base<br>
    validates_presence_of :status<br>
end<br><br>
t.errors -> returns errors<br>
t.errors[:status] --> just error pertaining to status<br><br>
Rails 3 new syntax for validation:<br><br>
validates attribute, validation<br>
validates :status, :presence => true<br>
validates :status, :length => {:minimum => 3}<br><br><i>app/models/tweet.rb</i><br><br><i>class Tweet < ActiveRecord::Base</i><br><i>    belongs_to :zombie</i><br><i>end</i><br><div>
<i><br></i></div>
<div>
<i>app/models/zombie.rb</i></div>
<div>
<i>class Zombie < ActiveRecord::Base</i></div>
<div>
<i>    has_many :tweets</i></div>
<div>
<i>end</i></div>
<div>
<br></div>
<div>
<b>View:</b></div>
<div>
<br></div>
<div>
web request -> 4 layers -> models, view, controllers, routing</div>
<div>
<br></div>
<div>
<%...%> evaluate ruby</div>
<div>
<%=...%> evaluate and print results</div>
<div>
<br></div>
<div>
layouts/application --> make html page format and use <%= yield %></div>
<div>
/app/views/tweets/shot.html.erb (code that will be yielded is in here)</div>
<div>
<br></div>
<div>
<div>
Adding CSS</div>
<div>
<%= stylesheet_link_tag :all %></div>
<div>
<%= javascript_include_tag :defaults %> # can replace prototype javascript library with jquery</div>
<div>
<%= csrf_meta_tag %> #protects website from hackers</div>
<div>
<br></div>
<div>
with URLs, it checks public folder first, then tries to execute inside rails</div>
</div>
<div>
<br></div>
<div>
Adding a Link</div>
<div>
<%= link_to "link text",  "link path (URL)"%></div>
<div>
<%= link_to tweet.zombie.name, zombie_path(zombie.tweet) %></div>
<div>
<%= link_to "Edit", edit_tweet_path(tweet) %></div>
<div>
<%= link_to "Delete", :method => :delete %></div>
<div>
<br></div>
<div>
Listing Zombies</div>
<div>
<h1>

 Listing Tweets</h1>
</div>
<div>
<br></div>
<div>
<div>
</div>
<div>
</div>
<div>
</div>
<div>
</div>
<div>
<% Tweet.all.each do |tweet| %></div>
<div>
</div>
<div>
</div>
<div>
</div>
<div>
</div>
<div>
<% end %></div>
<div>
</div>
<table><tbody><tr><th>Status</th><th>Zombie</th></tr><tr><td><% tweet.status %></td><td><% tweet.zombie.name %></td></tr></tbody></table></div>
<div>
<br></div>
<div>
<b>Controllers:</b></div>
<div>
<br></div>
<div>
class TweetsController < ApplicationController</div>
<div>
   def show</div>
<div>
      @tweet = Tweet.find(params[:id]) #using an instance variable</div>
<div>
       render :action => 'status' #for status.html.erb</div>
<div>
       respond_to do |format|</div>
<div>
          format.html #show html.erb</div>
<div>
          format.xml  { render :xml => @tweet }</div>
<div>
          format.json { render :json => @tweet }</div>
<div>
   end</div>
<div>
end</div>
<div>
<br></div>
<div>
model calls goes into the controller files. All request data stored in a hash called params.</div>
<div>
<br></div>
<div>
def index -> list all tweets</div>
<div>
def show -> show a single tweet</div>
<div>
def new -> show a new tweet form</div>
<div>
def edit -> show an edit tweet form</div>
<div>
def create -> create a new tweet</div>
<div>
def update -> update a tweet</div>
<div>
def delete -> delete a tweet</div>
<div>
<br></div>
<div>
<br></div>
<div>
<b>Authorization:</b></div>
<div>
def edit</div>
<div>
  @tweet = Tweet.find(params[:id])</div>
<div>
   if session[:zombie_id] != @tweet.zombie_id</div>
<div>
      flash[:notice] = "sorry, you can't edit this tweet"</div>
<div>
      redirect_to(tweets_path)</div>
<div>
    end</div>
<div>
  end</div>
<div>
 end</div>
<div>
<br></div>
<div>
class TweetsController < ApplicationController</div>
<div>
  before_filter :get_tweet, :only => [:edit, :update, :destroy]</div>
<div>
  before_filter :check_auth, :only => [:edit, :update, :destroy]</div>
<div>
<br></div>
<div>
  def get_tweet</div>
<div>
    @tweet = Tweet.find(params[:id])</div>
<div>
  end</div>
<div>
<br></div>
<div>
def check_auth</div>
<div>
<div>
  if session[:zombie_id] != @tweet.zombie_id</div>
<div>
      flash[:notice] = "sorry, you can't edit this tweet"</div>
<div>
      redirect_to(tweets_path)</div>
<div>
  end</div>
</div>
<div>
 end</div>
<div>
<br></div>
<div>
<br></div>
<div>
<b>Routing:</b></div>
<div>
<br></div>
<div>
config/routes.rb</div>
<div>
ZombieTwitter::Application.routes.draw do |map|</div>
<div>
  resources :tweets #creates a "REST"ful resource</div>
<div>
  match 'new_tweet' => "Tweets#new" # path => controller#action</div>
<div>
  match 'all' => "Tweets#index", :as => "all_tweets" # now all tweets can be used as an object "link_to"</div>
<div>
  match 'a' => redirect('/tweets')</div>
<div>
  match 'google' => redirect('http://www.google.com')</div>
<div>
  root :to => "Tweets#index"</div>
<div>
  match 'local_tweets/:zipcode' => "Tweets#index"</div>
<div>
  match 'local_tweets/:zipcode' => 'Tweets#index', :as => <b>'local_tweets'</b></div>
<div>
end</div>
<div>
<br></div>
<div>
<%= link_to "All Tweets", all_tweets_path %></div>
<div>
<%= link_to "Tweets in 32828", <b>local_tweets</b>_path(32828) %></div>
<div>
<br></div>
<div>
<br></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2012-04-03 23:54:00</wp:post_date>
		<wp:post_date_gmt>2012-04-03 23:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>playing-with-ruby-on-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ror"><![CDATA[RoR]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/04/playing-with-ruby-on-rails.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/6290602638582968819]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Word Frequency Count of Hacker News Front Page on SOPA Blackout Day</title>
		<link>http://www.nikhilgopal.com/word-frequency-count-of-hacker-news-front-page-on-sopa-blackout-day/</link>
		<pubDate>Wed, 18 Jan 2012 21:42:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<span>When curious as to what people are generally talking about on various social news aggregation websites, I whip up an ad-hoc script to perform a quick analysis every now and then. I thought today was an especially interesting day to look at what all of the HNers are posting. </span><span>I've filtered out common "words" such as consonants, conjunctions, etc. </span><span>Here is what the data looks like at 1:43pm today:</span><br><span><br></span><br><br><span>8 SOPA</span><br><span>3 protest</span><br><span>3 PIPA</span><br><span>2 Wikipedia</span><br><span>2 white</span><br><span>2 Web</span><br><span>2 Today</span><br><span>2 "support"</span><br><span>2 SOPA/PIPA</span><br><span>2 out</span><br><span>2 million</span><br><span>2 I'm</span><br><span>2 blackout</span><br><span>2 /</span><br><span>1 Your</span><br><span>1 WTF</span><br><span>1 WSJ</span><br><span>1 With</span><br><span>1 with</span><br><span>1 Wired</span><br><span>1 Windows</span><br><span>1 Why</span><br><span>1 What</span><br><span>1 Were</span><br><span>1 website</span><br><span>1 We</span><br><span>1 Version</span><br><span>1 users-per-employee</span><br><span>1 tweets</span><br><span>1 Today's</span><br><span>1 today</span><br><span>1 Timeline</span><br><span>1 Tech</span><br><span>1 support</span><br><span>1 stop</span><br><span>1 Stack</span><br><span>1 "spoilering")</span><br><span>1 SOPA/PIPA:</span><br><span>1 Social</span><br><span>1 slower</span><br><span>1 Service</span><br><span>1 SEO:</span><br><span>1 SEO</span><br><span>1 Senator</span><br><span>1 Scalable</span><br><span>1 Saying</span><br><span>1 Rubio</span><br><span>1 Representatives</span><br><span>1 Reddit</span><br><span>1 Real-time</span><br><span>1 ratio</span><br><span>1 rate</span><br><span>1 Protests,</span><br><span>1 Problem</span><br><span>1 Pirating</span><br><span>1 Pirate</span><br><span>1 PIPA.</span><br><span>1 PC</span><br><span>1 Page</span><br><span>1 page</span><br><span>1 Out</span><br><span>1 out"</span><br><span>1 our</span><br><span>1 (or,</span><br><span>1 OCaml</span><br><span>1 (NYTM</span><br><span>1 NoSQL</span><br><span>1 No</span><br><span>1 Next</span><br><span>1 New</span><br><span>1 Mozilla</span><br><span>1 More</span><br><span>1 Modern</span><br><span>1 Masses</span><br><span>1 Marco</span><br><span>1 Mainstream</span><br><span>1 Magazine</span><br><span>1 lower</span><br><span>1 Life</span><br><span>1 I</span><br><span>1 hr</span><br><span>1 hours</span><br><span>1 Help</span><br><span>1 Have</span><br><span>1 has</span><br><span>1 .gov</span><br><span>1 Google's</span><br><span>1 Googlebot</span><br><span>1 gone</span><br><span>1 Fourier</span><br><span>1 Flickr</span><br><span>1 feedback)</span><br><span>1 Fax</span><br><span>1 Fast</span><br><span>1 FARK</span><br><span>1 Fall</span><br><span>1 Facebook</span><br><span>1 Experiments</span><br><span>1 DynamoDB</span><br><span>1 drops</span><br><span>1 down</span><br><span>1 Dear</span><br><span>1 Database</span><br><span>1 Daily</span><br><span>1 creative</span><br><span>1 crawl</span><br><span>1 Congressman</span><br><span>1 Community,</span><br><span>1 Communication</span><br><span>1 comments</span><br><span>1 comes</span><br><span>1 Building</span><br><span>1 Breaking</span><br><span>1 blacksout</span><br><span>1 Blacks</span><br><span>1 blacks</span><br><span>1 "blacking</span><br><span>1 Becomes</span><br><span>1 be</span><br><span>1 Barriers</span><br><span>1 AWS</span><br><span>1 awful</span><br><span>1 at</span><br><span>1 Assholes</span><br><span>1 as</span><br><span>1 Anti-SOPA</span><br><span>1 an</span><br><span>1 Amazon</span><br><span>1 all</span><br><span>1 Accounts</span><br><span>1 accident</span><br><span>1 About</span><br><span>1 7</span><br><span>1 4chan</span><br><span>1 250k</span><br><span>1 12</span><br><span>1 10.5</span><br><span>1 â</span><br><span>1 &</span><br><span>1</span><br><div>
<span><br></span></div>
<div>
<span>Nothing shocking, but it's clear than SOPA awareness day is working. In fact, I didn't even know what PIPA was until now .</span></div>
<div>
<span><br></span></div>
<div>
<span>[update]</span></div>
<div>
<span>If you are interested in the code, then I've posted it below. I literally put this together in 10 minutes, so don't expect picture-perfect code:</span></div>
<div>
<span><br></span></div>
<div>
<span><b><u>scrapeAndCount.py script:</u></b></span></div>
<div>
<span><br></span></div>
<div>
<div>
<span>import urllib2</span></div>
<div>
<span>from BeautifulSoup import BeautifulSoup</span></div>
<div>
<span><br></span></div>
<div>
<span>soup = BeautifulSoup(urllib2.urlopen('http://news.ycombinator.com/').read())</span></div>
<div>
<span><br></span></div>
<div>
<span>print soup.prettify()</span></div>
</div>
<div>
<span><br></span></div>
<div>
<span><br></span></div>
<div>
<span><b><u>wordCount.py script:</u></b></span></div>
<div>
<span><br></span></div>
<div>
<div>
<span>import sys, os</span></div>
<div>
<span><br></span></div>
<div>
<span>words = {}</span></div>
<div>
<span><br></span></div>
<div>
<span>for i in sys.stdin.readlines():</span></div>
<div>
<span>        for k in i.strip('\n').split(' '):</span></div>
<div>
<span>                try:</span></div>
<div>
<span>                        words[k] += 1</span></div>
<div>
<span>                except:</span></div>
<div>
<span>                        words[k] = 1</span></div>
<div>
<span><br></span></div>
<div>
<span>for i in words:</span></div>
<div>
<span>        print words[i], i</span></div>
</div>
<div>
<span><br></span></div>
<div>
<span><br></span></div>
<div>
<span><b><u>The pipeline:</u></b></span></div>
<div>
<span><br></span></div>
<div>
<span>python scrapeAndCount.py | grep -A2 "" | grep -B1 "\-\-" | grep -v "\-\-" | sed 's/^\s*//g' | python wordCount.py | sort -k1 -g -r | egrep -i -v "the|and|for|of|than|too|is|\sto$|\sa$|from|goes"</span></div>
<div>
<span><br></span></div>
<div>
<span><br></span></div>
<div>
<br></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2012-01-18 21:42:00</wp:post_date>
		<wp:post_date_gmt>2012-01-18 21:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>word-frequency-count-of-hacker-news-front-page-on-sopa-blackout-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[analysis]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/01/word-frequency-count-of-hacker-news.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/1096151489361692690]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS Development: Types of Applications in XCode, Model-View-Controller (MVC), and Basic Object Interactions</title>
		<link>http://www.nikhilgopal.com/ios-development-types-of-applications-in-xcode-model-view-controller-mvc-and-basic-object-interactions/</link>
		<pubDate>Sun, 15 Jan 2012 08:17:00 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[<u><b><span>Types of Applications in XCode:</span></b></u><br><span><br></span><br><span><u>Navigation-based Application</u> - Exactly what it sounds like. Imagine the mail application. We select an option and it navigates to another page (or activity, if you come from the world of Android).</span><br><span><br></span><br><span><u>OpenGL ES Application</u> - an application which uses OpenGL. This can be pretty heavy stuff.</span><br><span><br></span><br><span><u>Tab Bar Application</u> - An application which is similar to a website with frames. There will be a tab pane at the bottom of the app with 4-5 options and choosing an option will change the activity the user is experiencing.</span><br><span><br></span><br><span><u>Utility Application</u> - An interesting kind of application which kind of "flips." These apps tend to have a miniature "i" icon on the bottom right corner of the screen. Upon clicking the icon, the application "flips" into another activity.</span><br><span><br></span><br><span><u>View-based Application</u> - Probably the most commonly selected project.</span><br><span><br></span><br><span><u>Window-based Application</u> - this sort of project tends to be very bare. I suppose this is the "expert" developer mode where he or she has to pick and choose what components are required for the application.</span><br><span><br></span><br><span><br></span><br><b><u><span>MVC (Model-View-Controller):</span></u></b><br><span><br></span><br><span>It's just a software design pattern. The idea is to keep the models and the views separate from each other. The philosophy is that a developer should be able to make modifications to one without affecting other. The view never talks to the model. However, the model and the view both talk to the controller.</span><br><span><br></span><br><span>My little memory trick to remember this paradigm is that: (1) model, view and controller are three good friends and (2) controller just happens to be a control freak and liaisons the group's communication. I'm sure I can think of a better mnemonic but this will do for now. Views are easy to make and are essentially created in the interface builder. Models can best be thought of as "your concept" for the application and I am going to generalize the controller as the code.</span><br><span><br></span><br><span><br></span><br><b><u><span>Basic Interaction:</span></u></b><br><span><br></span><br><span>After starting a view-based application, we get all of that handy objective-C stub code. The xib files (pronounced "nib") open up in interface builder. We can drag and drop elements (such as text boxes, buttons, text views, etc) into the applications view. </span><br><span><br></span><br><span>The interactions between the elements we just selected are defined in the @interface section of the viewController.h file. Pretend we have a text box where a user enters text, a text view to show whatever the user submitted in the text box, and a button to process the action. The text box and text fields would be IBOutlet objects (they are outlets for actions) and the button would be an IBAction object (because we use the button to perform an action).</span><br><span><br></span><br><span>So let's crack open the header file.</span><br><span><br></span><br><span>@interface someViewController : UIViewController {</span><br><span>  IBOutlet UITextField *message;</span><br><span>  IBOutlet UILabel *label;</span><br><span>}</span><br><span><br></span><br><span>We also define @property (nonatomic, retain) for the objects we intend to use (under the @interface section).</span><br><span><br></span><br><span>@property (nonatomic, retain) IBOutlet UITextField *message;</span><br><span>@property (nonatomic, retain) IBOutlet UILabel *label;</span><br><span><br></span><br><span>The button requires a method declaration (IBAction).</span><br><span><br></span><br><span>- (IBAction) lightsCameraAction;</span><br><span><br></span><br><span>Now we go the the implementation (.m file).</span><br><span><br></span><br><span>@implementation someViewController</span><br><span><br></span><br><span>@synthesize message;</span><br><span>@synthesize label;</span><br><span><br></span><br><span>- (IBAction) lightsCameraAction {</span><br><span>  NSString *internalTemporaryStorage = [[NSString alloc] initWithFormat:@"Your text, %@", message.text];</span><br><span>  label.text = internalTemporaryStorage;</span><br><span>  [internalTemporaryStorage release];</span><br><span>}</span><br><span><br></span><br><span>The last step is to go back to the interface builder and literally connect the objects to each other. We have to click on the "File's Owner" box and connect the label object to the text view. We have to connect the message object to the text field. And finally, we have to connect the performSomeAction method to the button (and be sure to set the button action to be "touch up inside").</span><br><br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2012-01-15 08:17:00</wp:post_date>
		<wp:post_date_gmt>2012-01-15 08:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios-development-types-of-applications-in-xcode-model-view-controller-mvc-and-basic-object-interactions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[iOS]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[www.nikhilgopal.com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Nikhil Gopal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[/2012/01/types-of-applications-in-xcode-model.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_blogger_self</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.blogger.com/feeds/3320739517310204273/posts/default/2066057018392158164]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Defining Poverty</title>
		<link>http://www.nikhilgopal.com/defining-poverty/</link>
		<pubDate>Thu, 16 Jan 2014 05:28:53 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[I'd always known poverty was more than just a lack of money. But I was never sure what else contributed to poverty. The type of poverty I witness seems to be different in every country I travel to. Although I'm now comfortable defining poverty.

Poverty is a lack of purchasing power, opportunity, resources, knowledge and access, political power, and will.

<strong>Lack of purchasing power:</strong> This is poverty in the traditional sense. Essentially, a lack of money. Not everyone has the means by which to acquire resources they need. This is only a part of the equation.

<strong>Lack of opportunity:</strong> many people in developing nations are college-educated, but simply don't have a job market to work in. This is why "brain drain" occurs. Imagine putting in the time and effort to earn a college degree, only to graduate into a market that doesn't support the infrastructure for the types of jobs you are looking for. Welcome to poverty.

<strong>Lack of resources:</strong> Even in developed nations, resources are not distributed evenly and this causes disparity between different parts of the country. California is the 5th largest economy in the world. The United States is the 4th. Wow.

<strong>Lack of knowledge and access:</strong> When working on my project this past August, I realized that many rural citizens just don't have knowledge we assume people have. This makes sense. Not everyone is forced to attend grade school. Not every grade school has usable and up to date educational material. Not everyone has Google.

<strong>Lack of political power:</strong> A small nation with a small army seems to be poor at being able to hold it's ground against larger nations that bully it. Everyone knows the United States can be a real bully, however other nations can be just as bad. For example, Sweden preaches neutrality and peace, but the country dumps toxic e-waste on the shores of Ghana (along with America and Thailand) because they know the politicians who run the country won't do anything about it. Even when Ghanaians want to, they just don't have the backing.

<strong>Lack of will:</strong> I believe emotional state is important in giving individuals the driving force to pull themselves into change. I would say 99% of people are poor in this area. When someone isn't in control of their emotions, important aspects of people's lives like relationships, health, finances, and mental state, fall apart. Even though American GDP is the highest in the world, the stress level associated with jobs are also high As Stanford researchers have shown, Stress is murderous. In this way, America can be poor. Dirt poor.

Surprisingly, some of the "poorest" places in the world are also the happiest. Although many developing nations might not be "rich" in purchasing power capabilities, they clearly balance out the equation by making it up in other areas. Where we have high income and stress, they have low income and happiness. Where a developing nation has little resources and an abundance of emotional energy, a developed nation has plenty of resources and a scarcity of energy. Think about people in the media who seem to be very rich (in terms of money) but seem simultaneously poor in other regards--be it character, emotional state, etc.

Since I'm positing an equation, the opposite equation would also have to hold true. If wealth is the opposite of poverty, then wealth is an abundance of purchasing power, opportunity, resources, knowledge and access, political power, and will. Make sure to not get greedy with one type of wealth and lose out on another.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2014-01-15 21:28:53</wp:post_date>
		<wp:post_date_gmt>2014-01-16 05:28:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>defining-poverty</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Improve Your Public Speaking In 5 Minutes</title>
		<link>http://www.nikhilgopal.com/improve-your-public-speaking-in-5-minutes/</link>
		<pubDate>Thu, 16 Jan 2014 04:34:38 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[Believe it or not, most people are actually great public speakers. They just don't know it yet. In my opinion, 90% of people could improve their presentations, speeches, and public speaking with ease.
<blockquote>"During the Korean War, the Navy kill ratio was twelve-to-one. We shot down twelve of their jets for every one of ours. In Vietnam, this ratio fell to three-to-one. Our pilots depended on missiles. They lost their dog fighting skills." --<a href="http://www.imsdb.com/scripts/Top-Gun.html" target="_blank">Viper, Top Gun</a></blockquote>
In the same way Navy dog fighters started depending on missiles, too many presenters depend on PowerPoint. Personally, when I write a talk I try and design it so I could give the talk WITHOUT a PowerPoint presentation. People can focus on me instead of the slides. Plus, if we have technical difficulties, the show can go on!

<span style="text-decoration: underline;"><strong>Basic Rules:</strong></span>

1. <strong>Draw long, calm breathes before starting to speak</strong>. In fact, do this for each sentence. Many people run out of breath because they want to say too much at once. Think of the air in your lungs as "speech fuel." You need to keep refilling the tank.

2. <strong>Project your voice</strong>. Throw it across the room. Don't yell, but pick someone across the hall and pretend you are talking to them face to face. You want your voice to "project" from you, to that spot a few feet in front of that special person you picked. Speak in a way so that your special person can hear you at normal volume. Speak from your chest, not your throat. Speaking from your throat not only makes you sound more high-pitched, but your voice will also give out faster.

3. <strong>Slow down</strong>. Most people tend to talk way too fast when under the spotlight. Even when you calm down and speak at what may seem like a slow pace, you are actually speaking at a normal pace to listeners. Speak any faster and they can't understand. Or you come off as nervous.

4. <strong>Use your body</strong>. Use your hands to animate your descriptions. People like energy! Don't overdo it, just make sure you don't come off like you are petrified on stage. Balance is the name of the game. Your poker face won't help you in a presentation.

Focus on improving just these 4 things and you will find that your skills are at the next level. Seriously.

<span style="text-decoration: underline;"><strong>On Getting Over Your Fear:</strong></span>

Amy Cuddy, a psychologist from Princeton, gave a <a href="http://www.ted.com/talks/amy_cuddy_your_body_language_shapes_who_you_are.html" target="_blank">TED talk</a> mentioning how strongly body language and emotions are tied to each other.

<a href="http://www.hbs.edu/faculty/Pages/profile.aspx?facId=491042" target="_blank"><img class="aligncenter" alt="" src="http://www.hbs.edu/faculty/Profile%20Files/cuddy%20tedglobal_0ac9cc7f-59e9-428f-bf75-5b0142c71bb6.jpg" width="595" height="396" /></a>

David Lee Roth, one of my favorite performers, mentioned in an <a href="http://www.youtube.com/watch?v=ffxkY3fd5BY" target="_blank">interview</a> that he would try all kinds of crazy things on stage. He would fail half of the time, but it didn't matter--the audience would cheer just because he was so energetic and daring.

<a href="http://www.theguardian.com/music/2011/jun/12/van-halen-invent-hair-metal" target="_blank"><img class="aligncenter" alt="" src="http://static.guim.co.uk/sys-images/Music/Pix/pictures/2011/6/7/1307447070323/David-Lee-Roth-of-Van-Hal-007.jpg" width="460" height="276" /></a> Learn from Amy Cuddy! Channel David Lee Roth's energy! Use these tips and avoid being awkward in front of large groups of people. As a closing note, videotape yourself. It's painful to watch yourself stumble, but you will identify your weak areas and know exactly how to get better. Good luck!

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2014-01-15 20:34:38</wp:post_date>
		<wp:post_date_gmt>2014-01-16 04:34:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>improve-your-public-speaking-in-5-minutes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[improve-your-public-speaking-in-4-steps]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[Sales Ivan]]></wp:comment_author>
			<wp:comment_author_email>soboleiv+nikhilgopal@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://swiftbricks.com/blog</wp:comment_author_url>
			<wp:comment_author_IP>93.84.33.123</wp:comment_author_IP>
			<wp:comment_date>2014-01-28 00:12:27</wp:comment_date>
			<wp:comment_date_gmt>2014-01-28 08:12:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[+1 for long calm breaths, it's just takes time to develop the habit.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[Public Speaking | Pearltrees]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pearltrees.com/adrienne/public-speaking/id10546477/pearl102679152</wp:comment_author_url>
			<wp:comment_author_IP>93.184.35.43</wp:comment_author_IP>
			<wp:comment_date>2014-01-28 04:22:19</wp:comment_date>
			<wp:comment_date_gmt>2014-01-28 12:22:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Optinalysis | Improve Your Public Speaking In 5 Minutes [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Write Better Emails in 3 Minutes</title>
		<link>http://www.nikhilgopal.com/write-better-emails-in-3-minutes/</link>
		<pubDate>Fri, 24 Jan 2014 22:10:18 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[I don't think I know even one person who deals with less than 100 emails a day anymore. I've found these two personal rules to be invaluable in making my email communication concise and efficient.

<strong>Keep It Short</strong>

Email is best used as a short message communication medium. Longer emails tend to get tucked away for "when I have time." It's better to have a back and forth through email than it is to write a novel that is never read. We may be able to type faster than we can write, but we can talk even faster than we can type.

<strong>Be Assertive</strong>

If you are trying to schedule a meeting with someone, please don't be annoyingly polite and write things like "I was wondering if..." Just schedule a meeting. Instead say, "I'd like to meet. How does Tuesday work?" This will get a conversation going about meeting. If they aren't interested in meeting, they will let you know in some way (e.g. weaseling out of it and not suggesting an alternative date)!

Conversational etiquette is very different from email etiquette. When you send an email with an invitation or meeting suggestion, more politeness equals more words equals more words for people to read equals more pain for everyone. People know email can't communicate subtleties in conversation like vocal inflections, facial expressions, or body language. Don't be afraid to be terse!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2014-01-24 14:10:18</wp:post_date>
		<wp:post_date_gmt>2014-01-24 22:10:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>write-better-emails-in-3-minutes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[Episode 4 &#8211; Sexy Morning Dancing, More Coffeescript, And Why Your Emails Really suck. | Informatonauts]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://informatonauts.wordpress.com/2014/01/30/episode-4-sexy-morning-dancing-more-coffeescript-and-why-your-emails-really-suck/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.81.50</wp:comment_author_IP>
			<wp:comment_date>2014-01-29 17:49:24</wp:comment_date>
			<wp:comment_date_gmt>2014-01-30 01:49:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Rules of [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1426</wp:comment_id>
			<wp:comment_author><![CDATA[Ama]]></wp:comment_author>
			<wp:comment_author_email>Ria_0@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://upatlanta.weebly.com</wp:comment_author_url>
			<wp:comment_author_IP>50.167.246.233</wp:comment_author_IP>
			<wp:comment_date>2014-10-29 17:49:02</wp:comment_date>
			<wp:comment_date_gmt>2014-10-30 00:49:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey. In the South, I can type faster than some people talking with the southern drawl.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1414630142.877825;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1414631182.62345;s:7:"message";s:60:"nikhilgopal@gmail.com changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:21:"nikhilgopal@gmail.com";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Getting Protein-Protein Interaction Data Into Neo4J With Python </title>
		<link>http://www.nikhilgopal.com/getting-protein-protein-interaction-data-into-neo4j-with-python/</link>
		<pubDate>Sun, 23 Feb 2014 00:06:39 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[I started playing with <a href="http://www.neo4j.org/" target="_blank">Neo4J</a> (the graph database). It seems like great software, but I found the documentation pretty sparse and opaque. It took me 16 hours to do all of this, so I'm hoping it will save you 15.5 hours of fumbling around the Internet.

<strong>Why is Neo4j powerful?</strong>
<blockquote>"A traditional relational database may tell you the average age of everyone in this pub, but a graph database will tell you who is most likely to buy you a beer."

<i>Andreas Kollegger</i></blockquote>
<strong>Installing</strong>

To install on Mac, use <a href="http://brew.sh/" target="_blank">homebrew</a> on terminal:

"brew install neo4j"

Start the server.

"neo4j start"

Note: stop the server with the "neo4j stop" command

The database exists in the "/usr/local/Cellar/neo4j/1.9.4/libexec/data/graph.db/" directory. If you delete the files in here, you've deleted your database (and can repopulate it). I've nuked by database a few times while debugging. Note that homebrew install Neo4j version 1.9.4 and that the latest version is currently 2.0.

<strong>Getting Data In</strong>

I tried using <a href="http://gephi.org" target="_blank">Gephi</a> and the <a href="https://gephi.org/2011/gephi-adds-neo4j-graph-database-support-screencast/" target="_blank">Neo4j plugin</a> that is available. I wasn't quite able to get the data to look the way I wanted. I would have loved to use this plugin, but I just couldn't figure out how to get everything to play together nicely. Plus, whenever I'd export the neo4j database it would corrupt the files and the server would crash--I'm sure this had more to do with what I was doing and less with the software though.

There is a <a href="http://neo4j-rest-client.readthedocs.org/en/latest/info.html" target="_blank">Python wrapper</a> you can download. Two Javascript wrapper exist, but I haven't used either of them--maybe in the future if I create a front-end. Install the Python library using the typical commands:

"pip install neo4jrestclient" or "easy_install neo4sjrestclient"

Here is my code to get the data into the database (Python):

[gist]https://gist.github.com/ngopal/9164149[/gist]

We can watch the number of nodes and relationships grow.

<a href="http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.45.18.png"><img class="size-full wp-image-233 aligncenter" alt="Screenshot 2014-02-22 15.45.18" src="http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.45.18.png" width="1215" height="768" /></a>

Now we can run a basic query on the data from node to node using Cypher. Here is the code:

[gist]https://gist.github.com/ngopal/9163968[/gist]

And here is the output:

<a href="http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.46.28.png"><img class="size-full wp-image-232 aligncenter" alt="Screenshot 2014-02-22 15.46.28" src="http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.46.28.png" width="1215" height="768" /></a>

And another example:

<a href="http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.47.04.png"><img class="alignnone size-full wp-image-231" alt="Screenshot 2014-02-22 15.47.04" src="http://www.nikhilgopal.com/wp-content/uploads/2014/02/Screenshot-2014-02-22-15.47.04.png" width="682" height="216" /></a>

I'm planning on eventually visualizing this data in D3. If you want to stay in the loop, sign up and I'll keep you updated (your email won't be shared with anyone else):

<center>
<!-- Begin MailChimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/slim-081711.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
<form action="http://nikhilgopal.us3.list-manage.com/subscribe/post?u=247178139134c0616342e1953&amp;id=a6fef99460" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
	<label for="mce-EMAIL">Subscribe for updates!</label>
	<input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;"><input type="text" name="b_247178139134c0616342e1953_a6fef99460" value=""></div>
	<div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
</form>
</div>
</center>

<!--End mc_embed_signup-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2014-02-22 16:06:39</wp:post_date>
		<wp:post_date_gmt>2014-02-23 00:06:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-protein-protein-interaction-data-into-neo4j-with-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="graph"><![CDATA[graph]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>show_client_logos</wp:meta_key>
			<wp:meta_value><![CDATA[show_client_logos-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>149</wp:comment_id>
			<wp:comment_author><![CDATA[Nick]]></wp:comment_author>
			<wp:comment_author_email>techgeek14@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nickrobison.com</wp:comment_author_url>
			<wp:comment_author_IP>69.91.218.217</wp:comment_author_IP>
			<wp:comment_date>2014-03-03 08:15:16</wp:comment_date>
			<wp:comment_date_gmt>2014-03-03 16:15:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dude, quite impressive. Glad you hung in there and got it working.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394003896.0331249;s:7:"message";s:60:"nikhilgopal@gmail.com changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:21:"nikhilgopal@gmail.com";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393863316.656878;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393895691.9210639;s:7:"message";s:60:"nikhilgopal@gmail.com changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:21:"nikhilgopal@gmail.com";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>651</wp:comment_id>
			<wp:comment_author><![CDATA[Piyush]]></wp:comment_author>
			<wp:comment_author_email>puthra2009@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>42.104.62.203</wp:comment_author_IP>
			<wp:comment_date>2014-06-19 15:05:30</wp:comment_date>
			<wp:comment_date_gmt>2014-06-19 22:05:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When I run the python file in Mac Terminal, i get the following error:
Traceback (most recent call last):
  File "populate_running_db.py", line 35, in 
    if "null" in node_objects[gene1]:
KeyError: 'ERCC3'

Please help.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>593</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403215530.5273449;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>675</wp:comment_id>
			<wp:comment_author><![CDATA[Piyush]]></wp:comment_author>
			<wp:comment_author_email>purelasertech@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>42.104.63.2</wp:comment_author_IP>
			<wp:comment_date>2014-06-23 03:35:16</wp:comment_date>
			<wp:comment_date_gmt>2014-06-23 10:35:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I tried to follow the instructions given in the python script. When I execute the codes, I get the following error :
Traceback (most recent call last):
  File "populate_running_db.py", line 35, in 
    if "null" in node_objects[gene1]:
KeyError: 'ERCC3'

I am not able to figure out what the exact problem is.  Any help on the same will be highly appreciated.

Thank you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>651</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403519716.1483569;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>593</wp:comment_id>
			<wp:comment_author><![CDATA[Nikhil Gopal]]></wp:comment_author>
			<wp:comment_author_email>nikhilgopal@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nikhilgopal.com</wp:comment_author_url>
			<wp:comment_author_IP>69.91.150.236</wp:comment_author_IP>
			<wp:comment_date>2014-06-11 08:48:32</wp:comment_date>
			<wp:comment_date_gmt>2014-06-11 15:48:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I downloaded the file from here: <a href="http://cpdb.molgen.mpg.de/CPDB/daccess" title="http://cpdb.molgen.mpg.de/CPDB/daccess" target="_blank" rel="nofollow">http://cpdb.molgen.mpg.de/CPDB/daccess</a>

Let me know if you can't find the appropriate file and I'll see if I can dig it up and upload it somewhere for download.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>590</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402501713.0106289;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:21:"nikhilgopal@gmail.com";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>590</wp:comment_id>
			<wp:comment_author><![CDATA[Ponty]]></wp:comment_author>
			<wp:comment_author_email>purelasertech@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.181.173.77</wp:comment_author_IP>
			<wp:comment_date>2014-06-10 22:57:57</wp:comment_date>
			<wp:comment_date_gmt>2014-06-11 05:57:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Where do I get the Consensus_Human_PPI files from?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402501642.937834;s:7:"message";s:60:"nikhilgopal@gmail.com changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:21:"nikhilgopal@gmail.com";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402467665.058656;s:7:"message";s:55:"Akismet cleared this comment during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402466277.1251979;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Visualizing Look and Say Sequences with D3</title>
		<link>http://www.nikhilgopal.com/visualizing-look-and-say-sequences-with-d3/</link>
		<pubDate>Tue, 01 Apr 2014 04:29:58 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.nikhilgopal.com/wp-content/uploads/2014/03/Screenshot-2014-03-25-21.58.57.png"><img class="alignnone size-full wp-image-257" alt="Screenshot 2014-03-25 21.58.57" src="http://www.nikhilgopal.com/wp-content/uploads/2014/03/Screenshot-2014-03-25-21.58.57.png" width="950" height="488" /></a>

<a href="https://oeis.org/A005150" target="_blank">Look and Say Sequences</a>:

The way this works is you look at the first number (which is 1 in this case), you say it out loud ("one 1"), and that becomes the second number in the sequence (11). Then we rinse and repeat--we look at 11, say it out loud ("two 1's"), and that becomes the next number in the sequence (21).

Here are the first ten:
1
11
21
1211
111221
312211
13112221
1113213211
31131211131221
13211311123113112211

The visualization you are looking at above is sequence number 25. The coordinates start at (0,0). Each number in the sequence is multiplied by (0,1) Up, (-1,0) left, (1,0) right, and (0,-1) down in turn. All of the coordinates are converted to absolute values so they trend from bottom left to top right on the canvas.

You can view the block here: <a href="http://bl.ocks.org/ngopal/9864113" target="_blank">http://bl.ocks.org/ngopal/9864113</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2014-03-31 21:29:58</wp:post_date>
		<wp:post_date_gmt>2014-04-01 04:29:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizing-look-and-say-sequences-with-d3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;How To&quot; &gt; &quot;Learn To&quot;</title>
		<link>http://www.nikhilgopal.com/how-to-learn-to/</link>
		<pubDate>Wed, 09 Apr 2014 23:02:37 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=264</guid>
		<description></description>
		<content:encoded><![CDATA[People seem to search for "how to" much more often than they seem to search for "learn to":

<script type="text/javascript" src="//www.google.com/trends/embed.js?hl=en-US&q=learn+to+*,+how+to+*,+why+*&cmpt=q&geo=US&content=1&cid=TIMESERIES_GRAPH_AVERAGES_CHART&export=5&w=500&h=330"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2014-04-09 16:02:37</wp:post_date>
		<wp:post_date_gmt>2014-04-09 23:02:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-learn-to</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Javascript Masterclass On How To Be An Expert And Introduction to Angular</title>
		<link>http://www.nikhilgopal.com/javascript-masterclass-on-how-to-be-an-expert-and-introduction-to-angular/</link>
		<pubDate>Mon, 09 Jun 2014 19:37:09 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=288</guid>
		<description></description>
		<content:encoded><![CDATA[I found these resources useful. I don't know Kung Fu yet, but I'm getting closer.

Javascript Masterclass On How To Be An Expert:
<iframe width="640" height="360" src="//www.youtube.com/embed/v0TFmdO4ZP0" frameborder="0" allowfullscreen></iframe>

Intro to Angular:
<iframe width="640" height="480" src="//www.youtube.com/embed/M4spK4QeUKY" frameborder="0" allowfullscreen></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2014-06-09 12:37:09</wp:post_date>
		<wp:post_date_gmt>2014-06-09 19:37:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-masterclass-on-how-to-be-an-expert-and-introduction-to-angular</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[javascript-masterclass-on-how-to-be-an-expert]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Applying A Divergent Color Scale to A Gene Expression Heat Map</title>
		<link>http://www.nikhilgopal.com/applying-a-divergent-color-scale-to-a-gene-expression-heat-map/</link>
		<pubDate>Fri, 14 Nov 2014 06:35:12 +0000</pubDate>
		<dc:creator><![CDATA[nikhilgopal@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikhilgopal.com/?p=368</guid>
		<description></description>
		<content:encoded><![CDATA[<em>Estimated Read Time: Under 5 minutes</em>

This is a quick post about a quick little experiment I tried lately. I saw a <a href="https://medium.com/matter/the-trouble-with-the-purple-election-map-31e6cb9f1827?source=tw-lo_d2937f3b017d-1415167125872">recent post</a> about how red and blue color scales on political heat maps can be misleading--primarily because human perception is not very good at discriminating between shades of purple in the presented scenario. 

Since gene expression heat maps are virtually a right of passage in bioinformatics, I thought I'd try and rescale the colors on a gene expression heat map to a properly divergent color scale and visualize the results. Results Below:

<a href="http://www.nikhilgopal.com/wp-content/uploads/2014/11/old10scale.jpeg"><img src="http://www.nikhilgopal.com/wp-content/uploads/2014/11/old10scale.jpeg" alt="old10scale" width="559" height="351" class="alignnone size-full wp-image-371" /></a>

<a href="http://www.nikhilgopal.com/wp-content/uploads/2014/11/new.jpeg"><img src="http://www.nikhilgopal.com/wp-content/uploads/2014/11/new.jpeg" alt="new" width="559" height="351" class="alignnone size-full wp-image-372" /></a>

At the top is a plot (green and blue) generated using the <a href="http://www2.warwick.ac.uk/fac/sci/moac/people/students/peter_cock/r/heatmap/">code available on Peter Cock's website</a> (but modified to only use 10 colors on the scale). Below that is the plot (red and blue) generated with my modified version.

And of course, code for your consumption:

<script src="https://gist.github.com/ngopal/2b25477d21632fe41045.js"></script>

Thanks to <a href="http://www.sandia.gov/~kmorel/documents/ColorMaps/">Kenneth Moreland's research on color scales, and José Gama's implementation in R</a> (now part of Rgnuplot), all it took was a one line modification of Peter's code to switch to the new divergent color scale!

The new scale does seem to help us visually discriminate between the elements in the "muddy" area of the left plot. However, since the use of the heat map in bioinformatics is more aesthetic than functional, I'm afraid the fruits seem to stop there. Although this is paints a prettier picture, the hierarchical clustering results remain unchanged. Fun to try though! And now we know a divergent color scale function implementation exists in R!

It always takes a while to write a blog post. In return, all I ask is that you share. Also, if you are a Python or R coder and would like to learn to use D3.js, please check out my O'Reilly Media product, <a href="http://bit.ly/d3coffeescript">D3 and Coffeescript: A Python Programmer's Introduction to Web Visualizations</a>.

<!-- Begin MailChimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/slim-081711.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
<form action="//nikhilgopal.us3.list-manage.com/subscribe/post?u=247178139134c0616342e1953&amp;id=88361a83c7" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
	<label for="mce-EMAIL">Subscribe for more visualization and code posts</label>
	<input type="email" value="Oh man! I can't type in my email fast enough.." name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;"><input type="text" name="b_247178139134c0616342e1953_88361a83c7" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Update Me" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>

<!--End mc_embed_signup-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>368</wp:post_id>
		<wp:post_date>2014-11-13 22:35:12</wp:post_date>
		<wp:post_date_gmt>2014-11-14 06:35:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>applying-a-divergent-color-scale-to-a-gene-expression-heat-map</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[R]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[R]]></category>
		<category domain="category" nicename="visualization"><![CDATA[visualization]]></category>
		<category domain="post_tag" nicename="visualization"><![CDATA[visualization]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>disable_featured_image</wp:meta_key>
			<wp:meta_value><![CDATA[disable_featured_image-no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_video</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_audio_oga</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>single_format_quote_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
